<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>喝茶吗</title>
      <link href="2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/"/>
      <url>2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/</url>
      
        <content type="html"><![CDATA[<h1 id="一个神奇的加密"><a href="#一个神奇的加密" class="headerlink" title="一个神奇的加密"></a>一个神奇的加密</h1><a id="more"></a><h2 id="加密原理"><a href="#加密原理" class="headerlink" title="加密原理"></a>加密原理</h2><p><a href="https://blog.csdn.net/gsls200808/article/details/48243019">参考链接</a></p><h3 id="tea加密"><a href="#tea加密" class="headerlink" title="tea加密"></a>tea加密</h3><p>在密码学中，微型加密算法（Tiny Encryption Algorithm，TEA）是一种易于描述和执行的块密码，通常只需要很少的代码就可实现。其设计者是剑桥大学计算机实验室的大卫·惠勒与罗杰·尼达姆。这项技术最初于1994年提交给鲁汶的快速软件加密的研讨会上，并在该研讨会上演讲中首次发表。</p><p>在给出的代码中：加密使用的数据为2个32位无符号整数，密钥为4个32位无符号整数即密钥长度为128位<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/1.png"><br>算法实现：</p><p>C语言代码（需支持C99）</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line"> </span><br><span class="line">&#x2F;&#x2F;加密函数</span><br><span class="line">void encrypt (uint32_t* v, uint32_t* k) &#123;</span><br><span class="line">    uint32_t v0&#x3D;v[0], v1&#x3D;v[1], sum&#x3D;0, i;           &#x2F;* set up *&#x2F;</span><br><span class="line">    uint32_t delta&#x3D;0x9e3779b9;                     &#x2F;* a key schedule constant *&#x2F;</span><br><span class="line">    uint32_t k0&#x3D;k[0], k1&#x3D;k[1], k2&#x3D;k[2], k3&#x3D;k[3];   &#x2F;* cache key *&#x2F;</span><br><span class="line">    for (i&#x3D;0; i &lt; 32; i++) &#123;                       &#x2F;* basic cycle start *&#x2F;</span><br><span class="line">        sum +&#x3D; delta;</span><br><span class="line">        v0 +&#x3D; ((v1&lt;&lt;4) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;5) + k1);</span><br><span class="line">        v1 +&#x3D; ((v0&lt;&lt;4) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;5) + k3);</span><br><span class="line">    &#125;                                              &#x2F;* end cycle *&#x2F;</span><br><span class="line">    v[0]&#x3D;v0; v[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;解密函数</span><br><span class="line">void decrypt (uint32_t* v, uint32_t* k) &#123;</span><br><span class="line">    uint32_t v0&#x3D;v[0], v1&#x3D;v[1], sum&#x3D;0xC6EF3720, i;  &#x2F;* set up *&#x2F;</span><br><span class="line">    uint32_t delta&#x3D;0x9e3779b9;                     &#x2F;* a key schedule constant *&#x2F;</span><br><span class="line">    uint32_t k0&#x3D;k[0], k1&#x3D;k[1], k2&#x3D;k[2], k3&#x3D;k[3];   &#x2F;* cache key *&#x2F;</span><br><span class="line">    for (i&#x3D;0; i&lt;32; i++) &#123;                         &#x2F;* basic cycle start *&#x2F;</span><br><span class="line">        v1 -&#x3D; ((v0&lt;&lt;4) + k2) ^ (v0 + sum) ^ ((v0&gt;&gt;5) + k3);</span><br><span class="line">        v0 -&#x3D; ((v1&lt;&lt;4) + k0) ^ (v1 + sum) ^ ((v1&gt;&gt;5) + k1);</span><br><span class="line">        sum -&#x3D; delta;</span><br><span class="line">    &#125;                                              &#x2F;* end cycle *&#x2F;</span><br><span class="line">    v[0]&#x3D;v0; v[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t v[2]&#x3D;&#123;1,2&#125;,k[4]&#x3D;&#123;2,2,3,4&#125;;</span><br><span class="line">    &#x2F;&#x2F; v为要加密的数据是两个32位无符号整数</span><br><span class="line">    &#x2F;&#x2F; k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span><br><span class="line">    printf(&quot;加密前原始数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    encrypt(v, k);</span><br><span class="line">    printf(&quot;加密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    decrypt(v, k);</span><br><span class="line">    printf(&quot;解密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：1347371722 925494771<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.020 s<br>Press any key to continue.</p></blockquote><h3 id="xtea加密"><a href="#xtea加密" class="headerlink" title="xtea加密"></a>xtea加密</h3><p>XTEA是TEA的升级版，增加了更多的密钥表，移位和异或操作等等，设计者是Roger Needham, David Wheeler<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/2.png"><br>算法实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line"> </span><br><span class="line">&#x2F;* take 64 bits of data in v[0] and v[1] and 128 bits of key[0] - key[3] *&#x2F;</span><br><span class="line"> </span><br><span class="line">void encipher(unsigned int num_rounds, uint32_t v[2], uint32_t const key[4]) &#123;</span><br><span class="line">    unsigned int i;</span><br><span class="line">    uint32_t v0&#x3D;v[0], v1&#x3D;v[1], sum&#x3D;0, delta&#x3D;0x9E3779B9;</span><br><span class="line">    for (i&#x3D;0; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v0 +&#x3D; (((v1 &lt;&lt; 4) ^ (v1 &gt;&gt; 5)) + v1) ^ (sum + key[sum &amp; 3]);</span><br><span class="line">        sum +&#x3D; delta;</span><br><span class="line">        v1 +&#x3D; (((v0 &lt;&lt; 4) ^ (v0 &gt;&gt; 5)) + v0) ^ (sum + key[(sum&gt;&gt;11) &amp; 3]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[0]&#x3D;v0; v[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">void decipher(unsigned int num_rounds, uint32_t v[2], uint32_t const key[4]) &#123;</span><br><span class="line">    unsigned int i;</span><br><span class="line">    uint32_t v0&#x3D;v[0], v1&#x3D;v[1], delta&#x3D;0x9E3779B9, sum&#x3D;delta*num_rounds;</span><br><span class="line">    for (i&#x3D;0; i &lt; num_rounds; i++) &#123;</span><br><span class="line">        v1 -&#x3D; (((v0 &lt;&lt; 4) ^ (v0 &gt;&gt; 5)) + v0) ^ (sum + key[(sum&gt;&gt;11) &amp; 3]);</span><br><span class="line">        sum -&#x3D; delta;</span><br><span class="line">        v0 -&#x3D; (((v1 &lt;&lt; 4) ^ (v1 &gt;&gt; 5)) + v1) ^ (sum + key[sum &amp; 3]);</span><br><span class="line">    &#125;</span><br><span class="line">    v[0]&#x3D;v0; v[1]&#x3D;v1;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t v[2]&#x3D;&#123;1,2&#125;;</span><br><span class="line">    uint32_t const k[4]&#x3D;&#123;2,2,3,4&#125;;</span><br><span class="line">    unsigned int r&#x3D;32;&#x2F;&#x2F;num_rounds建议取值为32</span><br><span class="line">    &#x2F;&#x2F; v为要加密的数据是两个32位无符号整数</span><br><span class="line">    &#x2F;&#x2F; k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span><br><span class="line">    printf(&quot;加密前原始数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    encipher(r, v, k);</span><br><span class="line">    printf(&quot;加密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    decipher(r, v, k);</span><br><span class="line">    printf(&quot;解密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：1345390024 2801624574<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.034 s<br>Press any key to continue.</p></blockquote><h3 id="xxtea加密"><a href="#xxtea加密" class="headerlink" title="xxtea加密"></a>xxtea加密</h3><p>XXTEA，又称Corrected Block TEA，是XTEA的升级版 ，设计者是Roger Needham, David Wheeler<br>加密过程：<br><img src="/2021/03/20/%E5%96%9D%E8%8C%B6%E5%90%97/3.png"><br>算法实现：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;stdint.h&gt;</span><br><span class="line">#define DELTA 0x9e3779b9</span><br><span class="line">#define MX (((z&gt;&gt;5^y&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)) ^ ((sum^y) + (key[(p&amp;3)^e] ^ z)))</span><br><span class="line"> </span><br><span class="line">void btea(uint32_t *v, int n, uint32_t const key[4])</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t y, z, sum;</span><br><span class="line">    unsigned p, rounds, e;</span><br><span class="line">    if (n &gt; 1)            &#x2F;* Coding Part *&#x2F;</span><br><span class="line">    &#123;</span><br><span class="line">        rounds &#x3D; 6 + 52&#x2F;n;</span><br><span class="line">        sum &#x3D; 0;</span><br><span class="line">        z &#x3D; v[n-1];</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            sum +&#x3D; DELTA;</span><br><span class="line">            e &#x3D; (sum &gt;&gt; 2) &amp; 3;</span><br><span class="line">            for (p&#x3D;0; p&lt;n-1; p++)</span><br><span class="line">            &#123;</span><br><span class="line">                y &#x3D; v[p+1];</span><br><span class="line">                z &#x3D; v[p] +&#x3D; MX;</span><br><span class="line">            &#125;</span><br><span class="line">            y &#x3D; v[0];</span><br><span class="line">            z &#x3D; v[n-1] +&#x3D; MX;</span><br><span class="line">        &#125;</span><br><span class="line">        while (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">    else if (n &lt; -1)      &#x2F;* Decoding Part *&#x2F;</span><br><span class="line">    &#123;</span><br><span class="line">        n &#x3D; -n;</span><br><span class="line">        rounds &#x3D; 6 + 52&#x2F;n;</span><br><span class="line">        sum &#x3D; rounds*DELTA;</span><br><span class="line">        y &#x3D; v[0];</span><br><span class="line">        do</span><br><span class="line">        &#123;</span><br><span class="line">            e &#x3D; (sum &gt;&gt; 2) &amp; 3;</span><br><span class="line">            for (p&#x3D;n-1; p&gt;0; p--)</span><br><span class="line">            &#123;</span><br><span class="line">                z &#x3D; v[p-1];</span><br><span class="line">                y &#x3D; v[p] -&#x3D; MX;</span><br><span class="line">            &#125;</span><br><span class="line">            z &#x3D; v[n-1];</span><br><span class="line">            y &#x3D; v[0] -&#x3D; MX;</span><br><span class="line">            sum -&#x3D; DELTA;</span><br><span class="line">        &#125;</span><br><span class="line">        while (--rounds);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    uint32_t v[2]&#x3D; &#123;1,2&#125;;</span><br><span class="line">    uint32_t const k[4]&#x3D; &#123;2,2,3,4&#125;;</span><br><span class="line">    int n&#x3D; 2; &#x2F;&#x2F;n的绝对值表示v的长度，取正表示加密，取负表示解密</span><br><span class="line">    &#x2F;&#x2F; v为要加密的数据是两个32位无符号整数</span><br><span class="line">    &#x2F;&#x2F; k为加密解密密钥，为4个32位无符号整数，即密钥长度为128位</span><br><span class="line">    printf(&quot;加密前原始数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    btea(v, n, k);</span><br><span class="line">    printf(&quot;加密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    btea(v, -n, k);</span><br><span class="line">    printf(&quot;解密后的数据：%u %u\n&quot;,v[0],v[1]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>执行结果：</p><blockquote><p>加密前原始数据：1 2<br>加密后的数据：3238569099 2059193138<br>解密后的数据：1 2</p><p>Process returned 0 (0x0)   execution time : 0.369 s<br>Press any key to continue.</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>base64在逆向中的应用</title>
      <link href="2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/"/>
      <url>2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="base64的原理和C语言实现"><a href="#base64的原理和C语言实现" class="headerlink" title="base64的原理和C语言实现"></a>base64的原理和C语言实现</h1><a id="more"></a><p>原理参考此篇文章 <a href="https://blog.csdn.net/wo541075754/article/details/81734770">链接</a></p><p>C语言代码实现</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line">#include&lt;stdio.h&gt;</span><br><span class="line">#include&lt;stdlib.h&gt;</span><br><span class="line">#include&lt;math.h&gt;</span><br><span class="line">#include&lt;string.h&gt;</span><br><span class="line"></span><br><span class="line">char table[65]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">char padding_char&#x3D;&#39;&#x3D;&#39;;</span><br><span class="line"></span><br><span class="line">int findchr(char *array,char ch)&#123;</span><br><span class="line">    for(int i&#x3D;0;i&lt;strlen(array);i++)&#123;</span><br><span class="line">        if(array[i]&#x3D;&#x3D;ch)&#123;</span><br><span class="line">            return i;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void base64_encode(char *src,char *result)&#123;</span><br><span class="line">    int fill_bit&#x3D;0;</span><br><span class="line">    int data_length;</span><br><span class="line">    int result_length;</span><br><span class="line">    int index;</span><br><span class="line">    _Bool full&#x3D;trunc;</span><br><span class="line">    data_length&#x3D;strlen(src);</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;length:%d\n&quot;,data_length);</span><br><span class="line">    fill_bit&#x3D;((3-strlen(src)%3)%3); &#x2F;&#x2F;计算未满字节，注意除去3的情况</span><br><span class="line">    for(int k&#x3D;0;k&lt;fill_bit;k++)&#123;</span><br><span class="line">        src[data_length+k]&#x3D;&#39;\0&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    int j&#x3D;0;</span><br><span class="line">    for(int i&#x3D;0;i&lt;data_length;i+&#x3D;3)&#123;</span><br><span class="line">        index&#x3D;src[i]&gt;&gt;2;</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;((src[i]&amp;3)&lt;&lt;4)+(src[i+1]&gt;&gt;4);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;((src[i+1]&amp;15)&lt;&lt;2)+(src[i+2]&gt;&gt;6);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        index&#x3D;(src[i+2]&amp;63);</span><br><span class="line">        result[j++]&#x3D;table[index];</span><br><span class="line">        &#x2F;&#x2F;&lt;&lt; &gt;&gt; 运算符的优先级低于+ -，注意加括号</span><br><span class="line">    &#125;</span><br><span class="line">    result_length&#x3D;strlen(result);</span><br><span class="line">    for(int k&#x3D;0;k&lt;fill_bit;k++)&#123;</span><br><span class="line">        result[result_length-1-k]&#x3D;padding_char; &#x2F;&#x2F;把多余的A字符替换为&#x3D;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">void base64_decode(char *src,char *result)&#123;</span><br><span class="line">    int base_len;</span><br><span class="line">    int j&#x3D;0;</span><br><span class="line">    base_len&#x3D;strlen(src);</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;length:%d\n&quot;,base_len);</span><br><span class="line">    for(int i&#x3D;0;i&lt;base_len;i++)&#123;</span><br><span class="line">        if(src[i]&#x3D;&#x3D;padding_char)</span><br><span class="line">            src[i]&#x3D;&#39;A&#39;;</span><br><span class="line">    &#125;</span><br><span class="line">    &#x2F;&#x2F;printf(&quot;%s\n&quot;,src);</span><br><span class="line">    for(int i&#x3D;0;i&lt;base_len;i+&#x3D;4)&#123;</span><br><span class="line">        result[j++]&#x3D;(findchr(table,src[i])&lt;&lt;2)+(findchr(table,src[i+1])&gt;&gt;4);</span><br><span class="line">        result[j++]&#x3D;(findchr(table,src[i+1])&lt;&lt;4)+(findchr(table,src[i+2])&gt;&gt;2);</span><br><span class="line">        result[j++]&#x3D;((findchr(table,src[i+2])&amp;3)&lt;&lt;6)+(findchr(table,src[i+3]));</span><br><span class="line">        &#x2F;&#x2F;注意编码是table对应的编码，不是原来的ascii码</span><br><span class="line">        &#x2F;&#x2F;按位运算符优先级低于位移运算符，注意括号</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int main()&#123;</span><br><span class="line">    char words[100]&#x3D;&quot;abc&quot;;</span><br><span class="line">    char en_words[100]&#x3D;&quot;&quot;;</span><br><span class="line">    char de_words[100]&#x3D;&quot;&quot;;</span><br><span class="line">    base64_encode(words,en_words);</span><br><span class="line">    printf(&quot;encode:%s\n&quot;,en_words);</span><br><span class="line">    base64_decode(en_words,de_words);</span><br><span class="line">    printf(&quot;decode:%s\n&quot;,de_words);</span><br><span class="line">    return 0;</span><br><span class="line">    &#x2F;&#x2F;摘抄于https:&#x2F;&#x2F;eqqie.cn&#x2F;index.php&#x2F;laji_note&#x2F;785&#x2F;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="base64在逆向中的应用"><a href="#base64在逆向中的应用" class="headerlink" title="base64在逆向中的应用"></a>base64在逆向中的应用</h1><h2 id="1-直接使用"><a href="#1-直接使用" class="headerlink" title="1.直接使用"></a>1.直接使用</h2><h3 id="flag为解密结果"><a href="#flag为解密结果" class="headerlink" title="flag为解密结果"></a>flag为解密结果</h3><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/1.PNG"></p><p>图中的flag为ZmxhZ3t5b3VfZ2V0X2l0fQ==，经base64解码得</p><blockquote><p>flag{you_get_it}</p></blockquote><h3 id="flag为加密结果"><a href="#flag为加密结果" class="headerlink" title="flag为加密结果"></a>flag为加密结果</h3><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/2.PNG"></p><p>图中的str也是ZmxhZ3t5b3VfZ2V0X2l0fQ==，经base64加密得</p><blockquote><p>flag：Wm14aFozdDViM1ZmWjJWMFgybDBmUT09</p></blockquote><h3 id="如何判断是加密还是解密"><a href="#如何判断是加密还是解密" class="headerlink" title="如何判断是加密还是解密"></a>如何判断是加密还是解密</h3><p>我们可以观察一下密码函数</p><blockquote><p>加密<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/3.PNG"><br>解密<br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/4.PNG"></p></blockquote><p>可以发现，加密函数下有一个padding_char，点进去是一个‘=’，那这就是加密函数。<br>或者有‘&amp; 3’‘&amp; 0xf’‘&amp; 0x3f’‘= 61’,也是加密函数。<br>遇到此类题目时，大多数加密的。懒得分析也可以都试试，这也就是一会儿的时间。<br>最后的那个判断还可以和异或联系，注意一下就行，这里便不再举例，<br>下面的类型我只说加密，加密和解密的思路都是一样的。</p><h2 id="2-变化字母表"><a href="#2-变化字母表" class="headerlink" title="2.变化字母表"></a>2.变化字母表</h2><p>将base64原来的字母表改变顺序、位置得到新的加密结果。<br>有两种变化方式：1.直接改变；2.用函数改变</p><h3 id="直接改变"><a href="#直接改变" class="headerlink" title="直接改变"></a>直接改变</h3><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/5.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/6.PNG"></p><p>这一题的字母表改为了’0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+/‘，根据这个字母表和原版字母表的差别，将密文修改为正确的密文。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;pCNxpTJkq6AAnSAAnSpIg6tZ&quot;;</span><br><span class="line">    int i,j;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Thi$_i$_fl@g&#125;</span><br></pre></td></tr></table></figure><h3 id="用函数改变"><a href="#用函数改变" class="headerlink" title="用函数改变"></a>用函数改变</h3><p>这个是调用一个外部函数改变密码表的顺序。</p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/7.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/8.PNG"></p><p>这种方式比直接改变复杂了一点点。但也不难。<br>这里用了两次waaaagh函数，另一次再base64_encode里，没有显示。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;tSdNt3ZouGQQr2QQr2tYkGx9&quot;;</span><br><span class="line">    int i,j;</span><br><span class="line">    int n&#x3D;10;</span><br><span class="line">char ch;</span><br><span class="line">while(n&lt;40)</span><br><span class="line">&#123;</span><br><span class="line">ch&#x3D;b[n];</span><br><span class="line">b[n]&#x3D;b[n+10];</span><br><span class="line">b[n+10]&#x3D;ch;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">n&#x3D;10;</span><br><span class="line">while(n&lt;40)</span><br><span class="line">&#123;</span><br><span class="line">ch&#x3D;b[n];</span><br><span class="line">b[n]&#x3D;b[n+10];</span><br><span class="line">b[n+10]&#x3D;ch;</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;Thi$_i$_fl@g&#125;</span><br></pre></td></tr></table></figure><h1 id="buuctf"><a href="#buuctf" class="headerlink" title="buuctf"></a>buuctf</h1><h2 id="level3"><a href="#level3" class="headerlink" title="level3"></a>level3</h2><p><a href="https://buuoj.cn/challenges#[WUSTCTF2020]level3">题目链接</a><br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/9.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/10.PNG"></p><p>和上面的那题差不多。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i,j,v0,result;</span><br><span class="line">char ch[]&#x3D;&quot;d2G0ZjLwHjS7DmOzZAY0X2lzX3CoZV9zdNOydO9vZl9yZXZlcnGlfD&#x3D;&#x3D;&quot;;</span><br><span class="line">char base64_table[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">char base64_table1[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line"> for ( i &#x3D; 0; i &lt;&#x3D; 9; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">    v0 &#x3D; base64_table[i];</span><br><span class="line">    base64_table[i] &#x3D; base64_table[19 - i];</span><br><span class="line">    result &#x3D; 19 - i;</span><br><span class="line">    base64_table[result] &#x3D; v0;</span><br><span class="line">    &#125;</span><br><span class="line">for(i&#x3D;0;i&lt;strlen(ch);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(base64_table1);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(base64_table[j]&#x3D;&#x3D;ch[i])</span><br><span class="line">            &#123;</span><br><span class="line">                ch[i]&#x3D;base64_table1[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(ch);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,ch[i]);</span><br><span class="line">    &#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Base64_is_the_start_of_reverse}</p></blockquote><h2 id="usualCrypt"><a href="#usualCrypt" class="headerlink" title="usualCrypt"></a>usualCrypt</h2><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]usualCrypt">题目链接</a><br><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/11.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/12.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/13.PNG"></p><p><img src="/2021/03/20/base64%E5%9C%A8%E9%80%86%E5%90%91%E4%B8%AD%E7%9A%84%E5%BA%94%E7%94%A8/14.PNG"></p><p>这一题除了字母表的变化，还将密文的字母大小写交换了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">char a[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char b[]&#x3D;&quot;ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+&#x2F;&quot;;</span><br><span class="line">    char c[]&#x3D;&quot;zMXHz3TIgnxLxJhFAdtZn2fFk3lYCrtPC2l9&quot;;</span><br><span class="line">    int i,j,v1;</span><br><span class="line">    int result &#x3D; 6;</span><br><span class="line">    for (i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">    if ( c[i] &gt;&#x3D; &#39;a&#39; &amp;&amp; c[i] &lt;&#x3D; &#39;z&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">        c[i] -&#x3D; 32;</span><br><span class="line">    &#125;</span><br><span class="line">      else if ( c[i] &gt;&#x3D; &#39;A&#39; &amp;&amp; c[i] &lt;&#x3D; &#39;Z&#39; )</span><br><span class="line">      &#123;</span><br><span class="line">        c[i] +&#x3D; 32;</span><br><span class="line">      &#125;</span><br><span class="line">      else</span><br><span class="line">      &#123;</span><br><span class="line">      c[i] &#x3D; c[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">  do</span><br><span class="line">  &#123;</span><br><span class="line">    v1 &#x3D; b[result+10];</span><br><span class="line">    b[result+10] &#x3D; b[result];</span><br><span class="line">    b[result++] &#x3D; v1;</span><br><span class="line">  &#125;</span><br><span class="line">  while ( result &lt; 15 );</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;strlen(a);j++)</span><br><span class="line">        &#123;</span><br><span class="line">            if(b[j]&#x3D;&#x3D;c[i])</span><br><span class="line">            &#123;</span><br><span class="line">                c[i]&#x3D;a[j];</span><br><span class="line">                break;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;strlen(c);i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%c&quot;,c[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{bAse64_h2s_a_Surprise}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Jarvis OJ</title>
      <link href="2021/03/03/Jarvis-OJ/"/>
      <url>2021/03/03/Jarvis-OJ/</url>
      
        <content type="html"><![CDATA[<h1 id="stheasy"><a href="#stheasy" class="headerlink" title="stheasy"></a>stheasy</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1Ev7oxqScoIAP5-pb_ZKxdw">附件链接</a> 提取码：0000<br>放入ida32中，进入main函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main()</span><br><span class="line">&#123;</span><br><span class="line">  char s; &#x2F;&#x2F; [esp+10h] [ebp-110h]</span><br><span class="line"></span><br><span class="line">  printf(&quot;Input flag:&quot;);</span><br><span class="line">  sub_80485A0(&amp;s, 0x100u);</span><br><span class="line">  if ( sub_8048630(&amp;s) )</span><br><span class="line">    puts(&quot;Flag is right.&quot;);</span><br><span class="line">  else</span><br><span class="line">    puts(&quot;Flag is wrong.&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>查看sub_8048630</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl sub_8048630(char *s)</span><br><span class="line">&#123;</span><br><span class="line">  size_t v1; &#x2F;&#x2F; eax</span><br><span class="line">  int v3; &#x2F;&#x2F; edx</span><br><span class="line"></span><br><span class="line">  if ( s )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 &#x3D; strlen(s);</span><br><span class="line">    if ( v1 )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v1 &#x3D;&#x3D; 29 )</span><br><span class="line">      &#123;</span><br><span class="line">        v3 &#x3D; 0;</span><br><span class="line">        while ( s[v3] &#x3D;&#x3D; stru_8049AE0[(stru_8049B15[v3] &#x2F; 3u - 2)] )</span><br><span class="line">        &#123;</span><br><span class="line">          if ( ++v3 &#x3D;&#x3D; 29 )</span><br><span class="line">            return 1;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们需要返回值为1，判断相等就行了。<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    int a[29]&#x3D;&#123;0x48,0x5D,0x8D,0x24,0x84,0x27,0x99,0x9F,0x54,0x18,0x1E,</span><br><span class="line">0x69,0x7E,0x33,0x15,0x72,0x8D,0x33,0x24,0x63,0x21,0x54,0x0C,0x78,</span><br><span class="line">0x78,0x78,0x78,0x78,0x1B&#125;;</span><br><span class="line">char b[]&#x3D;&quot;lk2j9Gh&#125;AgfY4ds-a6QW1#k5ER_T[cvLbV7nOm3ZeX&#123;CMt8SZo]U&quot;;</span><br><span class="line">int flag[29];</span><br><span class="line">    for(i&#x3D;0;i&lt;29;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    flag[i]&#x3D;b[(a[i]&#x2F;3-2)];</span><br><span class="line">    if(flag[i]&lt;0)</span><br><span class="line">        flag[i]+&#x3D;128;</span><br><span class="line">    printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>kctf{YoU_hAVe-GOt-fLg_233333}</p></blockquote><h1 id="FindKey"><a href="#FindKey" class="headerlink" title="FindKey"></a>FindKey</h1><p><a href="https://pan.baidu.com/s/1p4533RDCl_ba51tAAZGe0g">附件链接</a> 提取码：0000<br>这是一个pyc文件，将后缀改为pyc即可反编译。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">import sys</span><br><span class="line">lookup &#x3D; [196,153, 149,206, 17,221, 10, 217, 167, 18, 36, 135, 103, 61, 111, 31, 92, 152, </span><br><span class="line">21, 228, 105, 191, 173, 41, 2, 245, 23, 144, 1, 246, 89, 178, 182, 119, 38, 85, 48, 226, </span><br><span class="line">165, 241, 166, 214, 71, 90, 151, 3, 109, 169, 150, 224, 69, 156, 158, 57, 181, 29, 200, 37, </span><br><span class="line">51, 252, 227, 93, 65, 82, 66, 80, 170, 77, 49, 177, 81, 94, 202, 107, 25, 73, 148, 98, 129, </span><br><span class="line">231, 212, 14, 84, 121, 174, 171, 64, 180, 233, 74, 140, 242, 75, 104, 253, 44, 39, 87, 86, </span><br><span class="line">27, 68, 22, 55, 76, 35, 248, 96, 5, 56, 20, 161, 213, 238, 220, 72, 100, 247, 8, 63, 249, </span><br><span class="line">145, 243, 155, 222, 122, 32, 43, 186, 0, 102, 216, 126, 15, 42, 115, 138, 240, 147, 229, </span><br><span class="line">204, 117, 223, 141, 159, 131, 232, 124, 254, 60, 116, 46, 113, 79, 16, 128, 6, 251, 40, </span><br><span class="line">205, 137, 199, 83, 54, 188, 19, 184, 201, 110, 255, 26, 91, 211, 132, 160, 168, 154, 185, </span><br><span class="line">183, 244, 78, 33, 123, 28, 59, 12, 210, 218, 47, 163, 215, 209, 108, 235, 237, 118, 101, </span><br><span class="line">24, 234, 106, 143, 88, 9, 136, 95, 30, 193, 176, 225, 198, 197, 194, 239, 134, 162, 192, </span><br><span class="line">11, 70, 58, 187, 50, 67, 236, 230, 13, 99, 190, 208, 207, 7, 53, 219, 203, 62, 114, 127, </span><br><span class="line">125, 164, 179, 175, 112, 172, 250, 133, 130, 52, 189, 97, 146, 34, 157, 120, 195, 45, 4, </span><br><span class="line">142, 139]</span><br><span class="line">pwda &#x3D; [188,155,11,58,251,208,204,202,150,120,206,237,114,92,126,6,42]</span><br><span class="line">pwdb &#x3D; [53,222,230,35,67,248,226,216,17,209,32,2,181,200,171,60,108]</span><br><span class="line">flag &#x3D; raw_input(&#39;Input your Key:&#39;).strip()</span><br><span class="line">if len(flag) !&#x3D; 17:</span><br><span class="line">    print &#39;Wrong Key!!&#39;</span><br><span class="line">    sys.exit(1)</span><br><span class="line">flag &#x3D; flag[::-1]</span><br><span class="line">for i in range(0, len(flag)):</span><br><span class="line">    if ord(flag[i]) + pwda[i] &amp; 255 !&#x3D; lookup[i + pwdb[i]]:</span><br><span class="line">        print &#39;Wrong Key!!&#39;</span><br><span class="line">        sys.exit(1)</span><br><span class="line"></span><br><span class="line">print &#39;Congratulations!!&#39;</span><br></pre></td></tr></table></figure><p>这里就是计算+倒序。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    int a[]&#x3D;&#123;196,153, 149,206, 17,221, 10, 217, 167, 18, 36, 135, 103, 61, 111, 31, 92, 152, </span><br><span class="line">    21, 228, 105, 191, 173, 41, 2, 245, 23, 144, 1, 246, 89, 178, 182, 119, 38, 85, 48, 226, </span><br><span class="line">    165, 241, 166, 214, 71, 90, 151, 3, 109, 169, 150, 224, 69, 156, 158, 57, 181, 29, 200, 37, </span><br><span class="line">    51, 252, 227, 93, 65, 82, 66, 80, 170, 77, 49, 177, 81, 94, 202, 107, 25, 73, 148, 98, 129, </span><br><span class="line">    231, 212, 14, 84, 121, 174, 171, 64, 180, 233, 74, 140, 242, 75, 104, 253, 44, 39, 87, 86, </span><br><span class="line">    27, 68, 22, 55, 76, 35, 248, 96, 5, 56, 20, 161, 213, 238, 220, 72, 100, 247, 8, 63, 249, </span><br><span class="line">    145, 243, 155, 222, 122, 32, 43, 186, 0, 102, 216, 126, 15, 42, 115, 138, 240, 147, 229, </span><br><span class="line">    204, 117, 223, 141, 159, 131, 232, 124, 254, 60, 116, 46, 113, 79, 16, 128, 6, 251, 40, </span><br><span class="line">    205, 137, 199, 83, 54, 188, 19, 184, 201, 110, 255, 26, 91, 211, 132, 160, 168, 154, 185, </span><br><span class="line">    183, 244, 78, 33, 123, 28, 59, 12, 210, 218, 47, 163, 215, 209, 108, 235, 237, 118, 101, </span><br><span class="line">    24, 234, 106, 143, 88, 9, 136, 95, 30, 193, 176, 225, 198, 197, 194, 239, 134, 162, 192, </span><br><span class="line">    11, 70, 58, 187, 50, 67, 236, 230, 13, 99, 190, 208, 207, 7, 53, 219, 203, 62, 114, 127, </span><br><span class="line">    125, 164, 179, 175, 112, 172, 250, 133, 130, 52, 189, 97, 146, 34, 157, 120, 195, 45, 4, </span><br><span class="line">    142, 139&#125;;</span><br><span class="line">    int b[]&#x3D;&#123;188,155,11,58,251,208,204,202,150,120,206,237,114,92,126,6,42&#125;;</span><br><span class="line">    int c[]&#x3D;&#123;53,222,230,35,67,248,226,216,17,209,32,2,181,200,171,60,108&#125;;</span><br><span class="line">    char flag[17];</span><br><span class="line">    for(i&#x3D;0;i&lt;17;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    flag[i]&#x3D;a[i + c[i]]-b[i] &amp; 255;</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;16;i&gt;&#x3D;0;i--)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>下面这个是python的，比用C语言写简单多了</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">lookup &#x3D; [196,153, 149,206, 17,221, 10, 217, 167, 18, 36, 135, 103, 61, 111, 31, 92, 152, </span><br><span class="line">21, 228, 105, 191, 173, 41, 2, 245, 23, 144, 1, 246, 89, 178, 182, 119, 38, 85, 48, 226, </span><br><span class="line">165, 241, 166, 214, 71, 90, 151, 3, 109, 169, 150, 224, 69, 156, 158, 57, 181, 29, 200, 37, </span><br><span class="line">51, 252, 227, 93, 65, 82, 66, 80, 170, 77, 49, 177, 81, 94, 202, 107, 25, 73, 148, 98, 129, </span><br><span class="line">231, 212, 14, 84, 121, 174, 171, 64, 180, 233, 74, 140, 242, 75, 104, 253, 44, 39, 87, 86, </span><br><span class="line">27, 68, 22, 55, 76, 35, 248, 96, 5, 56, 20, 161, 213, 238, 220, 72, 100, 247, 8, 63, 249, </span><br><span class="line">145, 243, 155, 222, 122, 32, 43, 186, 0, 102, 216, 126, 15, 42, 115, 138, 240, 147, 229, </span><br><span class="line">204, 117, 223, 141, 159, 131, 232, 124, 254, 60, 116, 46, 113, 79, 16, 128, 6, 251, 40, </span><br><span class="line">205, 137, 199, 83, 54, 188, 19, 184, 201, 110, 255, 26, 91, 211, 132, 160, 168, 154, 185, </span><br><span class="line">183, 244, 78, 33, 123, 28, 59, 12, 210, 218, 47, 163, 215, 209, 108, 235, 237, 118, 101, </span><br><span class="line">24, 234, 106, 143, 88, 9, 136, 95, 30, 193, 176, 225, 198, 197, 194, 239, 134, 162, 192, </span><br><span class="line">11, 70, 58, 187, 50, 67, 236, 230, 13, 99, 190, 208, 207, 7, 53, 219, 203, 62, 114, 127, </span><br><span class="line">125, 164, 179, 175, 112, 172, 250, 133, 130, 52, 189, 97, 146, 34, 157, 120, 195, 45, 4, </span><br><span class="line">142, 139]</span><br><span class="line">pwda &#x3D; [188,155,11,58,251,208,204,202,150,120,206,237,114,92,126,6,42]</span><br><span class="line">pwdb &#x3D; [53,222,230,35,67,248,226,216,17,209,32,2,181,200,171,60,108]</span><br><span class="line">flag&#x3D;&quot;&quot;</span><br><span class="line">for i in range(0,17):</span><br><span class="line">    flag+&#x3D;chr(lookup[i + pwdb[i]]-pwda[i] &amp; 255)</span><br><span class="line">flag&#x3D;flag[::-1]</span><br><span class="line">print (flag)</span><br></pre></td></tr></table></figure><blockquote><p>PCTF{PyC_Cr4ck3r}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>java逆向</title>
      <link href="2021/03/03/java%E9%80%86%E5%90%91/"/>
      <url>2021/03/03/java%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="Java逆向解密"><a href="#Java逆向解密" class="headerlink" title="Java逆向解密"></a>Java逆向解密</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#Java%E9%80%86%E5%90%91%E8%A7%A3%E5%AF%86">题目链接</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">import java.util.ArrayList;</span><br><span class="line">import java.util.Scanner;</span><br><span class="line"></span><br><span class="line">public class Reverse &#123;</span><br><span class="line"></span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">      Scanner s &#x3D; new Scanner(System.in);</span><br><span class="line">      System.out.println(&quot;Please input the flag 锛�&quot;);</span><br><span class="line">      String str &#x3D; s.next();</span><br><span class="line">      System.out.println(&quot;Your input is 锛�&quot;);</span><br><span class="line">      System.out.println(str);</span><br><span class="line">      char[] stringArr &#x3D; str.toCharArray();</span><br><span class="line">      Encrypt(stringArr);</span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   public static void Encrypt(char[] arr) &#123;</span><br><span class="line">      ArrayList Resultlist &#x3D; new ArrayList();</span><br><span class="line"></span><br><span class="line">      for(int KEY &#x3D; 0; KEY &lt; arr.length; ++KEY) &#123;</span><br><span class="line">         int KEYList &#x3D; arr[KEY] + 64 ^ 32;</span><br><span class="line">         Resultlist.add(Integer.valueOf(KEYList));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      int[] var5 &#x3D; new int[]&#123;180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, </span><br><span class="line">         134, 140, 129, 135, 191, 65&#125;;</span><br><span class="line">      ArrayList var6 &#x3D; new ArrayList();</span><br><span class="line"></span><br><span class="line">      for(int j &#x3D; 0; j &lt; var5.length; ++j) &#123;</span><br><span class="line">         var6.add(Integer.valueOf(var5[j]));</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      System.out.println(&quot;Result:&quot;);</span><br><span class="line">      if(Resultlist.equals(var6)) &#123;</span><br><span class="line">         System.out.println(&quot;Congratulations锛�&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">         System.err.println(&quot;Error锛�&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>很清晰的逻辑，直接写脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int i;</span><br><span class="line">    int a[18]&#x3D;&#123;180, 136, 137, 147, 191, 137, 147, 191, 148, 136, 133, 191, 134, 140, 129, </span><br><span class="line">      135, 191, 65&#125;;</span><br><span class="line">    for(i&#x3D;0;i&lt;18;i++)</span><br><span class="line">    &#123;</span><br><span class="line">    a[i]&#x3D;a[i]-64 ^ 32;</span><br><span class="line">printf(&quot;%c&quot;,a[i]); </span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{This_is_the_flag_!}</p></blockquote><h1 id="Wust"><a href="#Wust" class="headerlink" title="Wust"></a>Wust</h1><p><a href="https://pan.baidu.com/s/11OVxyzhLx9z0A1pMTdYLxw">附件链接</a> 提取码：0000</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line">import java.io.BufferedReader;</span><br><span class="line">import java.io.InputStreamReader;</span><br><span class="line"></span><br><span class="line">public class Wust &#123;</span><br><span class="line"></span><br><span class="line">   public static void main(String[] args) &#123;</span><br><span class="line">      System.out.println(&quot;WUSTCTF2021 Freshman competition&quot;);</span><br><span class="line">      System.out.println(&quot;Input your flag:&quot;);</span><br><span class="line">      BufferedReader br &#x3D; new BufferedReader(new InputStreamReader(System.in));</span><br><span class="line">      String str &#x3D; null;</span><br><span class="line">      int[] flag &#x3D; new int[]&#123;60, 23, 23, 41, 110, 66, 44, 17, 126, 68, 43, 26, 113, 71, 10&#125;;</span><br><span class="line"></span><br><span class="line">      try &#123;</span><br><span class="line">         str &#x3D; br.readLine();</span><br><span class="line">      &#125; catch (Exception var10) &#123;</span><br><span class="line">         System.out.println(&quot;ERROR: Undefined Exception.&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      if(str.isEmpty()) &#123;</span><br><span class="line">         System.out.println(&quot;Nothing received.&quot;);</span><br><span class="line">      &#125; else &#123;</span><br><span class="line">         if(str.length() !&#x3D; 22) &#123;</span><br><span class="line">            System.out.println(&quot;len Wrong!&quot;);</span><br><span class="line">            return;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         String head &#x3D; str.substring(0, 5);</span><br><span class="line">         if(!head.equals(&quot;flag&#123;&quot;)) &#123;</span><br><span class="line">            System.out.println(&quot;head Wrong!&quot;);</span><br><span class="line">            return;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         String m &#x3D; str.substring(5, str.length() - 1);</span><br><span class="line"></span><br><span class="line">         for(int i &#x3D; 0; i &lt; m.length() - 1; ++i) &#123;</span><br><span class="line">            char a &#x3D; m.charAt(i);</span><br><span class="line">            char b &#x3D; m.charAt(i + 1);</span><br><span class="line">            int c &#x3D; a ^ b;</span><br><span class="line">            if(c !&#x3D; flag[i]) &#123;</span><br><span class="line">               System.out.println(&quot;Wrong!&quot;);</span><br><span class="line">               return;</span><br><span class="line">            &#125;</span><br><span class="line">         &#125;</span><br><span class="line"></span><br><span class="line">         System.out.println(&quot;Congratulations!&quot;);</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个就是输入flag，flag[2]=flag[1]^60,flag[3]=glag[2]^23,以此类推。<br>众所周知，大部分flag都是有意义的一串字符，这里我采用了穷举。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int i,j;</span><br><span class="line">int s[16];</span><br><span class="line">int f[15]&#x3D;&#123;60, 23, 23, 41, 110, 66, 44, 17, 126, 68, 43, 26, 113, 71, 10&#125;;</span><br><span class="line">for(i&#x3D;32;i&lt;127;i++)</span><br><span class="line">&#123;</span><br><span class="line">s[0]&#x3D;i;</span><br><span class="line">for(j&#x3D;0;j&lt;15;j++)</span><br><span class="line">&#123;</span><br><span class="line">s[j+1]&#x3D;f[j]^s[j];</span><br><span class="line">&#125;</span><br><span class="line">for(j&#x3D;0;j&lt;16;j++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%c&quot;,s[j]);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;\n&quot;);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Jvav_1s_N0t_E4sy}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>python逆向</title>
      <link href="2021/03/03/python%E9%80%86%E5%90%91/"/>
      <url>2021/03/03/python%E9%80%86%E5%90%91/</url>
      
        <content type="html"><![CDATA[<h1 id="test"><a href="#test" class="headerlink" title="test"></a>test</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1DGgkAlcAH1QP1LROT60Ipg">附件链接</a> 提取码：0000</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">from libnum import *</span><br><span class="line">ans &#x3D; 0x6675FA7F228DBCEB6A2DC223A37FC64FE67E61L</span><br><span class="line">flag &#x3D; s2n(input(&#39;Input your flag: &#39;))</span><br><span class="line">flag ^&#x3D; flag &gt;&gt; 10</span><br><span class="line">if flag &#x3D;&#x3D; ans:</span><br><span class="line">    print(&#39;You are right!&#39;)</span><br><span class="line">else:</span><br><span class="line">    print(&#39;Try again!&#39;)</span><br></pre></td></tr></table></figure><p>flag的前十位与ans的前十位相同，flag的11-20位是flag1-10位与ans的11-20位异或的结果，以下为脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int ans[151]&#x3D;&#123;1,1,0,0,1,1,0,0,1,1,1,0,1,0,1,1,1,1,1,1,0,1,0,0,1,1,1,1,1,1,1,0,0,1,0,0,0,</span><br><span class="line">1,0,1,0,0,0,1,1,0,1,1,0,1,1,1,1,0,</span><br><span class="line">0,1,1,1,0,1,0,1,1,0,1,1,0,1,0,1,0,0,0,1,0,1,1,0,1,1,1,0,0,0,0,1,0,0,0,1,0,0,0,1,1,1,0,1,</span><br><span class="line">0,0,0,1,1,0,1,1,1,1,1,1,1,1,1,0,0,</span><br><span class="line">0,1,1,0,0,1,0,0,1,1,1,1,1,1,1,0,0,1,1,0,0,1,1,1,1,1,1,0,0,1,1,0,0,0,0,1&#125;;</span><br><span class="line">int flag[151];</span><br><span class="line">int i,k,j&#x3D;10;</span><br><span class="line">for(i&#x3D;0;i&lt;10;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;ans[i];</span><br><span class="line">printf(&quot;%d&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">for(k&#x3D;0;k&lt;14;k++)</span><br><span class="line">&#123;</span><br><span class="line">for(i&#x3D;j;i&lt;j+10;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]&#x3D;ans[i]^flag[i-10];</span><br><span class="line">printf(&quot;%d&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">j&#x3D;j+10;</span><br><span class="line">&#125;</span><br><span class="line">flag[151]&#x3D;flag[141]^ans[151];</span><br><span class="line">printf(&quot;%d&quot;,flag[151]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果为2进制，转16进制再转字符串。</p><blockquote><p>flag{Sh1ft_4nd_X0r}</p></blockquote><h1 id="pyre"><a href="#pyre" class="headerlink" title="pyre"></a>pyre</h1><p><a href="https://buuoj.cn/challenges#[GWCTF%202019]pyre">题目链接</a></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">print &#39;Welcome to Re World!&#39;</span><br><span class="line">print &#39;Your input1 is your flag~&#39;</span><br><span class="line">l &#x3D; len(input1)</span><br><span class="line">for i in range(l):</span><br><span class="line">    num &#x3D; ((input1[i] + i) % 128 + 128) % 128</span><br><span class="line">    code +&#x3D; num</span><br><span class="line"></span><br><span class="line">for i in range(l - 1):</span><br><span class="line">    code[i] &#x3D; code[i] ^ code[i + 1]</span><br><span class="line"></span><br><span class="line">print code</span><br><span class="line">code &#x3D; [</span><br><span class="line">    &#39;\x1f&#39;,</span><br><span class="line">    &#39;\x12&#39;,</span><br><span class="line">    &#39;\x1d&#39;,</span><br><span class="line">    &#39;(&#39;,</span><br><span class="line">    &#39;0&#39;,</span><br><span class="line">    &#39;4&#39;,</span><br><span class="line">    &#39;\x01&#39;,</span><br><span class="line">    &#39;\x06&#39;,</span><br><span class="line">    &#39;\x14&#39;,</span><br><span class="line">    &#39;4&#39;,</span><br><span class="line">    &#39;,&#39;,</span><br><span class="line">    &#39;\x1b&#39;,</span><br><span class="line">    &#39;U&#39;,</span><br><span class="line">    &#39;?&#39;,</span><br><span class="line">    &#39;o&#39;,</span><br><span class="line">    &#39;6&#39;,</span><br><span class="line">    &#39;*&#39;,</span><br><span class="line">    &#39;:&#39;,</span><br><span class="line">    &#39;\x01&#39;,</span><br><span class="line">    &#39;D&#39;,</span><br><span class="line">    &#39;;&#39;,</span><br><span class="line">    &#39;%&#39;,</span><br><span class="line">    &#39;\x13&#39;]</span><br></pre></td></tr></table></figure><p>第五行其实就是num=input1[i]+i,超过127，就减去128.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int i,j;</span><br><span class="line">    int code[23]&#x3D;&#123;0x1f,0x12,0x1d,&#39;(&#39;,&#39;0&#39;,&#39;4&#39;,0x01,0x06,0x14,&#39;4&#39;,&#39;,&#39;,0x1b,</span><br><span class="line">    &#39;U&#39;,&#39;?&#39;,&#39;o&#39;,&#39;6&#39;,&#39;*&#39;,&#39;:&#39;,0x01,&#39;D&#39;,&#39;;&#39;,&#39;%&#39;,0x13&#125;;</span><br><span class="line">    for(i&#x3D;21;i&gt;&#x3D;0;i--)</span><br><span class="line">    &#123;</span><br><span class="line">    code[i]&#x3D;code[i]^code[i + 1];</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;0;i&lt;23;i++)</span><br><span class="line">&#123;</span><br><span class="line">code[i]-&#x3D;i;</span><br><span class="line">if(code[i]&lt;0)</span><br><span class="line">    code[i]+&#x3D;128;</span><br><span class="line">printf(&quot;%c&quot;,code[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Just_Re_1s_Ha66y!}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>某不知名网站题目</title>
      <link href="2021/03/02/%E6%9F%90%E4%B8%8D%E7%9F%A5%E5%90%8D%E7%BD%91%E7%AB%99%E9%A2%98%E7%9B%AE/"/>
      <url>2021/03/02/%E6%9F%90%E4%B8%8D%E7%9F%A5%E5%90%8D%E7%BD%91%E7%AB%99%E9%A2%98%E7%9B%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="equations"><a href="#equations" class="headerlink" title="equations"></a>equations</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1NK0Gtr3oqlk2Jn2mgasROQ">附件链接</a> 提取码：0000<br>题目翻译城中文为方程组<br>放入ida64中</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line">234923  89 30 21 11 28 97 68 91 36 29 54 38 18 31 27 25 42 93 45 89 80 94 57 68 59 75 74 </span><br><span class="line">47 40 25 68 52 86 81 38 23 90 80 54 66 80 36</span><br><span class="line">233479  65 11 81 65 58 53 86 44 62 39 64 41 93 67 34 30 25 45 76 17 91 47 57 82 26 17 94 </span><br><span class="line">51 21 80 59 26 75 75 25 67 52 23 81 57 79 98</span><br><span class="line">231388  63 83 55 29 57 53 31 99 27 92 85 98 63 80 18 78 79 28 96 16 95 27 25 71 40 89 79 </span><br><span class="line">81 13 85 41 44 50 55 11 32 76 65 20 37 58 27</span><br><span class="line">223405  39 69 44 25 49 15 16 96 35 32 92 95 11 58 31 90 67 72 83 78 15 25 93 96 97 31 58 </span><br><span class="line">59 14 86 36 37 22 75 43 72 13 26 18 64 64 83</span><br><span class="line">234762  94 82 88 51 31 71 44 74 26 46 95 66 54 75 19 72 93 16 85 54 46 87 15 46 74 27 26 </span><br><span class="line">48 83 13 38 94 45 52 24 72 59 71 32 65 24 93</span><br><span class="line">242484  34 75 68 93 79 19 14 76 60 69 73 29 48 61 49 64 98 29 77 81 85 11 87 11 72 63 87 </span><br><span class="line">40 47 48 87 54 88 27 26 67 93 50 79 42 12 32</span><br><span class="line">232356  76 61 21 72 11 93 13 63 15 13 73 49 48 76 52 81 62 78 84 79 95 74 57 21 13 95 15 </span><br><span class="line">93 57 38 89 98 68 69 21 40 20 55 62 29 54 40</span><br><span class="line">239858  98 66 92 23 97 55 72 69 81 41 38 21 56 95 86 39 78 53 65 37 80 56 38 60 94 72 20 </span><br><span class="line">43 50 28 81 63 12 60 32 12 22 86 65 32 76 71</span><br><span class="line">218896  32 15 73 84 27 21 74 21 35 26 85 28 57 91 37 12 67 47 10 74 62 53 73 84 94 46 74 </span><br><span class="line">47 57 40 88 71 13 32 81 95 57 28 13 94 45 34</span><br><span class="line">249026  50 47 34 57 12 34 76 54 79 18 44 73 50 92 51 72 39 91 26 74 97 42 86 79 53 50 62 </span><br><span class="line">14 71 55 87 64 77 62 63 48 27 81 93 85 65 83</span><br><span class="line">222855  92 26 78 74 25 38 64 98 68 71 14 99 92 11 31 29 20 52 17 10 21 37 99 52 66 32 57 </span><br><span class="line">58 25 25 93 54 96 70 18 66 84 27 44 28 52 83</span><br><span class="line">210754  53 39 23 68 62 44 98 17 80 16 63 51 15 49 84 23 97 26 65 35 11 83 43 64 21 39 37 </span><br><span class="line">79 73 61 55 57 58 69 16 10 48 86 80 13 67 32</span><br><span class="line">261049  12 69 82 77 95 22 21 85 79 58 48 83 47 77 64 80 56 35 78 67 46 93 51 75 69 62 44 </span><br><span class="line">11 46 98 37 93 34 53 87 46 85 79 69 81 45 86</span><br><span class="line">254017  51 74 62 62 86 10 49 94 65 50 62 95 48 66 14 84 61 41 89 78 46 60 20 97 32 65 61 </span><br><span class="line">78 57 16 64 97 81 81 76 61 27 46 99 64 35 99</span><br><span class="line">202040  15 47 16 70 28 32 65 82 53 32 29 25 69 96 52 76 22 41 82 91 47 24 55 40 18 19 52 </span><br><span class="line">83 37 51 89 37 27 55 40 82 61 27 26 28 30 73</span><br><span class="line">213614  11 29 51 69 81 96 58 97 36 81 18 62 73 32 72 11 49 61 69 67 54 30 10 70 42 27 19 </span><br><span class="line">11 97 83 27 40 63 12 41 21 84 74 22 19 65 79</span><br><span class="line">246738  76 64 47 17 80 57 93 11 79 98 56 86 23 67 63 11 54 72 80 44 50 61 14 43 80 48 63 </span><br><span class="line">52 99 79 40 64 49 55 52 78 48 60 44 32 85 98</span><br><span class="line">204859  77 34 26 66 87 76 58 39 81 60 83 23 16 62 33 36 85 40 64 78 22 11 81 81 27 12 11 </span><br><span class="line">41 15 19 69 20 26 66 17 87 50 67 47 21 31 81</span><br><span class="line">248644  56 66 51 80 33 73 76 42 13 91 75 90 82 20 15 99 33 18 22 28 39 17 74 54 78 47 61 </span><br><span class="line">68 73 95 60 52 84 11 78 67 82 79 31 94 78 74</span><br><span class="line">227559  24 15 63 20 81 71 50 77 98 71 98 43 57 10 66 53 36 45 44 54 90 22 96 68 98 27 71 </span><br><span class="line">78 37 43 20 50 82 84 19 76 59 27 47 31 19 31</span><br><span class="line">215120  45 66 23 77 41 65 99 35 67 29 63 77 55 36 27 63 43 70 55 11 28 17 77 90 28 57 62 </span><br><span class="line">98 84 96 36 43 30 73 32 25 34 14 91 18 73 26</span><br><span class="line">218244  65 25 41 22 34 46 91 70 35 22 65 60 96 58 76 80 21 62 59 70 51 50 39 14 31 39 79 </span><br><span class="line">49 45 82 74 35 56 24 93 47 32 41 14 15 71 51</span><br><span class="line">229321  45 99 29 14 89 72 48 43 92 10 94 13 33 94 59 22 65 29 23 86 67 83 28 46 83 89 48 </span><br><span class="line">59 28 38 82 32 70 50 28 39 24 60 17 37 60 90</span><br><span class="line">233372  62 66 17 38 19 83 12 98 61 57 63 67 69 10 24 75 60 87 76 37 91 35 20 30 24 77 29 </span><br><span class="line">27 40 36 98 82 20 67 45 96 99 80 17 55 74 55</span><br><span class="line">251643  64 68 36 79 23 96 16 40 79 16 85 77 99 56 95 99 60 28 11 96 22 66 47 66 90 48 80 </span><br><span class="line">34 22 47 66 80 37 43 75 84 23 21 39 85 64 95</span><br><span class="line">245051  14 55 61 90 62 91 24 31 40 34 88 59 65 26 16 28 36 33 81 91 99 57 69 75 32 98 17 </span><br><span class="line">60 94 16 89 51 35 74 87 98 52 39 73 41 65 65</span><br><span class="line">228339  58 64 96 49 96 43 13 28 42 90 80 33 68 62 42 78 75 56 20 66 45 63 10 72 41 63 28 </span><br><span class="line">42 60 26 76 20 98 19 51 68 80 12 48 68 80 15</span><br><span class="line">271672  93 74 76 39 79 99 22 66 47 40 85 58 50 56 84 93 65 65 56 66 95 32 84 48 51 68 30 </span><br><span class="line">96 93 60 83 79 54 61 99 77 12 51 31 93 54 12</span><br><span class="line">207826  30 29 52 29 91 81 31 28 75 84 10 40 14 34 26 70 94 74 27 38 55 13 21 55 79 94 45 </span><br><span class="line">41 39 62 56 25 10 54 61 58 23 97 95 70 18 62</span><br><span class="line">208076  19 60 27 79 53 21 21 47 52 26 42 82 20 87 74 57 88 22 67 95 69 24 50 14 31 26 38 </span><br><span class="line">40 31 46 17 67 85 54 33 46 43 72 84 94 67 29</span><br><span class="line">230168  37 52 47 30 99 11 20 20 41 72 46 78 97 93 47 73 48 35 85 99 77 49 48 75 94 44 29 </span><br><span class="line">11 18 71 82 88 27 70 95 26 19 73 61 51 55 51</span><br><span class="line">195444  92 21 36 77 36 27 25 45 48 16 73 90 71 53 47 39 75 33 96 11 22 18 15 48 20 16 90 </span><br><span class="line">50 66 11 49 91 23 60 81 53 57 18 19 40 54 48</span><br><span class="line">233025  47 22 61 36 88 58 42 13 69 33 89 93 93 75 31 98 65 94 77 16 14 99 21 89 90 37 27 </span><br><span class="line">11 22 80 66 65 31 70 76 29 49 92 51 38 27 47</span><br><span class="line">224202  69 33 97 97 51 59 15 17 92 59 84 19 33 54 78 15 50 28 40 68 75 23 55 38 69 46 21 </span><br><span class="line">39 36 74 84 90 31 57 81 21 46 66 63 23 43 82</span><br><span class="line">246170  26 52 48 41 14 64 11 31 90 49 93 92 45 56 99 85 81 26 34 27 55 55 85 26 41 83 41 </span><br><span class="line">46 89 41 66 96 92 16 47 73 59 85 57 88 70 49</span><br><span class="line">223337  26 74 51 31 10 55 23 33 62 97 93 71 96 89 28 35 63 26 66 12 83 67 39 72 92 78 70 </span><br><span class="line">19 63 76 74 70 84 31 18 22 54 74 32 30 65 15</span><br><span class="line">244180  88 20 28 71 54 74 73 90 12 35 49 94 69 20 18 88 80 88 73 65 19 40 23 17 21 48 71 </span><br><span class="line">89 96 61 92 81 74 36 78 16 81 39 43 12 80 91</span><br><span class="line">241027  30 64 16 36 85 58 43 97 90 85 79 28 28 86 24 40 43 22 95 74 73 29 35 13 82 67 77 </span><br><span class="line">76 19 70 29 61 92 51 82 98 40 83 72 33 81 41</span><br><span class="line">225646  55 16 69 49 35 88 71 14 64 16 23 34 81 89 66 79 20 40 11 10 52 74 55 26 64 30 97 </span><br><span class="line">65 51 88 55 59 20 18 97 86 65 28 44 71 64 93</span><br><span class="line">217174  48 91 36 87 35 11 40 67 90 25 39 85 29 97 57 44 99 88 34 83 75 10 73 63 44 63 56 </span><br><span class="line">17 94 16 28 78 55 63 19 22 37 36 42 16 49 51</span><br><span class="line">222271  51 55 27 49 54 89 77 58 15 36 25 43 71 57 78 55 54 58 28 79 87 92 39 88 61 11 27 </span><br><span class="line">66 59 96 79 75 69 25 16 40 68 30 16 12 51 48</span><br><span class="line">203973  71 29 57 59 30 75 67 39 95 14 48 49 35 93 56 94 14 59 12 49 19 40 16 86 79 38 31 </span><br><span class="line">43 82 14 51 85 85 19 99 35 30 19 26 15 32 77</span><br></pre></td></tr></table></figure><p>最终结果转换成字符串即可。</p><blockquote><p>flag{nO_w@y_y0u_woRk_ou7_mY_equ4tions_5et}</p></blockquote><h1 id="re-1"><a href="#re-1" class="headerlink" title="re_1"></a>re_1</h1><p><a href="https://pan.baidu.com/s/1VidIkvouV3V1GUSc79yMFQ">附件链接</a> 提取码：0000<br>ida64打开，进入main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  void **v3; &#x2F;&#x2F; rdx</span><br><span class="line">  void *v5; &#x2F;&#x2F; [rsp+40h] [rbp-330h]</span><br><span class="line">  void *v6; &#x2F;&#x2F; [rsp+48h] [rbp-328h]</span><br><span class="line">  void *v7; &#x2F;&#x2F; [rsp+50h] [rbp-320h]</span><br><span class="line">  void *v8; &#x2F;&#x2F; [rsp+58h] [rbp-318h]</span><br><span class="line">  void *v9; &#x2F;&#x2F; [rsp+60h] [rbp-310h]</span><br><span class="line">  void *v10; &#x2F;&#x2F; [rsp+68h] [rbp-308h]</span><br><span class="line">  void *v11; &#x2F;&#x2F; [rsp+70h] [rbp-300h]</span><br><span class="line">  void *v12; &#x2F;&#x2F; [rsp+78h] [rbp-2F8h]</span><br><span class="line">  void *v13; &#x2F;&#x2F; [rsp+80h] [rbp-2F0h]</span><br><span class="line">  void *v14; &#x2F;&#x2F; [rsp+88h] [rbp-2E8h]</span><br><span class="line">  void *v15; &#x2F;&#x2F; [rsp+90h] [rbp-2E0h]</span><br><span class="line">  void *v16; &#x2F;&#x2F; [rsp+98h] [rbp-2D8h]</span><br><span class="line">  void *v17; &#x2F;&#x2F; [rsp+A0h] [rbp-2D0h]</span><br><span class="line">  void *v18; &#x2F;&#x2F; [rsp+A8h] [rbp-2C8h]</span><br><span class="line">  void *v19; &#x2F;&#x2F; [rsp+B0h] [rbp-2C0h]</span><br><span class="line">  void *v20; &#x2F;&#x2F; [rsp+B8h] [rbp-2B8h]</span><br><span class="line">  void *v21; &#x2F;&#x2F; [rsp+C0h] [rbp-2B0h]</span><br><span class="line">  void *v22; &#x2F;&#x2F; [rsp+C8h] [rbp-2A8h]</span><br><span class="line">  void *v23; &#x2F;&#x2F; [rsp+D0h] [rbp-2A0h]</span><br><span class="line">  void *v24; &#x2F;&#x2F; [rsp+D8h] [rbp-298h]</span><br><span class="line">  void *v25; &#x2F;&#x2F; [rsp+E0h] [rbp-290h]</span><br><span class="line">  void *v26; &#x2F;&#x2F; [rsp+E8h] [rbp-288h]</span><br><span class="line">  void *v27; &#x2F;&#x2F; [rsp+F0h] [rbp-280h]</span><br><span class="line">  void *v28; &#x2F;&#x2F; [rsp+F8h] [rbp-278h]</span><br><span class="line">  void *v29; &#x2F;&#x2F; [rsp+100h] [rbp-270h]</span><br><span class="line">  void *v30; &#x2F;&#x2F; [rsp+108h] [rbp-268h]</span><br><span class="line">  void *v31; &#x2F;&#x2F; [rsp+110h] [rbp-260h]</span><br><span class="line">  void *v32; &#x2F;&#x2F; [rsp+118h] [rbp-258h]</span><br><span class="line">  void *v33; &#x2F;&#x2F; [rsp+120h] [rbp-250h]</span><br><span class="line">  void *v34; &#x2F;&#x2F; [rsp+128h] [rbp-248h]</span><br><span class="line">  void *v35; &#x2F;&#x2F; [rsp+130h] [rbp-240h]</span><br><span class="line">  void *v36; &#x2F;&#x2F; [rsp+138h] [rbp-238h]</span><br><span class="line">  void *v37; &#x2F;&#x2F; [rsp+140h] [rbp-230h]</span><br><span class="line">  void *v38; &#x2F;&#x2F; [rsp+148h] [rbp-228h]</span><br><span class="line">  void *v39; &#x2F;&#x2F; [rsp+150h] [rbp-220h]</span><br><span class="line">  void *v40; &#x2F;&#x2F; [rsp+158h] [rbp-218h]</span><br><span class="line">  void *v41; &#x2F;&#x2F; [rsp+160h] [rbp-210h]</span><br><span class="line">  void *v42; &#x2F;&#x2F; [rsp+168h] [rbp-208h]</span><br><span class="line">  void *v43; &#x2F;&#x2F; [rsp+170h] [rbp-200h]</span><br><span class="line">  void *v44; &#x2F;&#x2F; [rsp+178h] [rbp-1F8h]</span><br><span class="line">  int v45; &#x2F;&#x2F; [rsp+368h] [rbp-8h]</span><br><span class="line">  int i; &#x2F;&#x2F; [rsp+36Ch] [rbp-4h]</span><br><span class="line"></span><br><span class="line">  v3 &#x3D; &amp;v5;</span><br><span class="line">  memset(&amp;v5, 0, 0x320uLL);</span><br><span class="line">  v5 &#x3D; &amp;unk_483004;</span><br><span class="line">  v6 &#x3D; &amp;unk_483007;</span><br><span class="line">  v7 &#x3D; &amp;unk_483004;</span><br><span class="line">  v8 &#x3D; &amp;unk_48300A;</span><br><span class="line">  v9 &#x3D; &amp;unk_48300D;</span><br><span class="line">  v10 &#x3D; &amp;unk_483010;</span><br><span class="line">  v11 &#x3D; &amp;unk_483013;</span><br><span class="line">  v12 &#x3D; &amp;unk_483016;</span><br><span class="line">  v13 &#x3D; &amp;unk_483019;</span><br><span class="line">  v14 &#x3D; &amp;unk_48301C;</span><br><span class="line">  v15 &#x3D; &amp;unk_48301F;</span><br><span class="line">  v16 &#x3D; &amp;unk_483022;</span><br><span class="line">  v17 &#x3D; &amp;unk_483022;</span><br><span class="line">  v18 &#x3D; &amp;unk_483022;</span><br><span class="line">  v19 &#x3D; &amp;unk_483025;</span><br><span class="line">  v20 &#x3D; &amp;unk_48300A;</span><br><span class="line">  v21 &#x3D; &amp;unk_483019;</span><br><span class="line">  v22 &#x3D; &amp;unk_483016;</span><br><span class="line">  v23 &#x3D; &amp;unk_483028;</span><br><span class="line">  v24 &#x3D; &amp;unk_48302B;</span><br><span class="line">  v25 &#x3D; &amp;unk_483010;</span><br><span class="line">  v26 &#x3D; &amp;unk_48302E;</span><br><span class="line">  v27 &#x3D; &amp;unk_48301F;</span><br><span class="line">  v28 &#x3D; &amp;unk_483031;</span><br><span class="line">  v29 &#x3D; &amp;unk_483010;</span><br><span class="line">  v30 &#x3D; &amp;unk_483034;</span><br><span class="line">  v31 &#x3D; &amp;unk_483034;</span><br><span class="line">  v32 &#x3D; &amp;unk_483022;</span><br><span class="line">  v33 &#x3D; &amp;unk_483025;</span><br><span class="line">  v34 &#x3D; &amp;unk_483034;</span><br><span class="line">  v35 &#x3D; &amp;unk_483025;</span><br><span class="line">  v36 &#x3D; &amp;unk_48300A;</span><br><span class="line">  v37 &#x3D; &amp;unk_48302B;</span><br><span class="line">  v38 &#x3D; &amp;unk_48302E;</span><br><span class="line">  v39 &#x3D; &amp;unk_483034;</span><br><span class="line">  v40 &#x3D; &amp;unk_48302B;</span><br><span class="line">  v41 &#x3D; &amp;unk_48302E;</span><br><span class="line">  v42 &#x3D; &amp;unk_483037;</span><br><span class="line">  v43 &#x3D; &amp;unk_48302B;</span><br><span class="line">  v44 &#x3D; &amp;unk_48303A;</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 39; ++i )</span><br><span class="line">    v45 &#x3D; fun(*(&amp;v5 + i));</span><br><span class="line">  system(&quot;pause&quot;, argv, v3);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">signed __int64 __fastcall fun(__int64 a1)</span><br><span class="line">&#123;</span><br><span class="line">  signed __int64 v2; &#x2F;&#x2F; [rsp+8h] [rbp-10h]</span><br><span class="line">  int v3; &#x2F;&#x2F; [rsp+10h] [rbp-8h]</span><br><span class="line">  int i; &#x2F;&#x2F; [rsp+14h] [rbp-4h]</span><br><span class="line">  v2 &#x3D; 0LL;</span><br><span class="line">  for ( i &#x3D; 0; *(i + a1); ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( *(i + a1) &gt; 47 &amp;&amp; *(i + a1) &lt;&#x3D; 57 )</span><br><span class="line">      v3 &#x3D; *(i + a1) - 48;</span><br><span class="line">    if ( *(i + a1) &gt; 96 &amp;&amp; *(i + a1) &lt;&#x3D; 122 )</span><br><span class="line">      v3 &#x3D; *(i + a1) - 87;</span><br><span class="line">    if ( *(i + a1) &gt; 64 &amp;&amp; *(i + a1) &lt;&#x3D; 90 )</span><br><span class="line">      v3 &#x3D; *(i + a1) - 55;</span><br><span class="line">    v2 &#x3D; 16 * v2 + v3;</span><br><span class="line">  &#125;</span><br><span class="line">  return v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这一题除了有点废手就没什么了。<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int a[80]&#x3D;&#123;0x37,0x33,0x37,0x39,0x37,0x33,0x36,0x33,0x37,0x34,0x36,0x36,0x37,0x62,0x37,0x37,</span><br><span class="line">    0x33,0x34,0x33,0x35,0x36,0x35,0x36,0x34,0x36,0x34,0x36,0x34,0x33,0x36,0x36,0x33,0x33,0x34,</span><br><span class="line">    0x33,0x37,0x36,0x31,0x33,0x39,0x36,0x36,0x33,0x38,0x36,0x35,0x33,0x32,0x36,0x36,0x33,0x31,</span><br><span class="line">    0x33,0x31,0x36,0x34,0x33,0x36,0x33,0x31,0x33,0x36,0x36,0x33,0x33,0x39,0x33,0x38,0x33,0x31,</span><br><span class="line">    0x33,0x39,0x33,0x38,0x36,0x32,0x33,0x39,0x37,0x64&#125;;</span><br><span class="line">    int flag[80];</span><br><span class="line">    int v3,v2&#x3D;0;</span><br><span class="line">    for(int i&#x3D;0;i&lt;80;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if ( a[i] &gt; 47 &amp;&amp; a[i] &lt;&#x3D; 57 )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 &#x3D; a[i] - 48;</span><br><span class="line">            a[i]&#x3D; v3;</span><br><span class="line">            flag[i]&#x3D;a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        else if ( a[i] &gt; 96 &amp;&amp; a[i] &lt;&#x3D; 122 )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 &#x3D; a[i] - 87;</span><br><span class="line">            a[i]&#x3D; v3;</span><br><span class="line">            flag[i]&#x3D;a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        else if ( a[i] &gt; 64 &amp;&amp; a[i] &lt;&#x3D; 90 )</span><br><span class="line">        &#123;</span><br><span class="line">            v3 &#x3D; a[i] - 55;</span><br><span class="line">            a[i]&#x3D; v3;</span><br><span class="line">            flag[i]&#x3D;a[i];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        else</span><br><span class="line">        &#123;</span><br><span class="line">            a[i]&#x3D; 0;</span><br><span class="line">            flag[i]&#x3D;a[i];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    for(int i&#x3D;0;i&lt;80;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        if(flag[i]!&#x3D; 0);</span><br><span class="line">        printf(&quot;%0x&quot;,flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着16进制字符串。</p><blockquote><p>sysctf{w45eddd6c47a9f8e2f11d616c98198b9}</p></blockquote><h1 id="ez-re"><a href="#ez-re" class="headerlink" title="ez_re"></a>ez_re</h1><p><a href="https://pan.baidu.com/s/14LzmZK_3QGRU-uN9IKaetg">附件链接</a> 提取码：0000<br>拖入ida中，查看main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  __int64 v3; &#x2F;&#x2F; rdx</span><br><span class="line">  int result; &#x2F;&#x2F; eax</span><br><span class="line">  __int64 v5; &#x2F;&#x2F; rdx</span><br><span class="line">  char v6; &#x2F;&#x2F; [rsp+0h] [rbp-30h]</span><br><span class="line">  unsigned __int64 v7; &#x2F;&#x2F; [rsp+28h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v7 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  puts(&quot;You got something good for me?\n&gt;&quot;, argv, envp);</span><br><span class="line">  _isoc99_scanf(&quot;%33s&quot;);</span><br><span class="line">  if ( j_strlen_ifunc(&amp;v6, &amp;v6) &#x3D;&#x3D; 33 )</span><br><span class="line">  &#123;</span><br><span class="line">    crypto(&amp;v6);</span><br><span class="line">    printf(&quot;checking...&quot;);</span><br><span class="line">    if ( check(&amp;v6) )</span><br><span class="line">      puts(&quot;Well done,h4cker!&quot;, &amp;v6, v5);</span><br><span class="line">    else</span><br><span class="line">      puts(&quot;O0ops....&quot;, &amp;v6, v5);</span><br><span class="line">    result &#x3D; 0;</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;O0ops....&quot;, &amp;v6, v3);</span><br><span class="line">    result &#x3D; 0;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">_BYTE *__fastcall crypto(__int64 a1)</span><br><span class="line">&#123;</span><br><span class="line">  _BYTE *result; &#x2F;&#x2F; rax</span><br><span class="line">  signed int v2; &#x2F;&#x2F; [rsp+10h] [rbp-8h]</span><br><span class="line">  signed int v3; &#x2F;&#x2F; [rsp+14h] [rbp-4h]</span><br><span class="line"></span><br><span class="line">  v2 &#x3D; 55;</span><br><span class="line">  v3 &#x3D; 0;</span><br><span class="line">  while ( v3 &lt;&#x3D; 32 )</span><br><span class="line">  &#123;</span><br><span class="line">    *(v3 + a1) -&#x3D; 2;</span><br><span class="line">    result &#x3D; (v3 + a1);</span><br><span class="line">    *result ^&#x3D; v2;</span><br><span class="line">    ++v3;</span><br><span class="line">    ++v2;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote></blockquote><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall check(__int64 a1)</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v2; &#x2F;&#x2F; [rsp+18h] [rbp-8h]</span><br><span class="line">  signed int i; &#x2F;&#x2F; [rsp+1Ch] [rbp-4h]</span><br><span class="line"></span><br><span class="line">  v2 &#x3D; 1;</span><br><span class="line">  sleep(2LL);</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 32; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( *(i + a1) !&#x3D; byte_6D4100[i] )</span><br><span class="line">      v2 &#x3D; 0;</span><br><span class="line">  &#125;</span><br><span class="line">  return v2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>一个异或加一个比较。<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int v2 &#x3D; 55;</span><br><span class="line">    int v3 &#x3D; 0;</span><br><span class="line">    char flag[33];</span><br><span class="line">    char result[33];</span><br><span class="line">    int byte_6D4100[33]&#x3D;&#123;0x53,0x52,0x66,0x5F,0x42,0x4F,0x71,0x50,0xD,0x21,0x28,0x1F,0x6C,</span><br><span class="line">    0x35,0x18,0x26,0x79,</span><br><span class="line">    0x39,0x2E,0x2B,0x16,0x7F,0x24,0x29,0x25,0x3A,0xC,0x1F,0x37,9,0x25,0x67,0x2C&#125;;</span><br><span class="line">    int i;</span><br><span class="line">    for ( i &#x3D; 0; i &lt;&#x3D; 32; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i] &#x3D; byte_6D4100[i];</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    for ( i &#x3D; 0; i &lt;&#x3D; 32; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        result[i] &#x3D; flag[i]^v2;</span><br><span class="line">        result[i] +&#x3D; 2;</span><br><span class="line">        v2++;</span><br><span class="line">        printf(&quot;%c&quot;,result[i]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{uNp4ck_1s_b@sic_5kill_Of_r3}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界</title>
      <link href="2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/"/>
      <url>2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="Shuffle"><a href="#Shuffle" class="headerlink" title="Shuffle"></a>Shuffle</h1><a id="more"></a><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4942&page=1">题目链接</a><br>ida64打开，进入main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">s &#x3D; &#39;S&#39;;</span><br><span class="line">v11 &#x3D; &#39;E&#39;;</span><br><span class="line">v12 &#x3D; &#39;C&#39;;</span><br><span class="line">v13 &#x3D; &#39;C&#39;;</span><br><span class="line">v14 &#x3D; &#39;O&#39;;</span><br><span class="line">v15 &#x3D; &#39;N&#39;;</span><br><span class="line">v16 &#x3D; &#39;&#123;&#39;;</span><br><span class="line">v17 &#x3D; &#39;W&#39;;</span><br><span class="line">v18 &#x3D; &#39;e&#39;;</span><br><span class="line">v19 &#x3D; &#39;l&#39;;</span><br><span class="line">v20 &#x3D; &#39;c&#39;;</span><br><span class="line">v21 &#x3D; &#39;o&#39;;</span><br><span class="line">v22 &#x3D; &#39;m&#39;;</span><br><span class="line">v23 &#x3D; &#39;e&#39;;</span><br><span class="line">v24 &#x3D; &#39; &#39;;</span><br><span class="line">v25 &#x3D; &#39;t&#39;;</span><br><span class="line">v26 &#x3D; &#39;o&#39;;</span><br><span class="line">v27 &#x3D; &#39; &#39;;</span><br><span class="line">v28 &#x3D; &#39;t&#39;;</span><br><span class="line">v29 &#x3D; &#39;h&#39;;</span><br><span class="line">v30 &#x3D; &#39;e&#39;;</span><br><span class="line">v31 &#x3D; &#39; &#39;;</span><br><span class="line">v32 &#x3D; &#39;S&#39;;</span><br><span class="line">v33 &#x3D; &#39;E&#39;;</span><br><span class="line">v34 &#x3D; &#39;C&#39;;</span><br><span class="line">v35 &#x3D; &#39;C&#39;;</span><br><span class="line">v36 &#x3D; &#39;O&#39;;</span><br><span class="line">v37 &#x3D; &#39;N&#39;;</span><br><span class="line">v38 &#x3D; &#39; &#39;;</span><br><span class="line">v39 &#x3D; &#39;2&#39;;</span><br><span class="line">v40 &#x3D; &#39;0&#39;;</span><br><span class="line">v41 &#x3D; &#39;1&#39;;</span><br><span class="line">v42 &#x3D; &#39;4&#39;;</span><br><span class="line">v43 &#x3D; &#39; &#39;;</span><br><span class="line">v44 &#x3D; &#39;C&#39;;</span><br><span class="line">v45 &#x3D; &#39;T&#39;;</span><br><span class="line">v46 &#x3D; &#39;F&#39;;</span><br><span class="line">v47 &#x3D; &#39;!&#39;;</span><br><span class="line">v48 &#x3D; &#39;&#125;&#39;;</span><br></pre></td></tr></table></figure><blockquote><p>SECCON{Welcome to the SECCON 2014 CTF!}</p></blockquote><h1 id="666"><a href="#666" class="headerlink" title="666"></a>666</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=5573&page=1">题目链接</a><br>ida64打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char s; &#x2F;&#x2F; [rsp+0h] [rbp-1E0h]</span><br><span class="line">  char v5; &#x2F;&#x2F; [rsp+F0h] [rbp-F0h]</span><br><span class="line"></span><br><span class="line">  memset(&amp;s, 0, 0x1EuLL);</span><br><span class="line">  printf(&quot;Please Input Key: &quot;, 0LL);</span><br><span class="line">  __isoc99_scanf(&quot;%s&quot;, &amp;v5);</span><br><span class="line">  encode(&amp;v5, &amp;s);</span><br><span class="line">  if ( strlen(&amp;v5) &#x3D;&#x3D; key )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( !strcmp(&amp;s, enflag) )</span><br><span class="line">      puts(&quot;You are Right&quot;);</span><br><span class="line">    else</span><br><span class="line">      puts(&quot;flag&#123;This_1s_f4cker_flag&#125;&quot;);</span><br><span class="line">  &#125;</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">int __fastcall encode(const char *a1, __int64 a2)</span><br><span class="line">&#123;</span><br><span class="line">  char v3[32]; &#x2F;&#x2F; [rsp+10h] [rbp-70h]</span><br><span class="line">  char v4[32]; &#x2F;&#x2F; [rsp+30h] [rbp-50h]</span><br><span class="line">  char v5[40]; &#x2F;&#x2F; [rsp+50h] [rbp-30h]</span><br><span class="line">  int v6; &#x2F;&#x2F; [rsp+78h] [rbp-8h]</span><br><span class="line">  int i; &#x2F;&#x2F; [rsp+7Ch] [rbp-4h]</span><br><span class="line"></span><br><span class="line">  i &#x3D; 0;</span><br><span class="line">  v6 &#x3D; 0;</span><br><span class="line">  if ( strlen(a1) !&#x3D; key )</span><br><span class="line">    return puts(&quot;Your Length is Wrong&quot;);</span><br><span class="line">  for ( i &#x3D; 0; i &lt; key; i +&#x3D; 3 )</span><br><span class="line">  &#123;</span><br><span class="line">    v5[i] &#x3D; key ^ (a1[i] + 6);</span><br><span class="line">    v4[i + 1] &#x3D; (a1[i + 1] - 6) ^ key;</span><br><span class="line">    v3[i + 2] &#x3D; a1[i + 2] ^ 6 ^ key;</span><br><span class="line">    *(_BYTE *)(a2 + i) &#x3D; v5[i];</span><br><span class="line">    *(_BYTE *)(a2 + i + 1LL) &#x3D; v4[i + 1];</span><br><span class="line">    *(_BYTE *)(a2 + i + 2LL) &#x3D; v3[i + 2];</span><br><span class="line">  &#125;</span><br><span class="line">  return a2;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>逻辑很清晰，直接写脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char f[18]&#x3D;&quot;izwhroz\&quot;\&quot;w\&quot;v.K\&quot;.Ni&quot;;</span><br><span class="line">int i,j,k;</span><br><span class="line">    for ( i &#x3D; 0; i &lt; 18; i+&#x3D;3 )</span><br><span class="line">    &#123;</span><br><span class="line">    f[i]&#x3D;(f[i]^18)-6;</span><br><span class="line">    f[i+1]&#x3D;(f[i+1]^18)+6;</span><br><span class="line">    f[i+2]&#x3D;f[i+2]^18^6;</span><br><span class="line">        printf(&quot;%c%c%c&quot;,f[i],f[i+1],f[i+2]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>unctf{b66_6b6_66b}</p></blockquote><h1 id="Reversing-x64Elf-100"><a href="#Reversing-x64Elf-100" class="headerlink" title="Reversing-x64Elf-100"></a>Reversing-x64Elf-100</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4826&page=1">题目链接</a><br>拖入ida</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">signed __int64 __fastcall main(__int64 a1, char **a2, char **a3)</span><br><span class="line">&#123;</span><br><span class="line">  signed __int64 result; &#x2F;&#x2F; rax</span><br><span class="line">  char s; &#x2F;&#x2F; [rsp+0h] [rbp-110h]</span><br><span class="line">  unsigned __int64 v5; &#x2F;&#x2F; [rsp+108h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v5 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  printf(&quot;Enter the password: &quot;, a2, a3);</span><br><span class="line">  if ( !fgets(&amp;s, 255, stdin) )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( sub_4006FD(&amp;s) )</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;Incorrect password!&quot;);</span><br><span class="line">    result &#x3D; 1LL;</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;Nice!&quot;);</span><br><span class="line">    result &#x3D; 0LL;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">signed __int64 __fastcall sub_4006FD(__int64 a1)</span><br><span class="line">&#123;</span><br><span class="line">  signed int i; &#x2F;&#x2F; [rsp+14h] [rbp-24h]</span><br><span class="line">  const char *v3; &#x2F;&#x2F; [rsp+18h] [rbp-20h]</span><br><span class="line">  const char *v4; &#x2F;&#x2F; [rsp+20h] [rbp-18h]</span><br><span class="line">  const char *v5; &#x2F;&#x2F; [rsp+28h] [rbp-10h]</span><br><span class="line"></span><br><span class="line">  v3 &#x3D; &quot;Dufhbmf&quot;;</span><br><span class="line">  v4 &#x3D; &quot;pG&#96;imos&quot;;</span><br><span class="line">  v5 &#x3D; &quot;ewUglpt&quot;;</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 11; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( (&amp;v3)[i % 3][2 * (i &#x2F; 3)] - *(i + a1) !&#x3D; 1 )</span><br><span class="line">      return 1LL;</span><br><span class="line">  &#125;</span><br><span class="line">  return 0LL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>直接上脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char a[3][7]&#x3D;&#123;&#123;&#39;D&#39;,&#39;u&#39;,&#39;f&#39;,&#39;h&#39;,&#39;b&#39;,&#39;m&#39;,&#39;f&#39;&#125;,&#123;&#39;p&#39;,&#39;G&#39;,&#39;&#96;&#39;,&#39;i&#39;,&#39;m&#39;,&#39;o&#39;,&#39;s&#39;&#125;,&#123;&#39;e&#39;,&#39;w&#39;,&#39;U&#39;,&#39;g</span><br><span class="line">  &#39;,&#39;l&#39;,&#39;p&#39;,&#39;t&#39;&#125;&#125;;</span><br><span class="line">int i;</span><br><span class="line">char flag[11];</span><br><span class="line">for ( i &#x3D; 0; i &lt;&#x3D; 11; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        flag[i]&#x3D;a[i % 3][2 * (i &#x2F; 3)]-1;</span><br><span class="line">        printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>Code_Talkers</p></blockquote><h1 id="IgniteMe"><a href="#IgniteMe" class="headerlink" title="IgniteMe"></a>IgniteMe</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4590&page=1">题目链接</a><br>ida32打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">  v3 &#x3D; sub_402B30(&amp;unk_446360, &quot;Give me your flag:&quot;);</span><br><span class="line">  sub_4013F0(v3, sub_403670);</span><br><span class="line">  sub_401440(v11, 127);</span><br><span class="line">  if ( strlen(v11) &lt; 0x1E &amp;&amp; strlen(v11) &gt; 4 )</span><br><span class="line">  &#123;</span><br><span class="line">    strcpy(v10, &quot;EIS&#123;&quot;);</span><br><span class="line">    for ( i &#x3D; 0; i &lt; strlen(v10); ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v11[i] !&#x3D; v10[i] )</span><br><span class="line">      &#123;</span><br><span class="line">        v6 &#x3D; sub_402B30(&amp;unk_446360, &quot;Sorry, keep trying! &quot;);</span><br><span class="line">        sub_4013F0(v6, sub_403670);</span><br><span class="line">        return 0;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( v12 &#x3D;&#x3D; &#39;&#125;&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">      if ( sub_4011C0(v11) )</span><br><span class="line">        v8 &#x3D; sub_402B30(&amp;unk_446360, &quot;Congratulations! &quot;);</span><br><span class="line">      else</span><br><span class="line">        v8 &#x3D; sub_402B30(&amp;unk_446360, &quot;Sorry, keep trying! &quot;);</span><br><span class="line">      sub_4013F0(v8, sub_403670);</span><br><span class="line">      result &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      v7 &#x3D; sub_402B30(&amp;unk_446360, &quot;Sorry, keep trying! &quot;);</span><br><span class="line">      sub_4013F0(v7, sub_403670);</span><br><span class="line">      result &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    v4 &#x3D; sub_402B30(&amp;unk_446360, &quot;Sorry, keep trying!&quot;);</span><br><span class="line">    sub_4013F0(v4, sub_403670);</span><br><span class="line">    result &#x3D; 0;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">bool __cdecl sub_4011C0(char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  size_t v2; &#x2F;&#x2F; eax</span><br><span class="line">  signed int v3; &#x2F;&#x2F; [esp+50h] [ebp-B0h]</span><br><span class="line">  char v4[32]; &#x2F;&#x2F; [esp+54h] [ebp-ACh]</span><br><span class="line">  int v5; &#x2F;&#x2F; [esp+74h] [ebp-8Ch]</span><br><span class="line">  int v6; &#x2F;&#x2F; [esp+78h] [ebp-88h]</span><br><span class="line">  size_t i; &#x2F;&#x2F; [esp+7Ch] [ebp-84h]</span><br><span class="line">  char v8[128]; &#x2F;&#x2F; [esp+80h] [ebp-80h]</span><br><span class="line"></span><br><span class="line">  if ( strlen(a1) &lt;&#x3D; 4 )</span><br><span class="line">    return 0;</span><br><span class="line">  i &#x3D; 4;</span><br><span class="line">  v6 &#x3D; 0;</span><br><span class="line">  while ( i &lt; strlen(a1) - 1 )</span><br><span class="line">    v8[v6++] &#x3D; a1[i++];</span><br><span class="line">  v8[v6] &#x3D; 0;</span><br><span class="line">  v5 &#x3D; 0;</span><br><span class="line">  v3 &#x3D; 0;</span><br><span class="line">  memset(v4, 0, 0x20u);</span><br><span class="line">  for ( i &#x3D; 0; ; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v2 &#x3D; strlen(v8);</span><br><span class="line">    if ( i &gt;&#x3D; v2 )</span><br><span class="line">      break;</span><br><span class="line">    if ( v8[i] &gt;&#x3D; 97 &amp;&amp; v8[i] &lt;&#x3D; 122 )</span><br><span class="line">    &#123;</span><br><span class="line">      v8[i] -&#x3D; 32;</span><br><span class="line">      v3 &#x3D; 1;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( !v3 &amp;&amp; v8[i] &gt;&#x3D; 65 &amp;&amp; v8[i] &lt;&#x3D; 90 )</span><br><span class="line">      v8[i] +&#x3D; 32;</span><br><span class="line">    v4[i] &#x3D; byte_4420B0[i] ^ sub_4013C0(v8[i]);</span><br><span class="line">    v3 &#x3D; 0;</span><br><span class="line">  &#125;</span><br><span class="line">  return strcmp(&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;, v4) &#x3D;&#x3D; 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题就是输入flag，然后大小写相互变化，最后再异或。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[32]&#x3D;&#123;0x0D,0x13,0x17,0x11,0x02,0x01,0x20,0x1D,0x0C,0x02,0x19,0x2F,0x17,0x2B,</span><br><span class="line">        0x24,0x1F,0x1E,0x16,0x09,0x0F,0x15,0x27,0x13,0x26,0x0A,0x2F,0x1E,0x1A,0x2D,</span><br><span class="line">0x0C,0x22,0x04&#125;;</span><br><span class="line">char b[24]&#x3D;&quot;GONDPHyGjPEKruv&#123;&#123;pj]X@rF&quot;;</span><br><span class="line">int i,j,v3&#x3D;0;</span><br><span class="line">    for ( i &#x3D; 0; i &lt; 24; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">    b[i]&#x3D;((b[i]^a[i])-72)^0x55;</span><br><span class="line">    if ( b[i] &gt;&#x3D; 97 &amp;&amp; b[i] &lt;&#x3D; 122 )</span><br><span class="line">        &#123;</span><br><span class="line">            b[i] -&#x3D; 32;</span><br><span class="line">            v3 &#x3D; 1;</span><br><span class="line">        &#125;</span><br><span class="line">        if ( !v3 &amp;&amp; b[i] &gt;&#x3D; 65 &amp;&amp; b[i] &lt;&#x3D; 90 )</span><br><span class="line">            b[i] +&#x3D; 32;</span><br><span class="line">    printf(&quot;%c&quot;,b[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>wadx_tdgk_aihc_ihkn_pjlm</p></blockquote><h1 id="easyRE1"><a href="#easyRE1" class="headerlink" title="easyRE1"></a>easyRE1</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=5592&page=2">题目链接</a><br>ida直接看main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char s1; &#x2F;&#x2F; [rsp+10h] [rbp-110h]</span><br><span class="line">  unsigned __int64 v5; &#x2F;&#x2F; [rsp+118h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v5 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  puts(&quot;What is the password?&quot;);</span><br><span class="line">  gets(&amp;s1);</span><br><span class="line">  if ( !strcmp(&amp;s1, &quot;the password&quot;) )</span><br><span class="line">    puts(&quot;FLAG:db2f62a36a018bce28e46d976e3f9864&quot;);</span><br><span class="line">  else</span><br><span class="line">    puts(&quot;Wrong!!&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>试着提交一下，对了。</p><blockquote><p>flag{db2f62a36a018bce28e46d976e3f9864}</p></blockquote><h1 id="ReverseMe-120"><a href="#ReverseMe-120" class="headerlink" title="ReverseMe-120"></a>ReverseMe-120</h1><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=1&id=4825&page=2">题目链接</a><br>ida32打开，查看字符串。</p><p><img src="/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/ReverseMe-120.png"></p><p>这道题很可能与base家族有关。</p><p><img src="/2021/03/01/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/1.png"></p><p>main函数里的运算只有41-44行<br>写脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char a[100]&#x3D;&quot;you_know_how_to_remove_junk_code&quot;;</span><br><span class="line">int i;</span><br><span class="line">    for ( i &#x3D; 0; i &lt; strlen(a); i++ )</span><br><span class="line">    &#123;</span><br><span class="line">    a[i] ^&#x3D; 0x25;</span><br><span class="line">    printf(&quot;%c&quot;,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>通常情况下，再base64解码就出来了，但这道题竟然是加密，以后还是要认真看ida里的函数。</p><blockquote><p>XEpQek5LSlJ6TUpSelFKeldASEpTQHpPUEtOekZKQUA=</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>hgame</title>
      <link href="2021/03/01/hgame/"/>
      <url>2021/03/01/hgame/</url>
      
        <content type="html"><![CDATA[<h1 id="apacha"><a href="#apacha" class="headerlink" title="apacha"></a>apacha</h1><a id="more"></a><p><a href="https://pan.baidu.com/s/1M0GtstGLe4Gge1fknju5hQ">题目附件</a>提取码：89ri<br>xxtea加密<br><a href="http://www.elecfans.com/emb/danpianji/20110825212016.html">XXTEA加密算法的原理及其C语言实现</a><br>拖入ida</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall main(__int64 a1, char **a2, char **a3)</span><br><span class="line">&#123;</span><br><span class="line">  _DWORD *v3; &#x2F;&#x2F; rbx</span><br><span class="line">  __int64 v4; &#x2F;&#x2F; rax</span><br><span class="line">  int v6; &#x2F;&#x2F; [rsp+0h] [rbp-48h]</span><br><span class="line">  int v7; &#x2F;&#x2F; [rsp+4h] [rbp-44h]</span><br><span class="line">  int v8; &#x2F;&#x2F; [rsp+8h] [rbp-40h]</span><br><span class="line">  int v9; &#x2F;&#x2F; [rsp+Ch] [rbp-3Ch]</span><br><span class="line">  char v10[40]; &#x2F;&#x2F; [rsp+10h] [rbp-38h]</span><br><span class="line">  unsigned __int64 v11; &#x2F;&#x2F; [rsp+38h] [rbp-10h]</span><br><span class="line"></span><br><span class="line">  v11 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  v6 &#x3D; 1;</span><br><span class="line">  v7 &#x3D; 2;</span><br><span class="line">  v8 &#x3D; 3;</span><br><span class="line">  v9 &#x3D; 4;</span><br><span class="line">  sub_11AA(a1, a2, a3);</span><br><span class="line">  __printf_chk(1LL, &quot;Please input: &quot;);</span><br><span class="line">  __isoc99_scanf(&quot;%35s&quot;, v10);</span><br><span class="line">  if ( (unsigned int)strlen(v10) !&#x3D; 35 )       &#x2F;&#x2F;验证长度</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;wrong length!&quot;);</span><br><span class="line">    exit(0);</span><br><span class="line">  &#125;</span><br><span class="line">  v3 &#x3D; malloc(0x8CuLL);</span><br><span class="line">  v4 &#x3D; 0LL;</span><br><span class="line">  do</span><br><span class="line">  &#123;</span><br><span class="line">    v3[v4] &#x3D; v10[v4];</span><br><span class="line">    ++v4;</span><br><span class="line">  &#125;</span><br><span class="line">  while ( v4 !&#x3D; 35 );</span><br><span class="line">  sub_1447(v3, 35LL, &amp;v6, v10);                &#x2F;&#x2F;xxtea加密</span><br><span class="line">  if ( (unsigned int)sub_1550(v3, 35LL) )      &#x2F;&#x2F;再次验证</span><br><span class="line">    puts(&quot;    :)  Flag is your input.&quot;);</span><br><span class="line">  else</span><br><span class="line">    puts(&quot;    :(  Try again.&quot;);</span><br><span class="line">  return 0LL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#define MX (z&gt;&gt;5^y&lt;&lt;2) + (y&gt;&gt;3^z&lt;&lt;4)^(sum^y) + (k[p&amp;3^e]^z);</span><br><span class="line">int btea(int* v, int n, unsigned int k[4])       </span><br><span class="line">&#123;</span><br><span class="line">    unsigned int z&#x3D;v[n-1], y&#x3D;v[0], sum&#x3D;0, e, DELTA&#x3D;0x9e3779b9;</span><br><span class="line">int p, q ;</span><br><span class="line">    if (n &gt; 1) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;* 加密过程 *&#x2F;</span><br><span class="line">        q &#x3D; 6 + 52&#x2F;n;</span><br><span class="line">        while (q-- &gt; 0)</span><br><span class="line">        &#123;</span><br><span class="line">    sum +&#x3D; DELTA;</span><br><span class="line">e &#x3D; (sum &gt;&gt; 2) &amp; 3;</span><br><span class="line">            for (p&#x3D;0; p&lt;n-1; p++)</span><br><span class="line">&#123;</span><br><span class="line">y &#x3D; v[p+1];</span><br><span class="line">z &#x3D; v[p] +&#x3D; MX;</span><br><span class="line">&#125;</span><br><span class="line">            y &#x3D; v[0];</span><br><span class="line">z &#x3D; v[n-1] +&#x3D; MX;</span><br><span class="line">&#125;</span><br><span class="line">        return 0 ;</span><br><span class="line">    &#125;</span><br><span class="line">else if (n &lt; -1) </span><br><span class="line">&#123;</span><br><span class="line">    &#x2F;* 解密过程 *&#x2F;</span><br><span class="line">        n &#x3D; -n;</span><br><span class="line">q &#x3D; 6 + 52&#x2F;n;</span><br><span class="line">sum &#x3D; q*DELTA ;</span><br><span class="line">        while (sum !&#x3D; 0)</span><br><span class="line">&#123;</span><br><span class="line">    e &#x3D; (sum &gt;&gt; 2) &amp; 3;</span><br><span class="line">            for (p&#x3D;n-1; p&gt;0; p--) </span><br><span class="line">&#123;</span><br><span class="line">z &#x3D; v[p-1];</span><br><span class="line">y &#x3D; v[p] -&#x3D; MX;</span><br><span class="line">&#125;</span><br><span class="line">            z &#x3D; v[n-1]; </span><br><span class="line">y &#x3D; v[0] -&#x3D; MX;</span><br><span class="line">sum -&#x3D; DELTA; </span><br><span class="line">&#125;</span><br><span class="line">        return 0; </span><br><span class="line">&#125;  </span><br><span class="line">return 1; </span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">unsigned int check[35]&#x3D;&#123;0x0E74EB323,0x0B7A72836,0x59CA6FE2,0x967CC5C1,0x0E7802674,0x3D2D54E6,</span><br><span class="line">0x8A9D0356,0x99DCC39C,0x7026D8ED,0x6A33FDAD,0x0F496550A,0x5C9C6F9E,0x1BE5D04C,0x6723AE17,</span><br><span class="line">0x5270A5C2,0x0AC42130A,0x84BE67B2,0x705CC779,0x5C513D98,0x0FB36DA2D,0x22179645,0x5CE3529D,</span><br><span class="line">0x0D189E1FB,0x0E85BD489,0x73C8D11F,0x54B5C196,0x0B67CB490,0x2117E4CA,0x9DE3F994,0x2F5AA1AA,</span><br><span class="line">0x0A7E801FD,0x0C30D6EAB,0x1BADDC9C,0x3453B04A,0x92A406F9&#125;;</span><br><span class="line">int n&#x3D;35;</span><br><span class="line">unsigned int k[4]&#x3D;&#123;1,2,3,4&#125;;</span><br><span class="line">btea(check, -n, k);</span><br><span class="line">int i;</span><br><span class="line">for(i&#x3D;0;i&lt;35;i++)</span><br><span class="line">&#123;</span><br><span class="line">    printf(&quot;%c&quot;,check[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">&#x2F;&#x2F;上述算法描述中，v表示为运算的长整型数据的首地址，k为长整型的密钥的首地址，n表示要要运算的组元个数，正表示加密，负表示解密。N是以32bit为基本单位的组元个数。</span><br></pre></td></tr></table></figure><blockquote><p>hgame{l00ks_1ike_y0u_f0Und_th3_t34}</p></blockquote><h1 id="helloRe"><a href="#helloRe" class="headerlink" title="helloRe"></a>helloRe</h1><p><a href="https://pan.baidu.com/s/1t1QacPyctI_WSWYYMA5_FQ">题目附件</a>提取码：ciyc<br>这道题就是异或与比较<br>直接上脚本</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char memory[22];</span><br><span class="line">int a&#x3D;0x0FF;</span><br><span class="line">int b[22]&#x3D;&#123;0x97, 0x99, 0x9C, 0x91, 0x9E, 0x81, 0x91, 0x9D, 0x9B, 0x9A, 0x9A, 0xAB, 0x81, 0x97, 0xAE, 0x80, 0x83, 0x8F, 0x94, 0x89, 0x99, 0x97&#125;;</span><br><span class="line">for (int i &#x3D; 0; i &lt; 23; i++)</span><br><span class="line">&#123;</span><br><span class="line">memory[i]&#x3D;b[i]^a;</span><br><span class="line">a--;</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;, memory);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">&gt;hgame&#123;hello_re_player&#125;</span><br></pre></td></tr></table></figure><h1 id="pypy"><a href="#pypy" class="headerlink" title="pypy"></a>pypy</h1><p><a href="https://pan.baidu.com/s/11-_mbvb6tZezucy2DbU7CQ">题目附件</a>提取码：a5mm<br>python字节码，参考文档还原，好像有软件可以直接还原。<br><a href="https://docs.python.org/zh-cn/3.7/library/dis.html">文档链接</a><br>大致意思为：输入flag，去flag第六位至倒数第一位，flag[2i]与flag[2i+1]交换，<br>flag[i]^=i,最后输出的flag为30466633346f59213b4139794520572b45514d61583151576638643a<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int flag[28]&#x3D;&#123;0x30,0x46,0x66,0x33,0x34,0x6f,0x59,0x21,0x3b,0x41,0x39,0x79,0x45,0x20,0x57,0x2b,0x45,0x51,0x4d,</span><br><span class="line">0x61,0x58,0x31,0x51,0x57,0x66,0x38,0x64,0x3a&#125;;</span><br><span class="line">int i,a;</span><br><span class="line">for(i&#x3D;0;i&lt;28;i++)</span><br><span class="line">&#123;</span><br><span class="line">flag[i]^&#x3D;i;</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;0;i&lt;14;i++)</span><br><span class="line">&#123;</span><br><span class="line">a&#x3D;flag[2*i];</span><br><span class="line">flag[2*i]&#x3D;flag[2*i+1];</span><br><span class="line">flag[2*i+1]&#x3D;a;</span><br><span class="line">&#125;</span><br><span class="line">for(i&#x3D;0;i&lt;28;i++)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hgame&#123;G00dj0&amp;_H3r3-I$Y@Ur_$L@G!~!~&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>刷题记录</title>
      <link href="2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="luck-guy"><a href="#luck-guy" class="headerlink" title="luck_guy"></a>luck_guy</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#[GXYCTF2019]luck_guy">题目链接</a><br>查看文件信息，是64位文件，拖进ida里，可以发现get_flag为flag的变换函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">unsigned __int64 get_flag()</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v0; &#x2F;&#x2F; eax</span><br><span class="line">  char v1; &#x2F;&#x2F; al</span><br><span class="line">  signed int i; &#x2F;&#x2F; [rsp+4h] [rbp-3Ch]</span><br><span class="line">  signed int j; &#x2F;&#x2F; [rsp+8h] [rbp-38h]</span><br><span class="line">  __int64 s; &#x2F;&#x2F; [rsp+10h] [rbp-30h]</span><br><span class="line">  char v6; &#x2F;&#x2F; [rsp+18h] [rbp-28h]</span><br><span class="line">  unsigned __int64 v7; &#x2F;&#x2F; [rsp+38h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v7 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  v0 &#x3D; time(0LL);</span><br><span class="line">  srand(v0);</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 4; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    switch ( rand() % 200 )</span><br><span class="line">    &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        puts(&quot;OK, it&#39;s flag:&quot;);</span><br><span class="line">        memset(&amp;s, 0, 0x28uLL);</span><br><span class="line">        strcat(&amp;s, f1);</span><br><span class="line">        strcat(&amp;s, &amp;f2);</span><br><span class="line">        printf(&quot;%s&quot;, &amp;s);</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        printf(&quot;Solar not like you&quot;);</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        printf(&quot;Solar want a girlfriend&quot;);</span><br><span class="line">        break;</span><br><span class="line">      case 4:</span><br><span class="line">        v6 &#x3D; 0;</span><br><span class="line">        s &#x3D; 9180147350284624745LL;</span><br><span class="line">        strcat(&amp;f2, &amp;s);</span><br><span class="line">        break;</span><br><span class="line">      case 5:</span><br><span class="line">        for ( j &#x3D; 0; j &lt;&#x3D; 7; ++j )</span><br><span class="line">        &#123;</span><br><span class="line">          if ( j % 2 &#x3D;&#x3D; 1 )</span><br><span class="line">            v1 &#x3D; *(&amp;f2 + j) - 2;</span><br><span class="line">          else</span><br><span class="line">            v1 &#x3D; *(&amp;f2 + j) - 1;</span><br><span class="line">          *(&amp;f2 + j) &#x3D; v1;</span><br><span class="line">        &#125;</span><br><span class="line">        break;</span><br><span class="line">      default:</span><br><span class="line">        puts(&quot;emmm,you can&#39;t find flag 23333&quot;);</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return __readfsqword(0x28u) ^ v7;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是先运行case 4，然后case 5，最后case 1.<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a[8]&#x3D;&#123;0x69,0x63,0x75,0x67,0x60,0x6f,0x66,0x7f&#125;;</span><br><span class="line">int i,v1;</span><br><span class="line">for(i&#x3D;0;i&lt;8;i++)</span><br><span class="line">&#123;</span><br><span class="line">if ( i % 2 &#x3D;&#x3D; 1 )</span><br><span class="line">            a[i] -&#x3D; 2;</span><br><span class="line">        else</span><br><span class="line">            a[i] -&#x3D; 1;</span><br><span class="line">        printf(&quot;%c&quot;,a[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{do_not_hate_me}</p></blockquote><h1 id="JustRE"><a href="#JustRE" class="headerlink" title="JustRE"></a>JustRE</h1><p><a href="https://buuoj.cn/challenges#[BJDCTF2020]JustRE">题目链接</a><br>ida32打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">BOOL __stdcall DialogFunc(HWND hWnd, UINT a2, WPARAM a3, LPARAM a4)</span><br><span class="line">&#123;</span><br><span class="line">  CHAR String; &#x2F;&#x2F; [esp+0h] [ebp-64h]</span><br><span class="line"></span><br><span class="line">  if ( a2 !&#x3D; 272 )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( a2 !&#x3D; 273 )</span><br><span class="line">      return 0;</span><br><span class="line">    if ( a3 !&#x3D; 1 &amp;&amp; a3 !&#x3D; 2 )</span><br><span class="line">    &#123;</span><br><span class="line">      sprintf(&amp;String, aD, ++dword_4099F0);</span><br><span class="line">      if ( dword_4099F0 &#x3D;&#x3D; 19999 )</span><br><span class="line">      &#123;</span><br><span class="line">        sprintf(&amp;String, aBjdDD2069a4579, 19999, 0);</span><br><span class="line">        SetWindowTextA(hWnd, &amp;String);</span><br><span class="line">        return 0;</span><br><span class="line">      &#125;</span><br><span class="line">      SetWindowTextA(hWnd, &amp;String);</span><br><span class="line">      return 0;</span><br><span class="line">    &#125;</span><br><span class="line">    EndDialog(hWnd, a3);</span><br><span class="line">  &#125;</span><br><span class="line">  return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>第14行，我把那两个数直接带进去，就对了。</p><blockquote><p>flag{1999902069a45792d233ac}</p></blockquote><h1 id="rome"><a href="#rome" class="headerlink" title="rome"></a>rome</h1><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]rome">题目链接</a><br>ida32打开</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br></pre></td><td class="code"><pre><span class="line">int func()</span><br><span class="line">&#123;</span><br><span class="line">  int result; &#x2F;&#x2F; eax</span><br><span class="line">  int v1; &#x2F;&#x2F; [esp+14h] [ebp-44h]</span><br><span class="line">  int v2; &#x2F;&#x2F; [esp+18h] [ebp-40h]</span><br><span class="line">  int v3; &#x2F;&#x2F; [esp+1Ch] [ebp-3Ch]</span><br><span class="line">  int v4; &#x2F;&#x2F; [esp+20h] [ebp-38h]</span><br><span class="line">  unsigned __int8 v5; &#x2F;&#x2F; [esp+24h] [ebp-34h]</span><br><span class="line">  unsigned __int8 v6; &#x2F;&#x2F; [esp+25h] [ebp-33h]</span><br><span class="line">  unsigned __int8 v7; &#x2F;&#x2F; [esp+26h] [ebp-32h]</span><br><span class="line">  unsigned __int8 v8; &#x2F;&#x2F; [esp+27h] [ebp-31h]</span><br><span class="line">  unsigned __int8 v9; &#x2F;&#x2F; [esp+28h] [ebp-30h]</span><br><span class="line">  int v10; &#x2F;&#x2F; [esp+29h] [ebp-2Fh]</span><br><span class="line">  int v11; &#x2F;&#x2F; [esp+2Dh] [ebp-2Bh]</span><br><span class="line">  int v12; &#x2F;&#x2F; [esp+31h] [ebp-27h]</span><br><span class="line">  int v13; &#x2F;&#x2F; [esp+35h] [ebp-23h]</span><br><span class="line">  unsigned __int8 v14; &#x2F;&#x2F; [esp+39h] [ebp-1Fh]</span><br><span class="line">  char v15; &#x2F;&#x2F; [esp+3Bh] [ebp-1Dh]</span><br><span class="line">  char v16; &#x2F;&#x2F; [esp+3Ch] [ebp-1Ch]</span><br><span class="line">  char v17; &#x2F;&#x2F; [esp+3Dh] [ebp-1Bh]</span><br><span class="line">  char v18; &#x2F;&#x2F; [esp+3Eh] [ebp-1Ah]</span><br><span class="line">  char v19; &#x2F;&#x2F; [esp+3Fh] [ebp-19h]</span><br><span class="line">  char v20; &#x2F;&#x2F; [esp+40h] [ebp-18h]</span><br><span class="line">  char v21; &#x2F;&#x2F; [esp+41h] [ebp-17h]</span><br><span class="line">  char v22; &#x2F;&#x2F; [esp+42h] [ebp-16h]</span><br><span class="line">  char v23; &#x2F;&#x2F; [esp+43h] [ebp-15h]</span><br><span class="line">  char v24; &#x2F;&#x2F; [esp+44h] [ebp-14h]</span><br><span class="line">  char v25; &#x2F;&#x2F; [esp+45h] [ebp-13h]</span><br><span class="line">  char v26; &#x2F;&#x2F; [esp+46h] [ebp-12h]</span><br><span class="line">  char v27; &#x2F;&#x2F; [esp+47h] [ebp-11h]</span><br><span class="line">  char v28; &#x2F;&#x2F; [esp+48h] [ebp-10h]</span><br><span class="line">  char v29; &#x2F;&#x2F; [esp+49h] [ebp-Fh]</span><br><span class="line">  char v30; &#x2F;&#x2F; [esp+4Ah] [ebp-Eh]</span><br><span class="line">  char v31; &#x2F;&#x2F; [esp+4Bh] [ebp-Dh]</span><br><span class="line">  int i; &#x2F;&#x2F; [esp+4Ch] [ebp-Ch]</span><br><span class="line"></span><br><span class="line">  v15 &#x3D; 81;</span><br><span class="line">  v16 &#x3D; 115;</span><br><span class="line">  v17 &#x3D; 119;</span><br><span class="line">  v18 &#x3D; 51;</span><br><span class="line">  v19 &#x3D; 115;</span><br><span class="line">  v20 &#x3D; 106;</span><br><span class="line">  v21 &#x3D; 95;</span><br><span class="line">  v22 &#x3D; 108;</span><br><span class="line">  v23 &#x3D; 122;</span><br><span class="line">  v24 &#x3D; 52;</span><br><span class="line">  v25 &#x3D; 95;</span><br><span class="line">  v26 &#x3D; 85;</span><br><span class="line">  v27 &#x3D; 106;</span><br><span class="line">  v28 &#x3D; 119;</span><br><span class="line">  v29 &#x3D; 64;</span><br><span class="line">  v30 &#x3D; 108;</span><br><span class="line">  v31 &#x3D; 0;</span><br><span class="line">  printf(&quot;Please input:&quot;);</span><br><span class="line">  scanf(&quot;%s&quot;, &amp;v5);</span><br><span class="line">  result &#x3D; v5;</span><br><span class="line">  if ( v5 &#x3D;&#x3D; &#39;A&#39; )</span><br><span class="line">  &#123;</span><br><span class="line">    result &#x3D; v6;</span><br><span class="line">    if ( v6 &#x3D;&#x3D; &#39;C&#39; )</span><br><span class="line">    &#123;</span><br><span class="line">      result &#x3D; v7;</span><br><span class="line">      if ( v7 &#x3D;&#x3D; &#39;T&#39; )</span><br><span class="line">      &#123;</span><br><span class="line">        result &#x3D; v8;</span><br><span class="line">        if ( v8 &#x3D;&#x3D; &#39;F&#39; )</span><br><span class="line">        &#123;</span><br><span class="line">          result &#x3D; v9;</span><br><span class="line">          if ( v9 &#x3D;&#x3D; &#39;&#123;&#39; )</span><br><span class="line">          &#123;</span><br><span class="line">            result &#x3D; v14;</span><br><span class="line">            if ( v14 &#x3D;&#x3D; &#39;&#125;&#39; )</span><br><span class="line">            &#123;</span><br><span class="line">              v1 &#x3D; v10;</span><br><span class="line">              v2 &#x3D; v11;</span><br><span class="line">              v3 &#x3D; v12;</span><br><span class="line">              v4 &#x3D; v13;</span><br><span class="line">              for ( i &#x3D; 0; i &lt;&#x3D; 15; ++i )</span><br><span class="line">              &#123;</span><br><span class="line">                if ( *(&amp;v1 + i) &gt; 64 &amp;&amp; *(&amp;v1 + i) &lt;&#x3D; 90 )</span><br><span class="line">                  *(&amp;v1 + i) &#x3D; (*(&amp;v1 + i) - 51) % 26 + 65;</span><br><span class="line">                if ( *(&amp;v1 + i) &gt; 96 &amp;&amp; *(&amp;v1 + i) &lt;&#x3D; 122 )</span><br><span class="line">                  *(&amp;v1 + i) &#x3D; (*(&amp;v1 + i) - 79) % 26 + 97;</span><br><span class="line">              &#125;</span><br><span class="line">              for ( i &#x3D; 0; i &lt;&#x3D; 15; ++i )</span><br><span class="line">              &#123;</span><br><span class="line">                result &#x3D; *(&amp;v15 + i);</span><br><span class="line">                if ( *(&amp;v1 + i) !&#x3D; result )</span><br><span class="line">                  return result;</span><br><span class="line">              &#125;</span><br><span class="line">              result &#x3D; printf(&quot;You are correct!&quot;);</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里就是你输入16个字符，经过变化和v15-v30比较，直接爆破。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int check[16]&#x3D;&#123;81,115,119,51,115,106,95,108,122,52,95,85,106,119,64,108&#125;;</span><br><span class="line">int i,j,k;</span><br><span class="line">    for ( i &#x3D; 0; i &lt; 16; i++ )</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;127;j++)</span><br><span class="line">        &#123;</span><br><span class="line">        k&#x3D;j;</span><br><span class="line">            if ( j &gt; 64 &amp;&amp; j &lt;&#x3D; 90 )</span><br><span class="line">                j &#x3D; (j - 51) % 26 + 65;</span><br><span class="line">            if ( j &gt; 96 &amp;&amp; j &lt;&#x3D; 122 )</span><br><span class="line">                j &#x3D; (j - 79) % 26 + 97;</span><br><span class="line">            if(j&#x3D;&#x3D;check[i])</span><br><span class="line">                printf(&quot;%c&quot;,k);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{Cae3ar_th4_Gre@t}</p></blockquote><h1 id="re"><a href="#re" class="headerlink" title="re"></a>re</h1><p><a href="https://buuoj.cn/challenges#[GUET-CTF2019]re">题目链接</a><br>文件包有upx壳，脱掉。<br>进入main函数，然后跳至sub_4009AE，a1为flag，算出来就行，第七位没有，手动爆破。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br></pre></td><td class="code"><pre><span class="line">_BOOL8 __fastcall sub_4009AE(char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  if ( 1629056 * *a1 !&#x3D; 166163712 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 6771600 * a1[1] !&#x3D; 731332800 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 3682944 * a1[2] !&#x3D; 357245568 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 10431000 * a1[3] !&#x3D; 1074393000 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 3977328 * a1[4] !&#x3D; 489211344 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 5138336 * a1[5] !&#x3D; 518971936 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 7532250 * a1[7] !&#x3D; 406741500 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 5551632 * a1[8] !&#x3D; 294236496 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 3409728 * a1[9] !&#x3D; 177305856 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 13013670 * a1[10] !&#x3D; 650683500 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 6088797 * a1[11] !&#x3D; 298351053 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 7884663 * a1[12] !&#x3D; 386348487 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 8944053 * a1[13] !&#x3D; 438258597 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 5198490 * a1[14] !&#x3D; 249527520 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 4544518 * a1[15] !&#x3D; 445362764 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 3645600 * a1[17] !&#x3D; 174988800 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 10115280 * a1[16] !&#x3D; 981182160 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 9667504 * a1[18] !&#x3D; 493042704 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 5364450 * a1[19] !&#x3D; 257493600 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 13464540 * a1[20] !&#x3D; 767478780 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 5488432 * a1[21] !&#x3D; 312840624 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 14479500 * a1[22] !&#x3D; 1404511500 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 6451830 * a1[23] !&#x3D; 316139670 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 6252576 * a1[24] !&#x3D; 619005024 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 7763364 * a1[25] !&#x3D; 372641472 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 7327320 * a1[26] !&#x3D; 373693320 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 8741520 * a1[27] !&#x3D; 498266640 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 8871876 * a1[28] !&#x3D; 452465676 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 4086720 * a1[29] !&#x3D; 208422720 )</span><br><span class="line">    return 0LL;</span><br><span class="line">  if ( 9374400 * a1[30] &#x3D;&#x3D; 515592000 )</span><br><span class="line">    return 5759124 * a1[31] &#x3D;&#x3D; 719890500;</span><br><span class="line">  return 0LL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{e165421110ba03099a1c039337}</p></blockquote><h1 id="level1"><a href="#level1" class="headerlink" title="level1"></a>level1</h1><p><a href="https://buuoj.cn/challenges#[WUSTCTF2020]level1">题目链接</a><br>ida64打开<br>找到main函数，这里逻辑很清晰，直接上脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int a1[19]&#x3D;&#123;198,232,816,200,1536,300,6144,984,51200,570,92160,1200,565248,756,1474560,800</span><br><span class="line">    6291456,1782,65536000&#125;;</span><br><span class="line">int i;</span><br><span class="line">for(i&#x3D;0;i&lt;19;i++)</span><br><span class="line">&#123;</span><br><span class="line">if ( (i+1) &amp; 1 )</span><br><span class="line">            printf(&quot;%c&quot;, (a1[i] &gt;&gt; (i+1) ) );</span><br><span class="line">        else</span><br><span class="line">            printf(&quot;%c&quot;, (a1[i]&#x2F;(i+1) ) );</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{d9-dE6-20c}</p></blockquote><h1 id="xxor"><a href="#xxor" class="headerlink" title="xxor"></a>xxor</h1><p>ida64打开<br>进入main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall main(__int64 a1, char **a2, char **a3)</span><br><span class="line">&#123;</span><br><span class="line">  signed int i; &#x2F;&#x2F; [rsp+8h] [rbp-68h]</span><br><span class="line">  signed int j; &#x2F;&#x2F; [rsp+Ch] [rbp-64h]</span><br><span class="line">  __int64 v6; &#x2F;&#x2F; [rsp+10h] [rbp-60h]</span><br><span class="line">  __int64 v7; &#x2F;&#x2F; [rsp+18h] [rbp-58h]</span><br><span class="line">  __int64 v8; &#x2F;&#x2F; [rsp+20h] [rbp-50h]</span><br><span class="line">  __int64 v9; &#x2F;&#x2F; [rsp+28h] [rbp-48h]</span><br><span class="line">  __int64 v10; &#x2F;&#x2F; [rsp+30h] [rbp-40h]</span><br><span class="line">  __int64 v11; &#x2F;&#x2F; [rsp+40h] [rbp-30h]</span><br><span class="line">  __int64 v12; &#x2F;&#x2F; [rsp+48h] [rbp-28h]</span><br><span class="line">  __int64 v13; &#x2F;&#x2F; [rsp+50h] [rbp-20h]</span><br><span class="line">  __int64 v14; &#x2F;&#x2F; [rsp+58h] [rbp-18h]</span><br><span class="line">  __int64 v15; &#x2F;&#x2F; [rsp+60h] [rbp-10h]</span><br><span class="line">  unsigned __int64 v16; &#x2F;&#x2F; [rsp+68h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v16 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  puts(&quot;Let us play a game?&quot;);</span><br><span class="line">  puts(&quot;you have six chances to input&quot;);</span><br><span class="line">  puts(&quot;Come on!&quot;);</span><br><span class="line">  v6 &#x3D; 0LL;</span><br><span class="line">  v7 &#x3D; 0LL;</span><br><span class="line">  v8 &#x3D; 0LL;</span><br><span class="line">  v9 &#x3D; 0LL;</span><br><span class="line">  v10 &#x3D; 0LL;</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 5; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    printf(&quot;%s&quot;, &quot;input: &quot;, i);</span><br><span class="line">    __isoc99_scanf(&quot;%d&quot;, &amp;v6 + 4 * i);</span><br><span class="line">  &#125;</span><br><span class="line">  v11 &#x3D; 0LL;</span><br><span class="line">  v12 &#x3D; 0LL;</span><br><span class="line">  v13 &#x3D; 0LL;</span><br><span class="line">  v14 &#x3D; 0LL;</span><br><span class="line">  v15 &#x3D; 0LL;</span><br><span class="line">  for ( j &#x3D; 0; j &lt;&#x3D; 4; j +&#x3D; 2 )</span><br><span class="line">  &#123;</span><br><span class="line">    dword_601078 &#x3D; *(&amp;v6 + j);</span><br><span class="line">    dword_60107C &#x3D; *(&amp;v6 + j + 1);</span><br><span class="line">    sub_400686(&amp;dword_601078, &amp;unk_601060);</span><br><span class="line">    *(&amp;v11 + j) &#x3D; dword_601078;</span><br><span class="line">    *(&amp;v11 + j + 1) &#x3D; dword_60107C;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( sub_400770(&amp;v11) !&#x3D; 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;NO NO NO~ &quot;);</span><br><span class="line">    exit(0);</span><br><span class="line">  &#125;</span><br><span class="line">  puts(&quot;Congratulation!\n&quot;);</span><br><span class="line">  puts(&quot;You seccess half\n&quot;);</span><br><span class="line">  puts(&quot;Do not forget to change input to hex and combine~\n&quot;);</span><br><span class="line">  puts(&quot;ByeBye&quot;);</span><br><span class="line">  return 0LL;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这道题分为两步，我们从下往上分析。</p><h2 id="sub-400770"><a href="#sub-400770" class="headerlink" title="sub_400770"></a>sub_400770</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">signed __int64 __fastcall sub_400770(_DWORD *a1)</span><br><span class="line">&#123;</span><br><span class="line">  signed __int64 result; &#x2F;&#x2F; rax</span><br><span class="line"></span><br><span class="line">  if ( a1[2] - a1[3] !&#x3D; 2225223423LL || a1[3] + a1[4] !&#x3D; 4201428739LL || a1[2] - a1[4] !&#x3D; </span><br><span class="line">    1121399208LL )</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;Wrong!&quot;);</span><br><span class="line">    result &#x3D; 0LL;</span><br><span class="line">  &#125;</span><br><span class="line">  else if ( *a1 !&#x3D; -548868226 || a1[5] !&#x3D; -2064448480 || a1[1] !&#x3D; 550153460 )</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;Wrong!&quot;);</span><br><span class="line">    result &#x3D; 0LL;</span><br><span class="line">  &#125;</span><br><span class="line">  else</span><br><span class="line">  &#123;</span><br><span class="line">    puts(&quot;good!&quot;);</span><br><span class="line">    result &#x3D; 1LL;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个函数简单，计算方程组就行。</p><blockquote><p>a1[2] - a1[3] == 2225223423<br>a1[3] + a1[4] == 4201428739<br>a1[2] - a1[4] == 1121399208<br>结果：a1[2]3774025685  a1[3]=1548802262  a1[4]=2652626477</p></blockquote><h2 id="sub-400686"><a href="#sub-400686" class="headerlink" title="sub_400686"></a>sub_400686</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">__int64 __fastcall sub_400686(unsigned int *a1, _DWORD *a2)</span><br><span class="line">&#123;</span><br><span class="line">  __int64 result; &#x2F;&#x2F; rax</span><br><span class="line">  unsigned int v3; &#x2F;&#x2F; [rsp+1Ch] [rbp-24h]</span><br><span class="line">  unsigned int v4; &#x2F;&#x2F; [rsp+20h] [rbp-20h]</span><br><span class="line">  int v5; &#x2F;&#x2F; [rsp+24h] [rbp-1Ch]</span><br><span class="line">  unsigned int i; &#x2F;&#x2F; [rsp+28h] [rbp-18h]</span><br><span class="line"></span><br><span class="line">  v3 &#x3D; *a1;</span><br><span class="line">  v4 &#x3D; a1[1];</span><br><span class="line">  v5 &#x3D; 0;</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 0x3F; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 +&#x3D; 1166789954;</span><br><span class="line">    v3 +&#x3D; (v4 + v5 + 11) ^ ((v4 &lt;&lt; 6) + *a2) ^ ((v4 &gt;&gt; 9) + a2[1]) ^ 0x20;</span><br><span class="line">    v4 +&#x3D; (v3 + v5 + 20) ^ ((v3 &lt;&lt; 6) + a2[2]) ^ ((v3 &gt;&gt; 9) + a2[3]) ^ 0x10;</span><br><span class="line">  &#125;</span><br><span class="line">  *a1 &#x3D; v3;</span><br><span class="line">  result &#x3D; v4;</span><br><span class="line">  a1[1] &#x3D; v4;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>a1为flag，a[2]={2,2,3,4}<br>这个函数就是进行异或操作，我们将它逆过来。<br>脚本：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    unsigned int a[6]&#x3D;&#123;3746099070,550153460,3774025685,1548802262,2652626477,2230518816 &#125;;</span><br><span class="line">    unsigned int b[4]&#x3D;&#123;2,2,3,4&#125;;</span><br><span class="line">    unsigned int v3, v4,v5;</span><br><span class="line">    int i;</span><br><span class="line">    for ( i &#x3D; 0; i &lt;&#x3D; 4; i +&#x3D; 2)</span><br><span class="line">    &#123;</span><br><span class="line">        v3 &#x3D; a[i];</span><br><span class="line">        v4 &#x3D; a[i + 1];</span><br><span class="line">        v5 &#x3D; 1166789954*0x40;</span><br><span class="line">        for (int i &#x3D; 0; i &lt;&#x3D; 0x3F; ++i) &#123;</span><br><span class="line">            v4 -&#x3D; (v3 + v5 + 20) ^ ((v3 &lt;&lt; 6) + b[2]) ^ ((v3 &gt;&gt; 9) + b[3]) ^ 0x10;</span><br><span class="line">            v3 -&#x3D; (v4 + v5 + 11) ^ ((v4 &lt;&lt; 6) + b[0]) ^ ((v4 &gt;&gt; 9) + b[1]) ^ 0x20;</span><br><span class="line">            v5 -&#x3D; 1166789954;</span><br><span class="line">        &#125;</span><br><span class="line">        a[i] &#x3D; v3;</span><br><span class="line">        a[i + 1] &#x3D; v4;</span><br><span class="line">    &#125;</span><br><span class="line">    for (i&#x3D;0;i&lt;6;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        printf(&quot;%0x&quot;,a[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出的十六进制再转为字符串。</p><blockquote><p>flag{re_is_great!}</p></blockquote><h1 id="Challenge1"><a href="#Challenge1" class="headerlink" title="Challenge1"></a>Challenge1</h1><p>ida32打开，进入main函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char Buffer; &#x2F;&#x2F; [esp+0h] [ebp-94h]</span><br><span class="line">  char *v5; &#x2F;&#x2F; [esp+80h] [ebp-14h]</span><br><span class="line">  char *v6; &#x2F;&#x2F; [esp+84h] [ebp-10h]</span><br><span class="line">  HANDLE v7; &#x2F;&#x2F; [esp+88h] [ebp-Ch]</span><br><span class="line">  HANDLE hFile; &#x2F;&#x2F; [esp+8Ch] [ebp-8h]</span><br><span class="line">  DWORD NumberOfBytesWritten; &#x2F;&#x2F; [esp+90h] [ebp-4h]</span><br><span class="line"></span><br><span class="line">  hFile &#x3D; GetStdHandle(0xFFFFFFF5);</span><br><span class="line">  v7 &#x3D; GetStdHandle(0xFFFFFFF6);</span><br><span class="line">  v6 &#x3D; &quot;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&quot;;</span><br><span class="line">  WriteFile(hFile, &quot;Enter password:\r\n&quot;, 0x12u, &amp;NumberOfBytesWritten, 0);</span><br><span class="line">  ReadFile(v7, &amp;Buffer, 0x80u, &amp;NumberOfBytesWritten, 0);</span><br><span class="line">  v5 &#x3D; sub_401260(&amp;Buffer, NumberOfBytesWritten - 2);</span><br><span class="line">  if ( !strcmp(v5, v6) )</span><br><span class="line">    WriteFile(hFile, &quot;Correct!\r\n&quot;, 0xBu, &amp;NumberOfBytesWritten, 0);</span><br><span class="line">  else</span><br><span class="line">    WriteFile(hFile, &quot;Wrong password\r\n&quot;, 0x11u, &amp;NumberOfBytesWritten, 0);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>进入第15行</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">_BYTE *__cdecl sub_401260(int a1, unsigned int a2)</span><br><span class="line">&#123;</span><br><span class="line">  unsigned int v3; &#x2F;&#x2F; ST24_4</span><br><span class="line">  int v4; &#x2F;&#x2F; ST2C_4</span><br><span class="line">  int v5; &#x2F;&#x2F; [esp+Ch] [ebp-24h]</span><br><span class="line">  int v6; &#x2F;&#x2F; [esp+10h] [ebp-20h]</span><br><span class="line">  int v7; &#x2F;&#x2F; [esp+14h] [ebp-1Ch]</span><br><span class="line">  int i; &#x2F;&#x2F; [esp+1Ch] [ebp-14h]</span><br><span class="line">  _BYTE *v9; &#x2F;&#x2F; [esp+24h] [ebp-Ch]</span><br><span class="line">  int v10; &#x2F;&#x2F; [esp+28h] [ebp-8h]</span><br><span class="line">  unsigned int v11; &#x2F;&#x2F; [esp+2Ch] [ebp-4h]</span><br><span class="line"></span><br><span class="line">  v9 &#x3D; malloc(4 * ((a2 + 2) &#x2F; 3) + 1);</span><br><span class="line">  if ( !v9 )</span><br><span class="line">    return 0;</span><br><span class="line">  v11 &#x3D; 0;</span><br><span class="line">  v10 &#x3D; 0;</span><br><span class="line">  while ( v11 &lt; a2 )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( v11 &gt;&#x3D; a2 )</span><br><span class="line">      v7 &#x3D; 0;</span><br><span class="line">    else</span><br><span class="line">      v7 &#x3D; *(v11++ + a1);</span><br><span class="line">    if ( v11 &gt;&#x3D; a2 )</span><br><span class="line">      v6 &#x3D; 0;</span><br><span class="line">    else</span><br><span class="line">      v6 &#x3D; *(v11++ + a1);</span><br><span class="line">    if ( v11 &gt;&#x3D; a2 )</span><br><span class="line">      v5 &#x3D; 0;</span><br><span class="line">    else</span><br><span class="line">      v5 &#x3D; *(v11++ + a1);</span><br><span class="line">    v3 &#x3D; v5 + (v7 &lt;&lt; 16) + (v6 &lt;&lt; 8);</span><br><span class="line">    v9[v10] &#x3D; byte_413000[(v3 &gt;&gt; 18) &amp; 0x3F];</span><br><span class="line">    v4 &#x3D; v10 + 1;</span><br><span class="line">    v9[v4++] &#x3D; byte_413000[(v3 &gt;&gt; 12) &amp; 0x3F];</span><br><span class="line">    v9[v4++] &#x3D; byte_413000[(v3 &gt;&gt; 6) &amp; 0x3F];</span><br><span class="line">    v9[v4] &#x3D; byte_413000[v5 &amp; 0x3F];</span><br><span class="line">    v10 &#x3D; v4 + 1;</span><br><span class="line">  &#125;</span><br><span class="line">  for ( i &#x3D; 0; i &lt; dword_413040[a2 % 3]; ++i )</span><br><span class="line">    v9[4 * ((a2 + 2) &#x2F; 3) - i - 1] &#x3D; 61;</span><br><span class="line">  v9[4 * ((a2 + 2) &#x2F; 3)] &#x3D; 0;</span><br><span class="line">  return v9;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>再字符串中有：ZYXABCDEFGHIJKLMNOPQRSTUVWzyxabcdefghijklmnopqrstuvw0123456789+/<br>很明显的base64加密，但密码表变了，根据密码表的变化，将密文转换成正常的base64.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">int i;</span><br><span class="line">char flag[52]&#x3D;&quot;x2dtJEOmyjacxDemx2eczT5cVS9fVUGvWTuZWjuexjRqy24rV29q&quot;;</span><br><span class="line">for(i&#x3D;0;i&lt;52;i++)</span><br><span class="line">&#123;</span><br><span class="line">if ((flag[i]&lt;&#x3D;&#39;W&#39;&amp;&amp;flag[i]&gt;&#x3D;&#39;A&#39;)||(flag[i]&lt;&#x3D;&#39;w&#39;&amp;&amp;flag[i]&gt;&#x3D;&#39;a&#39;))</span><br><span class="line">    flag[i]+&#x3D;3;  </span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;X&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;C&#39;;</span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;Y&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;B&#39;;</span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;Z&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;A&#39;;</span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;x&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;c&#39;;</span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;y&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;b&#39;;</span><br><span class="line">        else if (flag[i] &#x3D;&#x3D; &#39;z&#39;)</span><br><span class="line">         flag[i] &#x3D; &#39;a&#39;;</span><br><span class="line">        else if (flag[i]&gt;&#x3D;0&amp;&amp;flag[i]&lt;&#x3D;9)</span><br><span class="line">         flag[i] &#x3D; i;</span><br><span class="line">         printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出base64解码就行。</p><blockquote><p>flag{sh00ting_phish_in_a_barrel@flare-on.com}</p></blockquote><h1 id="Universe-final-answer"><a href="#Universe-final-answer" class="headerlink" title="Universe_final_answer"></a>Universe_final_answer</h1><p>ida64打开<br>进入main函数，然后跳转至本题的关键函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line">bool __fastcall sub_860(char *a1)</span><br><span class="line">&#123;</span><br><span class="line">  int v1; &#x2F;&#x2F; ecx</span><br><span class="line">  int v2; &#x2F;&#x2F; esi</span><br><span class="line">  int v3; &#x2F;&#x2F; edx</span><br><span class="line">  int v4; &#x2F;&#x2F; er9</span><br><span class="line">  int v5; &#x2F;&#x2F; er11</span><br><span class="line">  int v6; &#x2F;&#x2F; ebp</span><br><span class="line">  int v7; &#x2F;&#x2F; ebx</span><br><span class="line">  int v8; &#x2F;&#x2F; er8</span><br><span class="line">  int v9; &#x2F;&#x2F; er10</span><br><span class="line">  bool result; &#x2F;&#x2F; al</span><br><span class="line">  int v11; &#x2F;&#x2F; [rsp+0h] [rbp-38h]</span><br><span class="line"></span><br><span class="line">  v1 &#x3D; a1[1];</span><br><span class="line">  v2 &#x3D; *a1;</span><br><span class="line">  v3 &#x3D; a1[2];</span><br><span class="line">  v4 &#x3D; a1[3];</span><br><span class="line">  v5 &#x3D; a1[4];</span><br><span class="line">  v6 &#x3D; a1[6];</span><br><span class="line">  v7 &#x3D; a1[5];</span><br><span class="line">  v8 &#x3D; a1[7];</span><br><span class="line">  v9 &#x3D; a1[8];</span><br><span class="line">  result &#x3D; 0;</span><br><span class="line">  if ( -85 * v9 + 58 * v8 + 97 * v6 + v7 + -45 * v5 + 84 * v4 + 95 * v2 - 20 * v1 + 12 * </span><br><span class="line">    v3 &#x3D;&#x3D; 12613 )</span><br><span class="line">  &#123;</span><br><span class="line">    v11 &#x3D; a1[9];</span><br><span class="line">    if ( 30 * v11 + -70 * v9 + -122 * v6 + -81 * v7 + -66 * v5 + -115 * v4 + -41 * v3 + </span><br><span class="line">      -86 * v1 - 15 * v2 - 30 * v8 &#x3D;&#x3D; -54400</span><br><span class="line">      &amp;&amp; -103 * v11 + 120 * v8 + 108 * v7 + 48 * v4 + -89 * v3 + 78 * v1 - 41 * v2 + 31 * </span><br><span class="line">      v5 - (v6 &lt;&lt; 6) - 120 * v9 &#x3D;&#x3D; -10283</span><br><span class="line">      &amp;&amp; 71 * v6 + (v7 &lt;&lt; 7) + 99 * v5 + -111 * v3 + 85 * v1 + 79 * v2 - 30 * v4 - 119 * </span><br><span class="line">      v8 + 48 * v9 - 16 * v11 &#x3D;&#x3D; 22855</span><br><span class="line">      &amp;&amp; 5 * v11 + 23 * v9 + 122 * v8 + -19 * v6 + 99 * v7 + -117 * v5 + -69 * v3 + 22 * </span><br><span class="line">      v1 - 98 * v2 + 10 * v4 &#x3D;&#x3D; -2944</span><br><span class="line">      &amp;&amp; -54 * v11 + -23 * v8 + -82 * v3 + -85 * v2 + 124 * v1 - 11 * v4 - 8 * v5 - 60 * </span><br><span class="line">      v7 + 95 * v6 + 100 * v9 &#x3D;&#x3D; -2222</span><br><span class="line">      &amp;&amp; -83 * v11 + -111 * v7 + -57 * v2 + 41 * v1 + 73 * v3 - 18 * v4 + 26 * v5 + 16 * </span><br><span class="line">      v6 + 77 * v8 - 63 * v9 &#x3D;&#x3D; -13258</span><br><span class="line">      &amp;&amp; 81 * v11 + -48 * v9 + 66 * v8 + -104 * v6 + -121 * v7 + 95 * v5 + 85 * v4 + 60 * </span><br><span class="line">      v3 + -85 * v2 + 80 * v1 &#x3D;&#x3D; -1559</span><br><span class="line">      &amp;&amp; 101 * v11 + -85 * v9 + 7 * v6 + 117 * v7 + -83 * v5 + -101 * v4 + 90 * v3 + -28 * </span><br><span class="line">      v1 + 18 * v2 - v8 &#x3D;&#x3D; 6308 )</span><br><span class="line">    &#123;</span><br><span class="line">      result &#x3D; 99 * v11 + -28 * v9 + 5 * v8 + 93 * v6 + -18 * v7 + -127 * v5 + 6 * v4 + -9 </span><br><span class="line">      * v3 + -93 * v1 + 58 * v2 &#x3D;&#x3D; -1697;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这就是解方程，解出来后v2和v1互换，v7和v6互换。<br>结果：F0uRTy_7w@，输入到程序中得到flag，但我不会。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">flag&#123;F0uRTy_7w@_42&#125;</span><br></pre></td></tr></table></figure><h1 id="basic-re"><a href="#basic-re" class="headerlink" title="basic-re"></a>basic-re</h1><p>ida64打开，字符串里直接看到flag，这种题怎么这么靠后。</p><blockquote><p>flag{str1ngs_1s_y0ur_fr13nd}</p></blockquote><h1 id="hello-world-go"><a href="#hello-world-go" class="headerlink" title="hello_world_go"></a>hello_world_go</h1><p>ida64打开，进入main函数<br><img src="/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/hello_world_go1.PNG"></p><p><img src="/2021/03/01/%E5%88%B7%E9%A2%98%E8%AE%B0%E5%BD%95/hello_world_go2.PNG"></p><blockquote><p>flag{hello_world_gogogo}</p></blockquote><h1 id="Cr0ssfun"><a href="#Cr0ssfun" class="headerlink" title="Cr0ssfun"></a>Cr0ssfun</h1><p>ida64打开，转一下字符就是flag。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">a1[10] &#x3D;&#x3D; &#39;p&#39; &amp;&amp; a1[13] &#x3D;&#x3D; &#39;@&#39; &amp;&amp; a1[3] &#x3D;&#x3D; &#39;f&#39; &amp;&amp; a1[26] &#x3D;&#x3D; &#39;r&#39; &amp;&amp; a1[20] &#x3D;&#x3D; &#39;e&#39;</span><br><span class="line">a1[7] &#x3D;&#x3D; &#39;0&#39; &amp;&amp; a1[16] &#x3D;&#x3D; &#39;_&#39; &amp;&amp; a1[11] &#x3D;&#x3D; &#39;p&#39; &amp;&amp; a1[23] &#x3D;&#x3D; &#39;e&#39; &amp;&amp; a1[30] &#x3D;&#x3D; &#39;u&#39;</span><br><span class="line">*a1 &#x3D;&#x3D; &#39;w&#39; &amp;&amp; a1[6] &#x3D;&#x3D; &#39;2&#39; &amp;&amp; a1[22] &#x3D;&#x3D; &#39;s&#39; &amp;&amp; a1[31] &#x3D;&#x3D; &#39;n&#39; &amp;&amp; a1[12] &#x3D;&#x3D; &#39;_&#39;</span><br><span class="line">a1[15] &#x3D;&#x3D; &#39;d&#39; &amp;&amp; a1[8] &#x3D;&#x3D; &#39;&#123;&#39; &amp;&amp; a1[18] &#x3D;&#x3D; &#39;3&#39; &amp;&amp; a1[28] &#x3D;&#x3D; &#39;_&#39; &amp;&amp; a1[21] &#x3D;&#x3D; &#39;r&#39;</span><br><span class="line">a1[2] &#x3D;&#x3D; &#39;t&#39; &amp;&amp; a1[9] &#x3D;&#x3D; &#39;c&#39; &amp;&amp; a1[32] &#x3D;&#x3D; &#39;&#125;&#39; &amp;&amp; a1[19] &#x3D;&#x3D; &#39;v&#39; &amp;&amp; a1[5] &#x3D;&#x3D; &#39;0&#39;</span><br><span class="line">      &amp;&amp; a1[14] &#x3D;&#x3D; &#39;n&#39;</span><br><span class="line">a1[4] &#x3D;&#x3D; &#39;2&#39; &amp;&amp; a1[17] &#x3D;&#x3D; &#39;r&#39; &amp;&amp; a1[29] &#x3D;&#x3D; &#39;f&#39; &amp;&amp; a1[17] &#x3D;&#x3D; &#39;r&#39; &amp;&amp; a1[24] &#x3D;&#x3D; &#39;_&#39;</span><br><span class="line">a1[1] &#x3D;&#x3D; &#39;c&#39; &amp;&amp; a1[25] &#x3D;&#x3D; &#39;@&#39; &amp;&amp; a1[27] &#x3D;&#x3D; &#39;e&#39;</span><br></pre></td></tr></table></figure><p>整理一下顺序就行了。<br>flag{cpp_@nd_r3verse_@re_fun}</p><h1 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h1><p><a href="https://buuoj.cn/challenges#[ACTF%E6%96%B0%E7%94%9F%E8%B5%9B2020]easyre">题目链接</a><br>ida32打开，进入main函数。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl main(int argc, const char **argv, const char **envp)</span><br><span class="line">&#123;</span><br><span class="line">  char v4; &#x2F;&#x2F; [esp+12h] [ebp-2Eh]</span><br><span class="line">  char v5; &#x2F;&#x2F; [esp+13h] [ebp-2Dh]</span><br><span class="line">  char v6; &#x2F;&#x2F; [esp+14h] [ebp-2Ch]</span><br><span class="line">  char v7; &#x2F;&#x2F; [esp+15h] [ebp-2Bh]</span><br><span class="line">  char v8; &#x2F;&#x2F; [esp+16h] [ebp-2Ah]</span><br><span class="line">  char v9; &#x2F;&#x2F; [esp+17h] [ebp-29h]</span><br><span class="line">  char v10; &#x2F;&#x2F; [esp+18h] [ebp-28h]</span><br><span class="line">  char v11; &#x2F;&#x2F; [esp+19h] [ebp-27h]</span><br><span class="line">  char v12; &#x2F;&#x2F; [esp+1Ah] [ebp-26h]</span><br><span class="line">  char v13; &#x2F;&#x2F; [esp+1Bh] [ebp-25h]</span><br><span class="line">  char v14; &#x2F;&#x2F; [esp+1Ch] [ebp-24h]</span><br><span class="line">  char v15; &#x2F;&#x2F; [esp+1Dh] [ebp-23h]</span><br><span class="line">  int v16; &#x2F;&#x2F; [esp+1Eh] [ebp-22h]</span><br><span class="line">  int v17; &#x2F;&#x2F; [esp+22h] [ebp-1Eh]</span><br><span class="line">  int v18; &#x2F;&#x2F; [esp+26h] [ebp-1Ah]</span><br><span class="line">  __int16 v19; &#x2F;&#x2F; [esp+2Ah] [ebp-16h]</span><br><span class="line">  char v20; &#x2F;&#x2F; [esp+2Ch] [ebp-14h]</span><br><span class="line">  char v21; &#x2F;&#x2F; [esp+2Dh] [ebp-13h]</span><br><span class="line">  char v22; &#x2F;&#x2F; [esp+2Eh] [ebp-12h]</span><br><span class="line">  int v23; &#x2F;&#x2F; [esp+2Fh] [ebp-11h]</span><br><span class="line">  int v24; &#x2F;&#x2F; [esp+33h] [ebp-Dh]</span><br><span class="line">  int v25; &#x2F;&#x2F; [esp+37h] [ebp-9h]</span><br><span class="line">  char v26; &#x2F;&#x2F; [esp+3Bh] [ebp-5h]</span><br><span class="line">  int i; &#x2F;&#x2F; [esp+3Ch] [ebp-4h]</span><br><span class="line"></span><br><span class="line">  __main();</span><br><span class="line">  v4 &#x3D; &#39;*&#39;;</span><br><span class="line">  v5 &#x3D; &#39;F&#39;;</span><br><span class="line">  v6 &#x3D; &#39;\&#39;&#39;;</span><br><span class="line">  v7 &#x3D; &#39;&quot;&#39;;</span><br><span class="line">  v8 &#x3D; &#39;N&#39;;</span><br><span class="line">  v9 &#x3D; &#39;,&#39;;</span><br><span class="line">  v10 &#x3D; &#39;&quot;&#39;;</span><br><span class="line">  v11 &#x3D; &#39;(&#39;;</span><br><span class="line">  v12 &#x3D; &#39;I&#39;;</span><br><span class="line">  v13 &#x3D; &#39;?&#39;;</span><br><span class="line">  v14 &#x3D; &#39;+&#39;;</span><br><span class="line">  v15 &#x3D; &#39;@&#39;;</span><br><span class="line">  printf(&quot;Please input:&quot;);</span><br><span class="line">  scanf(&quot;%s&quot;, &amp;v19);</span><br><span class="line">  if ( v19 !&#x3D; &#39;A&#39; || HIBYTE(v19) !&#x3D; &#39;C&#39; || v20 !&#x3D; &#39;T&#39; || v21 !&#x3D; &#39;F&#39; || v22 !&#x3D; &#39;&#123;&#39; || v26 </span><br><span class="line">  !&#x3D; &#39;&#125;&#39; )</span><br><span class="line">    return 0;</span><br><span class="line">  v16 &#x3D; v23;</span><br><span class="line">  v17 &#x3D; v24;</span><br><span class="line">  v18 &#x3D; v25;</span><br><span class="line">  for ( i &#x3D; 0; i &lt;&#x3D; 11; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( *(&amp;v4 + i) !&#x3D; _data_start__[*(&amp;v16 + i) - 1] )</span><br><span class="line">      return 0;</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;You are correct!&quot;);</span><br><span class="line">  return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入12个字符，这些字符代表的数字，就是_data_start__的下标+1.</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">char </span><br><span class="line">  a[96]&#x3D;&#123;0x7E,0x7D,0x7C,0x7B,0x7A,0x79,0x78,0x77,0x76,0x75,0x74,0x73,0x72,0x71,0x70,0x6F,</span><br><span class="line">    0x6E,0x6D,0x6C,0x6B,0x6A,0x69,0x68,0x67,0x66,0x65,0x64,0x63,0x62,0x61,0x60,0x5F,</span><br><span class="line">    0x5E,0x5D,0x5C,0x5B,0x5A,0x59,0x58,0x57,0x56,0x55,0x54,0x53,0x52,0x51,0x50,0x4F,</span><br><span class="line">    0x4E,0x4D,0x4C,0x4B,0x4A,0x49,0x48,0x47,0x46,0x45,0x44,0x43,0x42,0x41,0x40,0x3F,</span><br><span class="line">    0x3E,0x3D,0x3C,0x3B,0x3A,0x39,0x38,0x37,0x36,0x35,0x34,0x33,0x32,0x31,0x30,0x2F,</span><br><span class="line">    0x2E,0x2D,0x2C,0x2B,0x2A,0x29,0x28,0x27,0x26,0x25,0x24,0x23,0x20,0x21,0x22,0x00,&#125;;</span><br><span class="line">int b[12]&#x3D;&#123;42,70,39,34,78,44,34,40,73,63,43,64&#125;;</span><br><span class="line">int i,j;</span><br><span class="line">for(i&#x3D;0;i&lt;12;i++)</span><br><span class="line">&#123;</span><br><span class="line">for(j&#x3D;0;j&lt;96;j++)</span><br><span class="line">&#123;</span><br><span class="line">if(a[j]&#x3D;&#x3D;b[i])</span><br><span class="line">printf(&quot;%c&quot;,j+1);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p>flag{U9X_1S_W6@T?}</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Buuctf——刮开有奖</title>
      <link href="2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/"/>
      <url>2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/</url>
      
        <content type="html"><![CDATA[<h1 id="Buuctf——刮开有奖"><a href="#Buuctf——刮开有奖" class="headerlink" title="Buuctf——刮开有奖"></a>Buuctf——刮开有奖</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96">题目链接</a><br><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-dialogboxparama">DialogBoxParamA函数</a><br><a href="https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-getdlgitemtexta">GetDlgItemTextA函数</a></p><h2 id="1-查看文件信息"><a href="#1-查看文件信息" class="headerlink" title="1.查看文件信息"></a>1.查看文件信息</h2><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/1.png"></p><h2 id="2-分析伪代码"><a href="#2-分析伪代码" class="headerlink" title="2.分析伪代码"></a>2.分析伪代码</h2><p>32位ida打开，发现WinMain函数，然后查看伪代码。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/2.png"></p><p>进入DialogFunc。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">BOOL __userpurge DialogFunc@&lt;eax&gt;(int a1@&lt;edi&gt;, int a2@&lt;esi&gt;, HWND hDlg, UINT a4, WPARAM </span><br><span class="line">a5, LPARAM a6)</span><br><span class="line">&#123;</span><br><span class="line">  const char *v6; &#x2F;&#x2F; esi</span><br><span class="line">  const char *v7; &#x2F;&#x2F; edi</span><br><span class="line">  int v9; &#x2F;&#x2F; [esp+4h] [ebp-20030h]</span><br><span class="line">  int v10; &#x2F;&#x2F; [esp+8h] [ebp-2002Ch]</span><br><span class="line">  int v11; &#x2F;&#x2F; [esp+Ch] [ebp-20028h]</span><br><span class="line">  int v12; &#x2F;&#x2F; [esp+10h] [ebp-20024h]</span><br><span class="line">  int v13; &#x2F;&#x2F; [esp+14h] [ebp-20020h]</span><br><span class="line">  int v14; &#x2F;&#x2F; [esp+18h] [ebp-2001Ch]</span><br><span class="line">  int v15; &#x2F;&#x2F; [esp+1Ch] [ebp-20018h]</span><br><span class="line">  int v16; &#x2F;&#x2F; [esp+20h] [ebp-20014h]</span><br><span class="line">  int v17; &#x2F;&#x2F; [esp+24h] [ebp-20010h]</span><br><span class="line">  int v18; &#x2F;&#x2F; [esp+28h] [ebp-2000Ch]</span><br><span class="line">  int v19; &#x2F;&#x2F; [esp+2Ch] [ebp-20008h]</span><br><span class="line">  CHAR String; &#x2F;&#x2F; [esp+30h] [ebp-20004h]</span><br><span class="line">  char v21; &#x2F;&#x2F; [esp+31h] [ebp-20003h]</span><br><span class="line">  char v22; &#x2F;&#x2F; [esp+32h] [ebp-20002h]</span><br><span class="line">  char v23; &#x2F;&#x2F; [esp+33h] [ebp-20001h]</span><br><span class="line">  char v24; &#x2F;&#x2F; [esp+34h] [ebp-20000h]</span><br><span class="line">  char v25; &#x2F;&#x2F; [esp+10030h] [ebp-10004h]</span><br><span class="line">  char v26; &#x2F;&#x2F; [esp+10031h] [ebp-10003h]</span><br><span class="line">  char v27; &#x2F;&#x2F; [esp+10032h] [ebp-10002h]</span><br><span class="line">  int v28; &#x2F;&#x2F; [esp+20028h] [ebp-Ch]</span><br><span class="line">  int v29; &#x2F;&#x2F; [esp+2002Ch] [ebp-8h]</span><br><span class="line"></span><br><span class="line">  __alloca_probe();</span><br><span class="line">  if ( a4 &#x3D;&#x3D; 272 )</span><br><span class="line">    return 1;</span><br><span class="line">  v29 &#x3D; a2;</span><br><span class="line">  v28 &#x3D; a1;</span><br><span class="line">  if ( a4 !&#x3D; 273 )</span><br><span class="line">    return 0;</span><br><span class="line">  if ( a5 &#x3D;&#x3D; 1001 )</span><br><span class="line">  &#123;</span><br><span class="line">    memset(&amp;String, 0, 0xFFFFu);</span><br><span class="line">    GetDlgItemTextA(hDlg, 1000, &amp;String, 0xFFFF);</span><br><span class="line">    if ( strlen(&amp;String) &#x3D;&#x3D; 8 )</span><br><span class="line">    &#123;</span><br><span class="line">      v9 &#x3D; 90;</span><br><span class="line">      v10 &#x3D; 74;</span><br><span class="line">      v11 &#x3D; 83;</span><br><span class="line">      v12 &#x3D; 69;</span><br><span class="line">      v13 &#x3D; 67;</span><br><span class="line">      v14 &#x3D; 97;</span><br><span class="line">      v15 &#x3D; 78;</span><br><span class="line">      v16 &#x3D; 72;</span><br><span class="line">      v17 &#x3D; 51;</span><br><span class="line">      v18 &#x3D; 110;</span><br><span class="line">      v19 &#x3D; 103;</span><br><span class="line">      sub_4010F0(&amp;v9, 0, 10);</span><br><span class="line">      memset(&amp;v25, 0, 0xFFFFu);</span><br><span class="line">      v6 &#x3D; sub_401000(&amp;v25, strlen(&amp;v25));</span><br><span class="line">      memset(&amp;v25, 0, 0xFFFFu);</span><br><span class="line">      v26 &#x3D; v23;</span><br><span class="line">      v25 &#x3D; v22;</span><br><span class="line">      v27 &#x3D; v24;</span><br><span class="line">      v7 &#x3D; sub_401000(&amp;v25, strlen(&amp;v25));</span><br><span class="line">      if ( String &#x3D;&#x3D; v9 + 34</span><br><span class="line">        &amp;&amp; v21 &#x3D;&#x3D; v13</span><br><span class="line">        &amp;&amp; 4 * v22 - 141 &#x3D;&#x3D; 3 * v11</span><br><span class="line">        &amp;&amp; v23 &#x2F; 4 &#x3D;&#x3D; 2 * (v16 &#x2F; 9)</span><br><span class="line">        &amp;&amp; !strcmp(v6, &quot;ak1w&quot;)</span><br><span class="line">        &amp;&amp; !strcmp(v7, &quot;V1Ax&quot;) )</span><br><span class="line">      &#123;</span><br><span class="line">        MessageBoxA(hDlg, &quot;U g3t 1T!&quot;, &quot;@_@&quot;, 0);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( a5 !&#x3D; 1 &amp;&amp; a5 !&#x3D; 2 )</span><br><span class="line">    return 0;</span><br><span class="line">  EndDialog(hDlg, a5);</span><br><span class="line">  return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>函数sub_4010F0(&amp;v9, 0, 10)伪代码</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line">int __cdecl sub_4010F0(int a1, int a2, int a3)</span><br><span class="line">&#123;</span><br><span class="line">  int result; &#x2F;&#x2F; eax</span><br><span class="line">  int i; &#x2F;&#x2F; esi</span><br><span class="line">  int v5; &#x2F;&#x2F; ecx</span><br><span class="line">  int v6; &#x2F;&#x2F; edx</span><br><span class="line"></span><br><span class="line">  result &#x3D; a3;</span><br><span class="line">  for ( i &#x3D; a2; i &lt;&#x3D; a3; a2 &#x3D; i )</span><br><span class="line">  &#123;</span><br><span class="line">    v5 &#x3D; 4 * i;</span><br><span class="line">    v6 &#x3D; *(4 * i + a1);</span><br><span class="line">    if ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class="line">    &#123;</span><br><span class="line">      do</span><br><span class="line">      &#123;</span><br><span class="line">        if ( v6 &gt; *(a1 + 4 * result) )</span><br><span class="line">        &#123;</span><br><span class="line">          if ( i &gt;&#x3D; result )</span><br><span class="line">            break;</span><br><span class="line">          ++i;</span><br><span class="line">          *(v5 + a1) &#x3D; *(a1 + 4 * result);</span><br><span class="line">          if ( i &gt;&#x3D; result )</span><br><span class="line">            break;</span><br><span class="line">          while ( *(a1 + 4 * i) &lt;&#x3D; v6 )</span><br><span class="line">          &#123;</span><br><span class="line">            if ( ++i &gt;&#x3D; result )</span><br><span class="line">              goto LABEL_13;</span><br><span class="line">          &#125;</span><br><span class="line">          if ( i &gt;&#x3D; result )</span><br><span class="line">            break;</span><br><span class="line">          v5 &#x3D; 4 * i;</span><br><span class="line">          *(a1 + 4 * result) &#x3D; *(4 * i + a1);</span><br><span class="line">        &#125;</span><br><span class="line">        --result;</span><br><span class="line">      &#125;</span><br><span class="line">      while ( i &lt; result );</span><br><span class="line">    &#125;</span><br><span class="line">LABEL_13:</span><br><span class="line">    *(a1 + 4 * result) &#x3D; v6;</span><br><span class="line">    sub_4010F0(a1, a2, i - 1);</span><br><span class="line">    result &#x3D; a3;</span><br><span class="line">    ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是将v9-v19进行变化，得到新的v9-v19，以下为脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int __cdecl sub_4010F0(char *a1, int a2, int a3);</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char v9[11] &#x3D; &#123;90,74,83,69,67,97,78,72,51,110,103&#125;;</span><br><span class="line">    sub_4010F0(v9, 0, 10);</span><br><span class="line">    for (int j&#x3D;0;j&lt;11;j++)</span><br><span class="line">        printf(&quot;%c&quot;,v9[j]);</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br><span class="line">int __cdecl sub_4010F0(char *a1, int a2, int a3)</span><br><span class="line">&#123;</span><br><span class="line">    int result;</span><br><span class="line">    int i;</span><br><span class="line">    int v5;</span><br><span class="line">    int v6;</span><br><span class="line">    result &#x3D; a3;</span><br><span class="line">    for ( i &#x3D; a2; i &lt;&#x3D; a3; a2 &#x3D; i )</span><br><span class="line">    &#123;</span><br><span class="line">        v5 &#x3D; i;</span><br><span class="line">        v6 &#x3D; a1[i];</span><br><span class="line">        if ( a2 &lt; result &amp;&amp; i &lt; result )</span><br><span class="line">        &#123;</span><br><span class="line">            do</span><br><span class="line">            &#123;</span><br><span class="line">                if ( v6 &gt; a1[result] )</span><br><span class="line">                &#123;</span><br><span class="line">                    if ( i &gt;&#x3D; result )</span><br><span class="line">                        break;</span><br><span class="line">                    ++i;</span><br><span class="line">                    a1[v5] &#x3D; a1[result];</span><br><span class="line">                    if ( i &gt;&#x3D; result )</span><br><span class="line">                        break;</span><br><span class="line">                    while ( a1[i] &lt;&#x3D; v6 )</span><br><span class="line">                    &#123;</span><br><span class="line">                        if ( ++i &gt;&#x3D; result )</span><br><span class="line">                        goto LABEL_13;</span><br><span class="line">                    &#125;</span><br><span class="line">                    if ( i &gt;&#x3D; result )</span><br><span class="line">                        break;</span><br><span class="line">                    v5 &#x3D; i;</span><br><span class="line">                    a1[result] &#x3D; a1[i];</span><br><span class="line">                &#125;</span><br><span class="line">                --result;</span><br><span class="line">            &#125;</span><br><span class="line">            while ( i &lt; result );</span><br><span class="line">        &#125;</span><br><span class="line">    LABEL_13:</span><br><span class="line">        a1[result] &#x3D; v6;</span><br><span class="line">        sub_4010F0(a1, a2, i - 1);</span><br><span class="line">        result &#x3D; a3;</span><br><span class="line">        ++i;</span><br><span class="line">  &#125;</span><br><span class="line">  return result;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/3.png"></p><p>接着查看函数sub_401000</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line">BOOL __userpurge DialogFunc@&lt;eax&gt;(int a1@&lt;edi&gt;, int a2@&lt;esi&gt;, HWND hDlg, UINT a4, WPARAM a5, LPARAM a6)</span><br><span class="line">&#123;</span><br><span class="line">  const char *v6; &#x2F;&#x2F; esi</span><br><span class="line">  const char *v7; &#x2F;&#x2F; edi</span><br><span class="line">  int v9; &#x2F;&#x2F; [esp+4h] [ebp-20030h]</span><br><span class="line">  int v10; &#x2F;&#x2F; [esp+8h] [ebp-2002Ch]</span><br><span class="line">  int v11; &#x2F;&#x2F; [esp+Ch] [ebp-20028h]</span><br><span class="line">  int v12; &#x2F;&#x2F; [esp+10h] [ebp-20024h]</span><br><span class="line">  int v13; &#x2F;&#x2F; [esp+14h] [ebp-20020h]</span><br><span class="line">  int v14; &#x2F;&#x2F; [esp+18h] [ebp-2001Ch]</span><br><span class="line">  int v15; &#x2F;&#x2F; [esp+1Ch] [ebp-20018h]</span><br><span class="line">  int v16; &#x2F;&#x2F; [esp+20h] [ebp-20014h]</span><br><span class="line">  int v17; &#x2F;&#x2F; [esp+24h] [ebp-20010h]</span><br><span class="line">  int v18; &#x2F;&#x2F; [esp+28h] [ebp-2000Ch]</span><br><span class="line">  int v19; &#x2F;&#x2F; [esp+2Ch] [ebp-20008h]</span><br><span class="line">  CHAR String; &#x2F;&#x2F; [esp+30h] [ebp-20004h]</span><br><span class="line">  char v21; &#x2F;&#x2F; [esp+31h] [ebp-20003h]</span><br><span class="line">  char v22; &#x2F;&#x2F; [esp+32h] [ebp-20002h]</span><br><span class="line">  char v23; &#x2F;&#x2F; [esp+33h] [ebp-20001h]</span><br><span class="line">  char v24; &#x2F;&#x2F; [esp+34h] [ebp-20000h]</span><br><span class="line">  char v25; &#x2F;&#x2F; [esp+10030h] [ebp-10004h]</span><br><span class="line">  char v26; &#x2F;&#x2F; [esp+10031h] [ebp-10003h]</span><br><span class="line">  char v27; &#x2F;&#x2F; [esp+10032h] [ebp-10002h]</span><br><span class="line">  int v28; &#x2F;&#x2F; [esp+20028h] [ebp-Ch]</span><br><span class="line">  int v29; &#x2F;&#x2F; [esp+2002Ch] [ebp-8h]</span><br><span class="line"></span><br><span class="line">  __alloca_probe();</span><br><span class="line">  if ( a4 &#x3D;&#x3D; 272 )</span><br><span class="line">    return 1;</span><br><span class="line">  v29 &#x3D; a2;</span><br><span class="line">  v28 &#x3D; a1;</span><br><span class="line">  if ( a4 !&#x3D; 273 )</span><br><span class="line">    return 0;</span><br><span class="line">  if ( a5 &#x3D;&#x3D; 1001 )</span><br><span class="line">  &#123;</span><br><span class="line">    memset(&amp;String, 0, 0xFFFFu);</span><br><span class="line">    GetDlgItemTextA(hDlg, 1000, &amp;String, 0xFFFF);</span><br><span class="line">    if ( strlen(&amp;String) &#x3D;&#x3D; 8 )</span><br><span class="line">    &#123;</span><br><span class="line">      v9 &#x3D; 90;</span><br><span class="line">      v10 &#x3D; 74;</span><br><span class="line">      v11 &#x3D; 83;</span><br><span class="line">      v12 &#x3D; 69;</span><br><span class="line">      v13 &#x3D; 67;</span><br><span class="line">      v14 &#x3D; 97;</span><br><span class="line">      v15 &#x3D; 78;</span><br><span class="line">      v16 &#x3D; 72;</span><br><span class="line">      v17 &#x3D; 51;</span><br><span class="line">      v18 &#x3D; 110;</span><br><span class="line">      v19 &#x3D; 103;</span><br><span class="line">      sub_4010F0(&amp;v9, 0, 10);</span><br><span class="line">      memset(&amp;v25, 0, 0xFFFFu);</span><br><span class="line">      v6 &#x3D; sub_401000(&amp;v25, strlen(&amp;v25));</span><br><span class="line">      memset(&amp;v25, 0, 0xFFFFu);</span><br><span class="line">      v26 &#x3D; v23;</span><br><span class="line">      v25 &#x3D; v22;</span><br><span class="line">      v27 &#x3D; v24;</span><br><span class="line">      v7 &#x3D; sub_401000(&amp;v25, strlen(&amp;v25));</span><br><span class="line">      if ( String &#x3D;&#x3D; v9 + 34</span><br><span class="line">        &amp;&amp; v21 &#x3D;&#x3D; v13</span><br><span class="line">        &amp;&amp; 4 * v22 - 141 &#x3D;&#x3D; 3 * v11</span><br><span class="line">        &amp;&amp; v23 &#x2F; 4 &#x3D;&#x3D; 2 * (v16 &#x2F; 9)</span><br><span class="line">        &amp;&amp; !strcmp(v6, &quot;ak1w&quot;)</span><br><span class="line">        &amp;&amp; !strcmp(v7, &quot;V1Ax&quot;) )</span><br><span class="line">      &#123;</span><br><span class="line">        MessageBoxA(hDlg, &quot;U g3t 1T!&quot;, &quot;@_@&quot;, 0);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( a5 !&#x3D; 1 &amp;&amp; a5 !&#x3D; 2 )</span><br><span class="line">    return 0;</span><br><span class="line">  EndDialog(hDlg, a5);</span><br><span class="line">  return 1;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/4.png"></p><p>我们可以猜测这里应该是base64加密。</p><h2 id="3-得出flag"><a href="#3-得出flag" class="headerlink" title="3.得出flag"></a>3.得出flag</h2><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/8.png"></p><p>string是一个8位的数组，再结合最开始的定义：</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/5.png"></p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/6.png"></p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/7.png"></p><p>而且v22-v24压入了同一处，v25-v27压入了同一处。<br>之后将”ak1w”和”V1Ax”进行base64解密。前三个为ak1w的，后三个为V1Ax的。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/9.png"></p><p>将这些字符拼接再一起就是flag。<br>由于v7是经v22、v23、v24得来的，所WP1先输入，jMp后输入。</p><p><img src="/2021/01/19/Buuctf%E2%80%94%E2%80%94%E5%88%AE%E5%BC%80%E6%9C%89%E5%A5%96/10.png"></p><p>flag{UJWP1jMp}</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>寒假第一周</title>
      <link href="2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/"/>
      <url>2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="SimpleRev"><a href="#SimpleRev" class="headerlink" title="SimpleRev"></a>SimpleRev</h1><a id="more"></a><p><a href="https://buuoj.cn/challenges#SimpleRev">题目链接</a><br>查看文件信息</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_1.png"></p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_2.png"></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line">unsigned __int64 Decry()</span><br><span class="line">&#123;</span><br><span class="line">  char v1; &#x2F;&#x2F; [rsp+Fh] [rbp-51h]</span><br><span class="line">  int v2; &#x2F;&#x2F; [rsp+10h] [rbp-50h]</span><br><span class="line">  int v3; &#x2F;&#x2F; [rsp+14h] [rbp-4Ch]</span><br><span class="line">  int i; &#x2F;&#x2F; [rsp+18h] [rbp-48h]</span><br><span class="line">  int v5; &#x2F;&#x2F; [rsp+1Ch] [rbp-44h]</span><br><span class="line">  char src[8]; &#x2F;&#x2F; [rsp+20h] [rbp-40h]</span><br><span class="line">  __int64 v7; &#x2F;&#x2F; [rsp+28h] [rbp-38h]</span><br><span class="line">  int v8; &#x2F;&#x2F; [rsp+30h] [rbp-30h]</span><br><span class="line">  __int64 v9; &#x2F;&#x2F; [rsp+40h] [rbp-20h]</span><br><span class="line">  __int64 v10; &#x2F;&#x2F; [rsp+48h] [rbp-18h]</span><br><span class="line">  int v11; &#x2F;&#x2F; [rsp+50h] [rbp-10h]</span><br><span class="line">  unsigned __int64 v12; &#x2F;&#x2F; [rsp+58h] [rbp-8h]</span><br><span class="line"></span><br><span class="line">  v12 &#x3D; __readfsqword(0x28u);</span><br><span class="line">  *(_QWORD *)src &#x3D; &#39;SLCDN&#39;;</span><br><span class="line">  v7 &#x3D; 0LL;</span><br><span class="line">  v8 &#x3D; 0;</span><br><span class="line">  v9 &#x3D; &#39;wodah&#39;;</span><br><span class="line">  v10 &#x3D; 0LL;</span><br><span class="line">  v11 &#x3D; 0;</span><br><span class="line">  text &#x3D; (char *)join(key3, &amp;v9);               &#x2F;&#x2F; text&#x3D;killshadow</span><br><span class="line">  strcpy(key, key1);                            &#x2F;&#x2F; key&#x3D;ADSFKDNCLS</span><br><span class="line">  strcat(key, src);</span><br><span class="line">  v2 &#x3D; 0;</span><br><span class="line">  v3 &#x3D; 0;</span><br><span class="line">  getchar();</span><br><span class="line">  v5 &#x3D; strlen(key);</span><br><span class="line">  for ( i &#x3D; 0; i &lt; v5; ++i )</span><br><span class="line">  &#123;</span><br><span class="line">    if ( key[v3 % v5] &gt; 64 &amp;&amp; key[v3 % v5] &lt;&#x3D; 90 )&#x2F;&#x2F; 大写变小写</span><br><span class="line">      key[i] &#x3D; key[v3 % v5] + 32;</span><br><span class="line">    ++v3;</span><br><span class="line">  &#125;</span><br><span class="line">  printf(&quot;Please input your flag:&quot;, src);</span><br><span class="line">  while ( 1 )</span><br><span class="line">  &#123;</span><br><span class="line">    v1 &#x3D; getchar();</span><br><span class="line">    if ( v1 &#x3D;&#x3D; 10 )</span><br><span class="line">      break;</span><br><span class="line">    if ( v1 &#x3D;&#x3D; 32 )</span><br><span class="line">    &#123;</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">    else</span><br><span class="line">    &#123;</span><br><span class="line">      if ( v1 &lt;&#x3D; 96 || v1 &gt; 122 )</span><br><span class="line">      &#123;</span><br><span class="line">        if ( v1 &gt; 64 &amp;&amp; v1 &lt;&#x3D; 90 )</span><br><span class="line">          str2[v2] &#x3D; (v1 - 39 - key[v3++ % v5] + 97) % 26 + 97;</span><br><span class="line">      &#125;</span><br><span class="line">      else</span><br><span class="line">      &#123;</span><br><span class="line">        str2[v2] &#x3D; (v1 - 39 - key[v3++ % v5] + 97) % 26 + 97;</span><br><span class="line">      &#125;</span><br><span class="line">      if ( !(v3 % v5) )</span><br><span class="line">        putchar(32);</span><br><span class="line">      ++v2;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  if ( !strcmp(text, str2) )</span><br><span class="line">    puts(&quot;Congratulation!\n&quot;);</span><br><span class="line">  else</span><br><span class="line">    puts(&quot;Try again!\n&quot;);</span><br><span class="line">  return __readfsqword(0x28u) ^ v12;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这个伪代码就是将key由大写变为小写，即key = “ADSFKNDCLS”。<br>然后输入v1，我们对v1进行运算得到str2，将str2与text比较相同就正确。这里v1就是flag，我们知道str2，所以对v1进行逆运算，以下为脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char text[]&#x3D;&quot;killshadow&quot;;</span><br><span class="line">    char key[]&#x3D;&quot;adsfkndcls&quot;;</span><br><span class="line">    int v5 &#x3D; strlen(key),i,j,v3&#x3D;0;</span><br><span class="line">    char flag[v5];</span><br><span class="line">    for ( i &#x3D; 0; i &lt; v5; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        if ( key[v3 % v5] &gt; 64 &amp;&amp; key[v3 % v5] &lt;&#x3D; 90 )</span><br><span class="line">            key[i] &#x3D; key[v3 % v5] + 32;</span><br><span class="line">        ++v3;</span><br><span class="line">    &#125;</span><br><span class="line">    for(i&#x3D;0;i&lt;v5;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        for(j&#x3D;0;j&lt;5;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            flag[i] &#x3D; text[i] - 97 + 26*j + 39 -97 + key[i];</span><br><span class="line">            if(flag[i] &gt;&#x3D; 65 &amp;&amp; flag[i] &lt;&#x3D; 90)</span><br><span class="line">                printf(&quot;%c&quot;,flag[i]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/SimpleRev_3.png"></p><p>最后在外面套上falg。</p><h1 id="xor"><a href="#xor" class="headerlink" title="xor"></a>xor</h1><p><a href="https://buuoj.cn/challenges#xor">题目链接</a><br>查看文件信息</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_1.png"></p><p>ida查看main函数伪代码</p><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_2.png"></p><p>意思就是输入33个字符，后一位与前一位进行异或运算，异或后的结果与global比较，相同则成功。我们对global进行逆运算，得出的即是flag。两次异或会还原，所以异或的逆运算还是异或。<br>下面为脚本。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    char v6[33];</span><br><span class="line">    char global[33]&#x3D;&#123;&#39;f&#39;,0xA,&#39;k&#39;,0xC,&#39;w&#39;,&#39;&amp;&#39;,&#39;O&#39;,&#39;.&#39;,&#39;@&#39;,0x11,&#39;x&#39;,0x0D,&#39;Z&#39;,&#39;;&#39;,&#39;U&#39;,0x11,&#39;p&#39;</span><br><span class="line">    ,0x19,&#39;F&#39;,0x1F,&#39;v&#39;,&#39;&quot;&#39;,&#39;M&#39;,&#39;#&#39;,&#39;D&#39;,0x0E,&#39;g&#39;,6,&#39;h&#39;,0x0F,&#39;G&#39;,&#39;2&#39;,&#39;O&#39;&#125;;</span><br><span class="line">    int i;</span><br><span class="line">    for ( i &#x3D; 1; i &lt; 33; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">        v6[i] &#x3D;global[i] ^ global[i - 1];</span><br><span class="line">        printf(&quot;%c&quot;,v6[i]);</span><br><span class="line">    &#125;</span><br><span class="line">    return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2021/01/16/%E5%AF%92%E5%81%87%E7%AC%AC%E4%B8%80%E5%91%A8/xor_4.png"></p><p>第一位f是不运算的，抄上就行了。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第二周学习与做题记录</title>
      <link href="2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h1><a id="more"></a><ol><li>学习了while、for、do while循环</li><li>学习了&gt;、&gt;=、!=、==、+=等运算符</li></ol><h1 id="Write-up"><a href="#Write-up" class="headerlink" title="Write_up"></a>Write_up</h1><h2 id="easyre"><a href="#easyre" class="headerlink" title="easyre"></a>easyre</h2><p><a href="https://buuoj.cn/challenges#easyre">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/easyre_1.PNG"></p><p>IDA打开搜索字符串即找到flag</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/easyre_2.PNG"></p><h2 id="reverse1"><a href="#reverse1" class="headerlink" title="reverse1"></a>reverse1</h2><p><a href="https://buuoj.cn/challenges#reverse1">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_1.PNG"></p><p>IDA打开查看字符串</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_2.PNG"></p><p>由 this is the right flag 转到主要函数</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_4.PNG"></p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse1_3.PNG"></p><p>flag为{hell0_w0rld}</p><h2 id="reverse3"><a href="#reverse3" class="headerlink" title="reverse3"></a>reverse3</h2><p><a href="https://buuoj.cn/challenges#reverse3">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_1.PNG"></p><p>ida32打开查看main函数</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_2.PNG"></p><p>sub_4110BE经过跳转为下方函数</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br></pre></td><td class="code"><pre><span class="line">void *__cdecl sub_411AB0(char *a1, unsigned int a2, int *a3)</span><br><span class="line">&#123;</span><br><span class="line">  int v4; &#x2F;&#x2F; STE0_4</span><br><span class="line">  int v5; &#x2F;&#x2F; STE0_4</span><br><span class="line">  int v6; &#x2F;&#x2F; STE0_4</span><br><span class="line">  int v7; &#x2F;&#x2F; [esp+D4h] [ebp-38h]</span><br><span class="line">  signed int i; &#x2F;&#x2F; [esp+E0h] [ebp-2Ch]</span><br><span class="line">  unsigned int v9; &#x2F;&#x2F; [esp+ECh] [ebp-20h]</span><br><span class="line">  int v10; &#x2F;&#x2F; [esp+ECh] [ebp-20h]</span><br><span class="line">  signed int v11; &#x2F;&#x2F; [esp+ECh] [ebp-20h]</span><br><span class="line">  void *Dst; &#x2F;&#x2F; [esp+F8h] [ebp-14h]</span><br><span class="line">  char *v13; &#x2F;&#x2F; [esp+104h] [ebp-8h]</span><br><span class="line"></span><br><span class="line">  if ( !a1 || !a2 )</span><br><span class="line">    return 0;</span><br><span class="line">  v9 &#x3D; a2 &#x2F; 3;</span><br><span class="line">  if ( (signed int)(a2 &#x2F; 3) % 3 )</span><br><span class="line">    ++v9;</span><br><span class="line">  v10 &#x3D; 4 * v9;</span><br><span class="line">  *a3 &#x3D; v10;</span><br><span class="line">  Dst &#x3D; malloc(v10 + 1);</span><br><span class="line">  if ( !Dst )</span><br><span class="line">    return 0;</span><br><span class="line">  j_memset(Dst, 0, v10 + 1);</span><br><span class="line">  v13 &#x3D; a1;</span><br><span class="line">  v11 &#x3D; a2;</span><br><span class="line">  v7 &#x3D; 0;</span><br><span class="line">  while ( v11 &gt; 0 )</span><br><span class="line">  &#123;</span><br><span class="line">    byte_41A144[2] &#x3D; 0;</span><br><span class="line">    byte_41A144[1] &#x3D; 0;</span><br><span class="line">    byte_41A144[0] &#x3D; 0;</span><br><span class="line">    for ( i &#x3D; 0; i &lt; 3 &amp;&amp; v11 &gt;&#x3D; 1; ++i )</span><br><span class="line">    &#123;</span><br><span class="line">      byte_41A144[i] &#x3D; *v13;</span><br><span class="line">      --v11;</span><br><span class="line">      ++v13;</span><br><span class="line">    &#125;</span><br><span class="line">    if ( !i )</span><br><span class="line">      break;</span><br><span class="line">    switch ( i )</span><br><span class="line">    &#123;</span><br><span class="line">      case 1:</span><br><span class="line">        *((_BYTE *)Dst + v7) &#x3D; aAbcdefghijklmn[(signed int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];</span><br><span class="line">        v4 &#x3D; v7 + 1;</span><br><span class="line">        *((_BYTE *)Dst + v4++) &#x3D; aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) | </span><br><span class="line">         16 * (byte_41A144[0] &amp; 3)];</span><br><span class="line">        *((_BYTE *)Dst + v4++) &#x3D; aAbcdefghijklmn[64];</span><br><span class="line">        *((_BYTE *)Dst + v4) &#x3D; aAbcdefghijklmn[64];</span><br><span class="line">        v7 &#x3D; v4 + 1;</span><br><span class="line">        break;</span><br><span class="line">      case 2:</span><br><span class="line">        *((_BYTE *)Dst + v7) &#x3D; aAbcdefghijklmn[(signed int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];</span><br><span class="line">        v5 &#x3D; v7 + 1;</span><br><span class="line">        *((_BYTE *)Dst + v5++) &#x3D; aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) |</span><br><span class="line">        16 * (byte_41A144[0] &amp; 3)];</span><br><span class="line">        *((_BYTE *)Dst + v5++) &#x3D; aAbcdefghijklmn[((byte_41A144[2] &amp; 0xC0) &gt;&gt; 6) |</span><br><span class="line">        4 * (byte_41A144[1] &amp; 0xF)];</span><br><span class="line">        *((_BYTE *)Dst + v5) &#x3D; aAbcdefghijklmn[64];</span><br><span class="line">        v7 &#x3D; v5 + 1;</span><br><span class="line">        break;</span><br><span class="line">      case 3:</span><br><span class="line">        *((_BYTE *)Dst + v7) &#x3D; aAbcdefghijklmn[(signed int)(unsigned __int8)byte_41A144[0] &gt;&gt; 2];</span><br><span class="line">        v6 &#x3D; v7 + 1;</span><br><span class="line">        *((_BYTE *)Dst + v6++) &#x3D; aAbcdefghijklmn[((byte_41A144[1] &amp; 0xF0) &gt;&gt; 4) |</span><br><span class="line">        16 * (byte_41A144[0] &amp; 3)];</span><br><span class="line">        *((_BYTE *)Dst + v6++) &#x3D; aAbcdefghijklmn[((byte_41A144[2] &amp; 0xC0) &gt;&gt; 6) |</span><br><span class="line">        4 * (byte_41A144[1] &amp; 0xF)];</span><br><span class="line">        *((_BYTE *)Dst + v6) &#x3D; aAbcdefghijklmn[byte_41A144[2] &amp; 0x3F];</span><br><span class="line">        v7 &#x3D; v6 + 1;</span><br><span class="line">        break;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  *((_BYTE *)Dst + v7) &#x3D; 0;</span><br><span class="line">  return Dst;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_3.PNG"></p><p>应该是将str进行base64加密</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/reverse3_4.PNG"></p><p>将整个程序还原一下</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">char Dest[100] &#x3D; &#123;0&#125;;</span><br><span class="line">char Str2[] &#x3D; &quot;e3nifIH9b_C@n@dH&quot;;</span><br><span class="line">int i, v8;</span><br><span class="line">v8 &#x3D; strlen(Str2);</span><br><span class="line">for ( i &#x3D; 0; i &lt; v8; i++ )</span><br><span class="line">&#123;</span><br><span class="line">Dest[i] &#x3D; Str2[i] - i;</span><br><span class="line">printf(&quot;%c&quot;, Dest[i]);</span><br><span class="line">&#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出为e2lfbDB2ZV95b3V9<br>base64解码为{i_l0ve_you}</p><h2 id="GKCTF2020-Check-1n"><a href="#GKCTF2020-Check-1n" class="headerlink" title="[GKCTF2020]Check_1n"></a>[GKCTF2020]Check_1n</h2><p><a href="https://buuoj.cn/challenges#reverse3">题目链接</a><br>查看文件信息</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_1.PNG"></p><p>打开程序提示输入密码，随意输个提示密码错误<br>在ida中搜索’密码错误’</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_2.PNG"></p><p>跳转至指定函数，找到’密码错误’所在位置</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_3.PNG"></p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_4.PNG"></p><p>密码为HelloWorld</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_5.PNG"></p><p>选中flag，base64解码</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_6.PNG"></p><p>根据提示打开’打砖块’, flag自动出现</p><p><img src="/2020/12/05/%E7%AC%AC%E4%BA%8C%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/%5BGKCTF2020%5DCheck_1n_7.PNG"></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>补充</title>
      <link href="2020/11/29/%E8%A1%A5%E5%85%85/"/>
      <url>2020/11/29/%E8%A1%A5%E5%85%85/</url>
      
        <content type="html"><![CDATA[<h1 id="背景正在优化中。"><a href="#背景正在优化中。" class="headerlink" title="背景正在优化中。"></a>背景正在优化中。</h1><a id="more"></a>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>编程练习</title>
      <link href="2020/11/29/%E8%8F%9C%E9%B8%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/"/>
      <url>2020/11/29/%E8%8F%9C%E9%B8%A1%E7%9A%84%E7%BC%96%E7%A8%8B%E7%BB%83%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="C语言篇"><a href="#C语言篇" class="headerlink" title="C语言篇"></a>C语言篇</h1><a id="more"></a><h2 id="计算1-2-3-…-n"><a href="#计算1-2-3-…-n" class="headerlink" title="计算1+2+3+…+n"></a>计算1+2+3+…+n</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt; &#x2F;&#x2F;计算1+2+3+...+n </span><br><span class="line"> int main(void)</span><br><span class="line"> &#123;</span><br><span class="line">int a, b, c, d;</span><br><span class="line">b &#x3D; 0;</span><br><span class="line">c &#x3D; 0;</span><br><span class="line">printf(&quot;请输入1开始程序\n&quot;);</span><br><span class="line">while(scanf(&quot;%d&quot;, &amp;d) &#x3D;&#x3D; 1)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;请输入n（为数字），输出结果为：1+2+3+...+n\n&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;a);</span><br><span class="line">    while (b &lt;&#x3D; a)</span><br><span class="line">        &#123;</span><br><span class="line">         c &#x3D; b + c;</span><br><span class="line">         b++; </span><br><span class="line">        &#125;</span><br><span class="line">    printf(&quot;1+2+3+...+n &#x3D; %d\n&quot;, c);</span><br><span class="line">    printf(&quot;请输入q离开程序，或者输入1再次开始程序计算令一个1+2+3+...+n\n&quot;);</span><br><span class="line">    b &#x3D; 0;</span><br><span class="line">    c &#x3D; 0;</span><br><span class="line">    &#125;</span><br><span class="line">return 0;</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><h2 id="计算n！"><a href="#计算n！" class="headerlink" title="计算n！"></a>计算n！</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt; &#x2F;&#x2F;计算n！ (不精确且最大为170)</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int a, b, d;</span><br><span class="line">double c;</span><br><span class="line">b &#x3D; 1;</span><br><span class="line">c &#x3D; 1;</span><br><span class="line">printf(&quot;请输入1开始程序\n&quot;);</span><br><span class="line">while(scanf(&quot;%d&quot;, &amp;d) &#x3D;&#x3D; 1)</span><br><span class="line">&#123;</span><br><span class="line">printf(&quot;请输入n（为数字），输出结果为n！：\n&quot;);</span><br><span class="line">    scanf(&quot;%d&quot;, &amp;a);</span><br><span class="line">    while (b &lt;&#x3D; a)</span><br><span class="line">        &#123;</span><br><span class="line">        c &#x3D; b * c;</span><br><span class="line">        b++; </span><br><span class="line">        &#125;</span><br><span class="line">    printf(&quot;n! &#x3D; %e\n&quot;, c);</span><br><span class="line">    printf(&quot;请输入q离开程序，或者输入1再次开始程序计算令一个数的阶乘\n&quot;);</span><br><span class="line">    b &#x3D; 1;</span><br><span class="line">    c &#x3D; 1;</span><br><span class="line">    &#125;</span><br><span class="line">return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一周学习与做题记录</title>
      <link href="2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/"/>
      <url>2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/</url>
      
        <content type="html"><![CDATA[<h1 id="学习记录"><a href="#学习记录" class="headerlink" title="学习记录"></a>学习记录</h1><a id="more"></a><h2 id="C语言篇"><a href="#C语言篇" class="headerlink" title="C语言篇"></a>C语言篇</h2><ol><li>学习了——strlen()函数</li><li>学习了关键字——const</li><li>学习了字符串</li><li>如何创建、储存字符串</li><li>如何用strlen()函数获取字符串长度</li><li>用C预处理器指令#define和ANSCI的const修饰创建符号常量</li></ol><h2 id="x86汇编篇"><a href="#x86汇编篇" class="headerlink" title="x86汇编篇"></a>x86汇编篇</h2><h3 id="常用x86汇编指令："><a href="#常用x86汇编指令：" class="headerlink" title="常用x86汇编指令："></a>常用x86汇编指令：</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">MOV MOV EAX,ECX(将ECX的值存入EAX)</span><br><span class="line">ADD ADD EAX,ECX EAX+&#x3D;ECX(将EAX加上ECX的值)</span><br><span class="line">SUB SUB EAX,ECX EAX-&#x3D;ECX(将EAX减去ECX的值)</span><br><span class="line">INC INC EAX EAX++ (将EAX的值加1)</span><br><span class="line">DEC DEC EAX EAX-- (将EAX的值减1)</span><br><span class="line">LEA LEA EAX,[ECX+4] (将ECX+4的值存入EAX)</span><br><span class="line">CMP CMP EAX ECX if(EAX&#x3D;&#x3D;ECX) ZF&#x3D;1 else ZF&#x3D;0 (将两个值比较并根据结果设置0标志位ZF)</span><br><span class="line">TEST TEST EAX EAX if(eax&#x3D;&#x3D;0) ZF&#x3D;1 else ZF&#x3D;0 (将值与0比较并根据结果设置0标志位ZF)</span><br><span class="line">JE(JZ) JE 04001000 if(ZF&#x3D;&#x3D;1) GOTO 04001000 (若ZF为1，则跳转道04001000)</span><br><span class="line">JNE(JNZ) JNE 04001000 if(ZF&#x3D;&#x3D;0) GOTO 04001000 (若ZF为0，则跳转道04001000)</span><br><span class="line">JMP JMP 04001000 GOTO 04001000 (无条件跳转道04001000)</span><br><span class="line">CALL CALL IstrcmpW (调用IstrcmpW)</span><br><span class="line">PUSH PUSH 00000001 (将00000001入栈)</span><br><span class="line">POP POP EAX (出栈并将获取的值存入EAX)</span><br></pre></td></tr></table></figure><h1 id="Write-up"><a href="#Write-up" class="headerlink" title="Write_up"></a>Write_up</h1><h2 id="insanity"><a href="#insanity" class="headerlink" title="insanity"></a>insanity</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5079&page=1">题目链接</a><br>搜索字符串直接获取flag</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/insanity.PNG"></p><h2 id="re1"><a href="#re1" class="headerlink" title="re1"></a>re1</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5073&page=1">题目链接</a><br>ida打开，观察main函数伪代码</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_1.png"></p><p>然后在16进制试图搜索flag</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_2.png"></p><p>双击转到</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/re1_3.png"></p><h2 id="game"><a href="#game" class="headerlink" title="game"></a>game</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5074&page=1">题目链接</a><br>ida打开，查看main函数伪代码，在结尾跳转多次，发现</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/game_1.png"></p><p>还有一堆数字，以及一个for循环。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/game_2.png"></p><p>此for循环运行结果即为flag。</p><p>还原一下程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">    int a[56] &#x3D; &#123;18,64,98,5,2,4,6,3,6,48,49,65,32,12,48,65,31,78,62,32,49,32,1,57,96,3,21,9,4,</span><br><span class="line">        62,3,5,4,1,2,3,44,65,78,32,16,97,54,16,44,52,32,64,89,45,32,65,15,34,18,16,0&#125;;</span><br><span class="line">    int b[56] &#x3D; &#123;123,32,18,98,119,108,65,41,124,80,125,38,124,111,74,49,83,108,94,108,84,6,</span><br><span class="line">        96,83,44,121,104,110,32,95,117,101,99,123,127,119,96,48,107,71,92,29,81,107,</span><br><span class="line">        90,85,64,12,43,76,86,13,114,1,117,126,0&#125;;</span><br><span class="line">    int i &#x3D; 1;</span><br><span class="line">    while(i&lt;&#x3D;56)</span><br><span class="line">        &#123;</span><br><span class="line">        a[i] ^&#x3D; b[i];</span><br><span class="line">            a[i] ^&#x3D; 19;</span><br><span class="line">            printf(&quot;%c&quot;, a[i]);</span><br><span class="line">            i++;</span><br><span class="line">        &#125;</span><br><span class="line"> return 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p><h2 id="Hello-CTF"><a href="#Hello-CTF" class="headerlink" title="Hello, CTF"></a>Hello, CTF</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5075&page=1">题目链接</a><br>查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/Hello,CTF_1.png"></p><p>‘v13’16进制转字符串。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/Hello,CTF_2.png"></p><h2 id="open-source"><a href="#open-source" class="headerlink" title="open-source"></a>open-source</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5076&page=1">题目链接</a><br>此题文件可直接放入编译器中打开。</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/open-source.png"></p><p>直接计算：51966*31337+8*11+7-1615810207=12648430<br>转16进制：c0ffee</p><h2 id="simple-unpack"><a href="#simple-unpack" class="headerlink" title="simple-unpack"></a>simple-unpack</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5077&page=1">题目链接</a><br>查看文件</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/simple-unpack_2.png"></p><p>软件去壳，再用ida打开</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/simple-unpack_4.png"></p><h2 id="logmein"><a href="#logmein" class="headerlink" title="logmein"></a>logmein</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5078&page=1">题目链接</a><br>ida打开，查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/logmein_1.png"></p><p>还原程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">#define _BYTE unsigned char</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">char v8[18] &#x3D; &quot;:\&quot;AL_RT^L*.?+6&#x2F;46&quot;;</span><br><span class="line">long long int v7 &#x3D; 28537194573619560;</span><br><span class="line">int v6 &#x3D; 7;</span><br><span class="line">char s[18] &#x3D; &quot; &quot;;</span><br><span class="line">int i;</span><br><span class="line">for(i &#x3D; 0; i &lt; strlen(v8); ++i)</span><br><span class="line">&#123;</span><br><span class="line">s[i] &#x3D; (char)(*((_BYTE *)&amp;v7 + i % v6) ^ v8[i]);</span><br><span class="line">&#125;</span><br><span class="line">printf(&quot;%s&quot;, s);</span><br><span class="line">return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p><h2 id="getit"><a href="#getit" class="headerlink" title="getit"></a>getit</h2><p><a href="https://adworld.xctf.org.cn/task/answer?type=reverse&number=4&grade=0&id=5082&page=1">题目链接</a><br>ida打开，查看main函数伪代码：</p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/getit_1.png"></p><p><img src="/2020/11/28/%E7%AC%AC%E4%B8%80%E5%91%A8%E5%AD%A6%E4%B9%A0%E4%B8%8E%E5%81%9A%E9%A2%98%E8%AE%B0%E5%BD%95/getit_2.png"></p><p>还原程序：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">#include &lt;stdio.h&gt;</span><br><span class="line">#include &lt;string.h&gt;</span><br><span class="line">int main(void)</span><br><span class="line">&#123;</span><br><span class="line">int v5 &#x3D; 0;</span><br><span class="line">int v3;</span><br><span class="line">char s[100] &#x3D; &quot;c61b68366edeb7bdce3c6820314b7498&quot;;</span><br><span class="line">char t[100] &#x3D; &quot;SharifCTF&#123;????????????????????????????????&#125;&quot;;</span><br><span class="line">while ( v5 &lt; strlen(s) )</span><br><span class="line">            &#123;</span><br><span class="line">                if ( v5 &amp; 1 )</span><br><span class="line">                 v3 &#x3D; 1;</span><br><span class="line">                else</span><br><span class="line">                 v3 &#x3D; -1;</span><br><span class="line">                *(t + v5 + 10) &#x3D; s[v5] + v3;</span><br><span class="line">                v5 &#x3D; v5 + 1;</span><br><span class="line">            &#125;</span><br><span class="line">    printf(&quot;%s&quot;, t);</span><br><span class="line">return 0; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输出结果即为flag。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Markdown基本语法</title>
      <link href="2020/11/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/"/>
      <url>2020/11/20/Markdown%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="b12d307a96b0a60527cf05c748b172d8fef2a7c7a7d41143c3f31d8c9fcced79">6b1b02503d42adde6797957f014bb67b7e9937df2a228043d2198a93289f3f9e670b258531abbe20302c932af37152e9362a524ab611a0854221de618a2f3b953cfb1d1ef04c03c8eb002cb0ba64e61993c6a8d1eabc8678d9653ce9f68007497057339083f2b20ebd961f837409b7018c402e671610ffabe0eb30fff9abe319f884ffa0969c96314d29432d9f74f80bceb7569a9a3ef6d11544be3cb8727a277ac5238668398fce22bb5147f61c4dc30a9c69e8286e637ab4abf3feb8e38bf46083e199a9d8e8cdf5178f8863d4ecccb4c7b31e8bd8ed0c4774550ab3701b92bd96e4c147915857cd1fb407ffb916da4ad1687a52af281c02c46a4b21771008336cc6c6f418e6627ebe659fe82dc586b7a873d08f38871cc1ca88075cc9f4d9a6aa9b0f6d485a1f6efe3c1f3429dab522183abaebc180e31d27801ab396420762351b5027766af40a63f703ab71b46197acf4c083193f1d4a06b38c3b2b1cfb84920393244c07939aefd97536053ec8f1d82be6f06372c8b4c65b33433f1abb899061ca69d7975d7213b6e61cb4bf185c6ab015e078568ce4bf8aadba305201e51563214e4c3da63bede7d6417354257f5b1637e53cf0c30bb921b8828b4f1c8271020bbf290455170b64eb9de57e4eba3c525352f54869982ae26255bdc8e707e0d2c24706f99ff4e32bcd67bef9dbf9904aad8de6513bf51f24d396c5dff34d57fe6adb34d07f7f4eace2f5338b3e06c9d3b838b521ed686b86c544bac8f59d3e006dcdbaacc18499e2e3d320d7940f540bb032ec5ce0ffeba485cb3e4b14df78436ed1d960ba7dc2767feea89892b9629918191bd0284c54cf9cb20c13d5650528a929bfe171717e73c37b2c3fc09a5b67fdc16784cc7e975b477a8bbba454303a6f4ed6a2dde56b1000b62ccff7763d2fa573f36b1f48faf3611c9aeaa1cd03743ea83a65d6b8568e96eed67da87dddb71ab6dfa9e32d1db3464ab3de63b3cc7e3281e9165f3f0d5d2f3145d77a8723a4c4892621b549578b697efe9ded3554e88ffd13955713d2f2e8fe291710c93fa90b385fbfa05252dcdcc1e2dc2b2b19dbe22ae4b453a48f6d25e7524eb34d8a04519fb726f32144e31275a1aa6f634d5b9f372370697aebf7cad60c51acf6444e724c6bb910dba100aba3c17f84b4926230a3fcb642893f5f79c0d90387487e11b85a6467b10477eff6fe90721f1b3025f31b35e0b60cb4d1870131fe25466d6ffca1293ff725cb9d79c2f2aba6c69bce80e34e965f86a80e677c9d388b6e5e739baba45bcfac0fe31f56624cda4202376dc688e0932284bea3501c7a7ac468e2c273aed58e53d84035f84905209b0a9989ced02b7e3317fd9ba270131d3554d8b748f90a5c04682fca931e8de5b040bcf7631c4b326ada0745efcea03adc8a0e6ce638f0768d335d1bac4ba79cc89eedea46769cc65795cb2b1491b743d70f948970b46d7bdd84262f910a05682e782aa419cea650f1112845f348f870bfa4ab72c52a7dd479d23acfc7108bd6a8ea4e50e14690a337c9fa255be5b156e976ba1e1ec7db8bfd13a17328220d3a4f20d437ceae7b37d57914350ad188b03912a5acba1cde772e4e955bb6b12ef98fd4da31f45ade9db1c51ea5f46e8fea96c44e43a98827e5954494a7b3476fb334027900407de98f6bb39db43466d4a748232232295fa9b8afb4cbac1530efe443d97d32c631f592e4f7ba1c930b69869ade16bcf4e464b39d19d29f35f0594f13e0f4a63d1647e3200e6098533daa4f702c47f1f62c9cbcd18795095862cde942d9a8f4bf9dcd13a8ffa0c35c596e64432944d1152b04df383c1665d9913fc13b1409192d893de78458d1a908a84ca3febe885694e118d0d2c3008e033af7bec717f60246772abdac31e0ce0cdb1069260217bfd4fa0bf05aa883bee609815622d71f17753b644d5e48f972bb73eacbd98b3e1e1b5cbcc5986fd54cd3f2ca47525990c4bb082faee863e723b53efd369bbcc5551bfb6507743958ada40713c65c88157c3cf05a2b39ac9f5d5eb3119b15ca6e883f5075e395889f068fa8eb5c1ff20e7adda972ec2151a7e776a2bdbbd4b3d52f3deeba842fc1408aadd0e74bccb2bc5189a2185c0cb885ffbfec507f41c92223ef5ab0244dd93e9266af7c9dbe3a7ba4c7c6e1758deb1e5e2c577184f3bd0e23e678cf0fb44818c391f102203668db190903d8bc2248381007c6ff02df363b766ad68aac1d5b766b0aa188eb91357bc516470d360b0db666d847fd12a23b577e0e641cbd8ef0a8908da76b217b6185efc22fa2b37dcc6cca6e2492af85342dc61caae4446d0967388b7ff34d69070a89dbd4e712c4243e30932818eb4931f1b2bbe197b81df3f42364242e7a64298369cdfa36ae9a3176009c69cf153d07f9dd8eb0ff5f528acd9d3b8b5959c61af387fe73f86a332792e19601899c96a0705386913aa2f32244d0fb15cb378a3e90fabe5b417401e1e5c6b4fd01a5a54758dbdfe5de229d78fb29861d69e0cbfe656b650e104a7dbcc8cb8afb176c5582ea58c7d5440d495a2c186bbd221b57cf77bf4a62ce959729684d95b7c07206b54ec5decc249bfbe0eb2e22d4d41cb8d136561e617f956c9c22dc9f24e527a3b0d46af8d92f359b0f1abf673f9b931c731033ea2b3945289fed5204e7189a00ae78f6ac94a1f4adce92eb2c17c0561f74a0153785a9d13e473147acda72d29f1efd78df81c4649b13a6c38dcbb650b7023981f7abe914ca11e24f79056f568cfbc9b41c229f7c62386700ff1db5df17af2313cd319e0321a5d026a900308d1599914f37f865eea1d5ebc438d92e46401a5587c9579765c51d160d7065ae306e38e80dc443d7bc99246581df7fa032d2345ace695aff989971b4e89bb8b4af8ad2b67e3e57913f3ec3ea079396f2396b0712bc27f8ab207946df910234927ac7995433891d1bf0eb6b2f801f0eac8db28a3a2a0106322361cef23611b435f7cd2bdd854df97ede62f2aa5e563dd88b5b478fc1c1c62a726d261edc0e9bc3e655f8829864f6633d917e4881f38d7b7e9299a23047c0add566830b4b50c53de78268f100fa518488429e1a74e9c02e9bb49f83a54c0852d6f92c676a6f35cc67d39366141b555ae4ed7e68c5c4254c41b5137b49541f0c17a8979c55649ae14f5380438a2648a6801402d676e5e8a2ab237f7a91b660b3c9705e2850e9136b9160be60fde2833ee2c4b3e6d7b3c4e6d1c23d29bea682db55b5a9f876af220d8e58907ec22e9e76fe579e209e202fa19917b857bd884f3293d9e8f3fe06ffca5b31ef57a79d501c50b43d7ccdb2d361194208c62bae11dce172c8d6f51c3c06143261a34d90d326e3735b4dce20bdd21995fe24f79236ef49174c24e5802cdd7f767d8f55a25a840ec6470f532d18b1539b49a2d25824b5fc387a430f7ed124d096d52082f0e26311911d85095a6e01d97f1544eb6502b1ee6b077388492328eda74a3d73a86c1ed06c8cec16330f465c86c71dde94007d3a3a48ee5adb1df50607fcca6db3368b52224a0e588f17c7a6dc03501462e85c33f22eade966ffbd38e10a9c32aeec4e7d89a6647387eafd280c38072bc86a261a705033ebae085eef52e5988fb0b10ac15bd6786c9255753302b1155b3eff6a50302d8858066b7c03bbf164d3be62f1348be9843f5d7018d79b70106230385544efe1a78e82940a8cdb8c83e438b4b1cba9aafdd9e56e2771d0d3d4ea86b0680110c0a8325a3692c5cbb1c075134bd1f4553cf7954d0fff9278e88161d4ed351d170b5c604e6a496d87ed4272a867f4e93f1165235e654ed6d0467c892b1c95ba6e3b2471a2608eccea10707393cecabc6e41f0d1ee73359d0cc244cd6ce48105595a5e76e0e3006ce767b846265f86ea8d159d51c10d39320373540f457565f893e0422449d10972f971b7d9a1554aab644476b217b57e990eebed2071c4e2b933736997ec2e660203405117ba6ee1f425df48696b92edeacc33473247a9fd4ecbba9a872b0a37f48b4c5faf6a04364dd388fe8a118bbb1d22bf122b5efad0b871b20d37ee838e284a240aa80ee4fc8a6b74653d8a4fd6f555011b007358f9ab87bd09d0ec4ead1bdda3ef5af3105cbbd94e2457d08da7e8a18451d01839929ba180dcab3e66df9811e553d1c34c05ac320182582cb2d313cd3d943acf829cc8283d3db5610f384e30e8071c880556c7cb3c5f8c55957428e36334128e1f2a64b1065c797906ca405c26d54c5edb5549997cab8b94112d28dc0cebf29fbdaf68e90a9973f3aed2d601ca76a65e505f65391a7770b60a4fd87fa8d2602331c0448cb5c522348ab596891943b8781eb97b787fce0cf4241a8ca32979983785a182d41901bdefb701e33ad941b992ce4d3c5ec25bdf2ceb39f15c44e8da52d8e8e97a84f1bb1e380f5eea2f504f94026d0aedd515756e159673dda8cece61bdcd3c2e8d2c871ef66ec6f9119393a0fd9d869127b3a331c9942a376539819a1d9f321f16b6e8db8de57d8f08c31b657877b553e066a2756a7f755e36e584ece3517153b4f72738a356cb5bd0d8d0100be066a8b530c38d315e12d2b22db047f7bbf41bf4a9967b09b781f73818ee401bab1ce3a0d73233d10213b571718e86c8f0f7044622d2c254febc</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>前n项和</title>
      <link href="2020/11/19/%E5%89%8Dn%E9%A1%B9%E5%92%8C/"/>
      <url>2020/11/19/%E5%89%8Dn%E9%A1%B9%E5%92%8C/</url>
      
        <content type="html"><![CDATA[<div id="hexo-blog-encrypt" data-wpm="Oh, this is an invalid password. Check and try again, please." data-whm="OOPS, these decrypted content may changed, but you can still have a look.">  <div class="hbe-input-container">  <input type="password" id="hbePass" placeholder="" />    <label for="hbePass">Welcome to my blog, enter password to read.</label>    <div class="bottom-line"></div>  </div>  <script id="hbeData" type="hbeData" data-hmacdigest="3a2315b8917d7c4780dc79151ee48bcc56f7b0d7f7e40a5b1a11d0e49b86460e">3a3ff451ff1abc6252ddf110d79b2f339f19f1d063a9fd974d37a5961ab77e952c6502a7090fca8326aa579fc0128816912233789020122ab486a342d6abc1f2b805d93a13db399e3b82f46119a9ccfa40107009317ab8aaa3de7b21d0b8da6a7a1ff7e0916f07be39df30428163c3c3fa3108db93aa50eb1011e62a9f06e559c3b9d58a04f432022479d553a2247cd8db7340b5a6ec727b83ba06853aa1133b218b8031fef3ce7046ca1d7cd72af8f285a21a160601cce53ae9c7adbe0615ec8e045b94c67667779242503865b9d4f70e6db609d3f4f7cac50a3b4903aaf36c7a6e98cbde93d2917024f7ddb34db2282f45d2f9d8c06a4e3edcf6acfdda2e3c74d29449ead999d019e00ee0e55561607c15c009d17ec5e7c991c7c1125a8d82827e6aade96a9f6ced675f86be860413d81a06955959f323096146b5ca6004b9a209b54daf14199b4347760d2eac121d0caaa26777943e17c1eb6ecff123b9707b6bc032fac401bd1f1f9d175b12c8f744a6eb113a2562c36c325d996316434a961ce445eec1b5e3ab618652362fe17c008f28a6f64ac4e8a4c9cdf70337f9631430ec1a692dfae2b166808833ba7fa305e3aff7dac1718fe7d1a8072f04fe997ef399f7d99862bc38def1acc54d91395a8323758092379121357ff44efe7d7939b6974a42edd88c004f2a32fa267b0a2403f078f860aab1cff13ef85fb6f0bea7a616b9055ba567df5558d751377228bb2ee384a82bbf8d4012c3feef3d93f78d67823f5691b3c5727db275d15cb2d61ef56a82a512ca79c6fa7e1378d51a2d555a349360655273897ebc17af73b3eca27a020609dfb00fdf060e5d7b41efb3b83c6417d4ed2bbab629ae883c8e23950b524c4f816695816775878ec64597f96f9785b98e8430122ea9f74318956ae690ac04fdb256441a530c4767c17074eeb02840ea9243f3711b70fb0d76c76e162e5c269c1792dfc519099ed54ce2a0954d94160b73b6c6e57ee41527c1e15d36cb7f7a62f7a4b440b03d9cf93e4187a617174483073bab5eb6f309f811afa4e0c5d88f1fdd145c93b7c9a4285a5ded9922af8958a096a4c3eedd96b2e32b94417b5f23bdd62eea5e5c8599d6670f194d16c3fe133c105bd267c5f71aaf1e02f2ee33549495546874a2313a081c384b05ef11752a3c69b5cea0f078c479a75ab73db21d66e24bdeb8ef15bc16bd42bfabe336d266bc967f437809195fc215b1ddbea0e66478d35aded02c0e9ed9c215e44d083b2b6c3752395c472c952f3ab681e5b97f1d6639a135b4e27833a08e4db092598db076cbffaab92418ac350054d5d2fb57739b5bde1e6244c6310d814ca8936cb7b47c2439cdc77617b7a7d28318652aef6a7be76760dcb383cb3af5197b1cca4a515787f861e9e3bcba2eb133ee3e23fe76c01a7a90c101ce8cb058dded789af67d4b9c3a1fc1264218cd775465e6c05400b1fdf526f86aad2ee4d46fc51d629ddd068fd05cad9af65660ec99d911bc9718d1bd641f8aad3950a6994c14d611029de0c06b4dc6c267e174de96488f567eb79834a77bab72bbbad71923ff2a15fe8f6bee4efa0799843058087572f4aaecffea3773aab81d9e3ef8e566543946feab182d4f6e2926169d8e27df80bee38d70ee6a4b83efe6207976a1d299d7b36a78f76496bc5df0e73ad83506634e98d0e214edea414872e4a14452df09a017d4357f9d784e0c309b9e13dd5fa08cdcc9ccdef77d3f3365f1062189c82bef0c2b0e7a032edc217b9b2ce9f21e204f1c71580455ee3e3bff239e4c5ec0e427a7cea61c16057f2b6850a16570061f3a568a47714d6770190c50496e524443725dc28169488f53355b8ed99d7ea12dbca82bd95723fd214c162cc1e4ceb8b9af41851e97a32e5f1f4c75986a1d53a939f60da83feda748c7a143aaa14569d375a0852683ef4cb1e7ed99f479f109b5ef21589db3059f3ae8645f9ce6d27b3c514afc7b0a7dda753df856e659f687c27a055b387d274b181e6a673ef1b620e0f7651bc95c3e2561744bb365636c1208c6ae631f35afa7824321a44966edeffeb55a2b28b6685adbb8d687f0cf057d3cb16892c1db4051d02bf7001cb95e259a3d4eb1f1ab5aaf2f8ed2b0da6a5cf91fb0237edf831cecd29521a6101cb83f15d5dcc9d53095d66e3f9b61fc15ac98d7c7d9d3a8608adf08d3c8c3a7cd7aa7d43f78d0dab24260fce6d9cb7bf2b9bf3fac7817a17e765f6436b7f1e374eaa3d0a9470283bb3f100cb65823a6902ef7ddb40e445e8454c1038d6213c90ceb441bc2c79174517bf1958ff8efaa432d603d7133faf4bfb89af41d58333f80c7ca3f9e759807cae9be35800ad1d757fe3f4c644d739fdb3469869bee37348ac68cfc2b6e922b8b50d3fbbb0d4b025d1fa99bfd04cdac357fd39c5dff5c4100580a083df2a7ceddcc10c65f4c37bfdefdd6f52c70ae924016f24ea0f062c39fb07598466c3b1eab58f94c8ceb4a0a2b39226b42339fd8a6aca5ba04ae8c3eaf5f5107c6a7a1b3cce30ed77b7cb20ecdde699b34680cec5750b8ea9ed7b2f7a73ff2e76b1439a0aa237e3dfba2376dd16960b74d2c235c3b5b3c595eaa04bbc439bceb349bdad997aa9c5107f40dba279c8c77e7e9843970dfc98ac8c03191dabb81b8b322596703030dd9c801467e15537b0bb5685568f580f573cabfd4bbe303c6d6d4b97770f5fe00874befa4c00cffd40849502165caabcaa204c2a15cc77289942781511badf67e6e86f15f0985e86b8c32844b9d93721086011bfac07658647639107766491b62540954d512e2b2fb88e7ea7c672d3d3ea2379edd7ca5f7821c57cbf92682750db8fe4dc157e2795197f711a77464ecbf7d4ac74134fd2c3f5183656567e485ccd4894aa7e26e335dae8078895d96f5f2cbe3a227bd388bf160291240faf8a294ce58080c4710a602f7caccfb462b24d1fdd4fd81cf49c5d0ccdce0aa315c25de639ee0ef9b2bd6e09b35a7b62dae10c79cd846ae9d9cbd2fd25a74c3cbc798e2dc7579b999435f1ed875135a277f392e75379ddf4eb098ff277425020f0a212fc9c621602fd5f88032ad1a558145d9cbe034e65e07cc3bd92902402081e408dede64e111032b71f0a66a43540401546fe84a003976da2b63ec8b9b38c1cef32f559145e5c32d7eb200185e9f9e2187667ecaf849c571e7d82b395371f42d9100a4f6418ea3391e284bb4a4d2223599e8ed59cea95f8c2a1b2a51c20c1e23dcec9b9e2e91c2dc715504405bcd52e0e66d0d4452c5bf4337e79a954222eb6c957913b22c09b3a452729bb53cc8d590d863c44edbd2600e8cf31b3769255eed15730209e3b730871abd3f49432140efa40f2b3dab966da6687a038b2c835c693f34a96629fd484796a6da998dc86e2c47554633dc74bf6e3d1168d51fc515d9f467b6dff99f2546f77ef36ddbc07ac7a18b1af8b6aa4e3cec6eb5493dfc51a2f1c816bb4b6261681c35d69e0b3270de3d7bd3d5ad40a5bd66db7d7ed0408e250f6ab5ea477a34d719972c6babdb1ea8f1031d45d9a7acbe53616378994c91eabf5c4707fceefc408550874c07b2e735d3cea645e90f9b5e3c53e6a4e5600332509bfa381641d7fdcd843adc97f538fa885ec586757befec8bf0370738e9325fd2af25a2de75e8c710eb0ef1598562bc0bb8b6a0d9c84f5a03fbba3fd59ad9336e05ff524c416825746d672979f705c5b41eb7476dabfbd3db21b374f1724c8bc66395b60e2a2de213cb43fa9a6eb2039a19fce62262d80e2bb221f87f69c4b165ba13be81a753de70f8e40c7f151d72ca92e3cf7f7143e39301b4403a9a19956b344590dd8e37537ba8f865e5e65a39d3f957fe9d25530ee5a5a877e8a94a2044ea0fb18db5c63232d4e0d6c6827f154dd99d8a1bf8d580e72ee9ffb0f5863fb5569a3686ece00fb0aeace75431208cbfe4fd7a440c1f4354be7f9968fd5de7690876b5f5e74bffeb39a0519d736e04034232d9660ab5d6007ef58a6a98bba488cd5dc78ecabae35ee6fe21ac3279b4df75ec0b712f040bed9248</script></div><script src="/lib/blog-encrypt.js"></script><link href="/css/blog-encrypt.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/19/hello-world/"/>
      <url>2020/11/19/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><a id="more"></a><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
